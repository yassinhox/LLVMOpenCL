; ModuleID = 'test.cl'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v16:16:16-v24:32:32-v32:32:32-v48:64:64-v64:64:64-v96:128:128-v128:128:128-v192:256:256-v256:256:256-v512:512:512-v1024:1024:1024"
target triple = "spir64-unknown-unknown"

define cc76 void @addition(<2 x float> %alpha, float addrspace(1)* nocapture %x, float addrspace(1)* nocapture %y) nounwind {
entry:
  %call = tail call cc75 i64 @_Z13get_global_idj(i32 0) nounwind readnone
  %0 = extractelement <2 x float> %alpha, i32 0
  %1 = extractelement <2 x float> %alpha, i32 1
  %add = fadd float %0, %1
  %arrayidx = getelementptr inbounds float addrspace(1)* %x, i64 %call
  %2 = load float addrspace(1)* %arrayidx, align 4, !tbaa !9
  %add1 = fadd float %add, %2
  %mul = fmul float %add1, 0x3FD5555560000000
  %arrayidx2 = getelementptr inbounds float addrspace(1)* %y, i64 %call
  store float %mul, float addrspace(1)* %arrayidx2, align 4, !tbaa !9
  ret void
}

declare cc75 i64 @_Z13get_global_idj(i32) nounwind readnone

!opencl.kernels = !{!0}
!opencl.enable.FP_CONTRACT = !{}
!opencl.spir.version = !{!6}
!opencl.ocl.version = !{!6}
!opencl.used.extensions = !{!7}
!opencl.used.optional.core.features = !{!7}
!opencl.compiler.options = !{!8}

!0 = metadata !{void (<2 x float>, float addrspace(1)*, float addrspace(1)*)* @addition, metadata !1, metadata !2, metadata !3, metadata !4, metadata !5}
!1 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 1, i32 1}
!2 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none"}
!3 = metadata !{metadata !"kernel_arg_type", metadata !"float2", metadata !"float*", metadata !"float*"}
!4 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"const", metadata !""}
!5 = metadata !{metadata !"kernel_arg_base_type", metadata !"float2", metadata !"float*", metadata !"float*"}
!6 = metadata !{i32 1, i32 2}
!7 = metadata !{}
!8 = metadata !{metadata !"-cl-std=CL1.2"}
!9 = metadata !{metadata !"float", metadata !10}
!10 = metadata !{metadata !"omnipotent char", metadata !11}
!11 = metadata !{metadata !"Simple C/C++ TBAA"}
