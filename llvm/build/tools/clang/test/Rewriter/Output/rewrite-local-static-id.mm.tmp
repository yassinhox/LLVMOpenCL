; ModuleID = '/home/jazouani/llvm/build/tools/clang/test/Rewriter/Output/rewrite-local-static-id.mm.tmp-rw.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__f_block_desc_0 = type { i64, i64, void (%struct.__f_block_impl_0*, %struct.__f_block_impl_0*)*, void (%struct.__f_block_impl_0*)* }
%struct.__f_block_impl_0 = type { %struct.__block_impl, %struct.__f_block_desc_0*, i8** }
%struct.__block_impl = type { i8*, i32, i32, i8* }
%struct.objc_object = type opaque
%struct.objc_selector = type opaque

@_ZZ1fvE3foo = internal global i8* null, align 8
@_ZL21__f_block_desc_0_DATA = internal global %struct.__f_block_desc_0 { i64 0, i64 40, void (%struct.__f_block_impl_0*, %struct.__f_block_impl_0*)* @_ZL16__f_block_copy_0P16__f_block_impl_0S0_, void (%struct.__f_block_impl_0*)* @_ZL19__f_block_dispose_0P16__f_block_impl_0 }, align 8
@.str = private unnamed_addr constant [5 x i8] c"foo2\00", align 1
@.str1 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@_NSConcreteStackBlock = external global [32 x i8*]

define void @_Z1fv() nounwind {
entry:
  %tmp = alloca %struct.__f_block_impl_0, align 8
  call void @_ZN16__f_block_impl_0C1EPvP16__f_block_desc_0PS0_i(%struct.__f_block_impl_0* %tmp, i8* bitcast (void (%struct.__f_block_impl_0*)* @_ZL16__f_block_func_0P16__f_block_impl_0 to i8*), %struct.__f_block_desc_0* @_ZL21__f_block_desc_0_DATA, i8** @_ZZ1fvE3foo, i32 570425344)
  %0 = bitcast %struct.__f_block_impl_0* %tmp to void ()*
  call void @_Z3barPFvvE(void ()* %0)
  ret void
}

declare void @_Z3barPFvvE(void ()*)

define linkonce_odr void @_ZN16__f_block_impl_0C1EPvP16__f_block_desc_0PS0_i(%struct.__f_block_impl_0* %this, i8* %fp, %struct.__f_block_desc_0* %desc, i8** %_foo, i32 %flags) unnamed_addr nounwind align 2 {
entry:
  %this.addr = alloca %struct.__f_block_impl_0*, align 8
  %fp.addr = alloca i8*, align 8
  %desc.addr = alloca %struct.__f_block_desc_0*, align 8
  %_foo.addr = alloca i8**, align 8
  %flags.addr = alloca i32, align 4
  store %struct.__f_block_impl_0* %this, %struct.__f_block_impl_0** %this.addr, align 8
  store i8* %fp, i8** %fp.addr, align 8
  store %struct.__f_block_desc_0* %desc, %struct.__f_block_desc_0** %desc.addr, align 8
  store i8** %_foo, i8*** %_foo.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %this1 = load %struct.__f_block_impl_0** %this.addr
  %0 = load i8** %fp.addr, align 8
  %1 = load %struct.__f_block_desc_0** %desc.addr, align 8
  %2 = load i8*** %_foo.addr, align 8
  %3 = load i32* %flags.addr, align 4
  call void @_ZN16__f_block_impl_0C2EPvP16__f_block_desc_0PS0_i(%struct.__f_block_impl_0* %this1, i8* %0, %struct.__f_block_desc_0* %1, i8** %2, i32 %3)
  ret void
}

define internal void @_ZL16__f_block_func_0P16__f_block_impl_0(%struct.__f_block_impl_0* %__cself) nounwind {
entry:
  %__cself.addr = alloca %struct.__f_block_impl_0*, align 8
  %foo = alloca i8**, align 8
  store %struct.__f_block_impl_0* %__cself, %struct.__f_block_impl_0** %__cself.addr, align 8
  %0 = load %struct.__f_block_impl_0** %__cself.addr, align 8
  %foo1 = getelementptr inbounds %struct.__f_block_impl_0* %0, i32 0, i32 2
  %1 = load i8*** %foo1, align 8
  store i8** %1, i8*** %foo, align 8
  %call = call %struct.objc_object* @objc_getClass(i8* getelementptr inbounds ([5 x i8]* @.str, i32 0, i32 0))
  %2 = bitcast %struct.objc_object* %call to i8*
  %call2 = call i8* @_Z16sel_registerNamePKc(i8* getelementptr inbounds ([2 x i8]* @.str1, i32 0, i32 0))
  %call3 = call i8* bitcast (%struct.objc_object* (%struct.objc_object*, %struct.objc_selector*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %2, i8* %call2)
  %3 = load i8*** %foo, align 8
  store i8* %call3, i8** %3, align 8
  ret void
}

define internal void @_ZL16__f_block_copy_0P16__f_block_impl_0S0_(%struct.__f_block_impl_0* %dst, %struct.__f_block_impl_0* %src) nounwind {
entry:
  %dst.addr = alloca %struct.__f_block_impl_0*, align 8
  %src.addr = alloca %struct.__f_block_impl_0*, align 8
  store %struct.__f_block_impl_0* %dst, %struct.__f_block_impl_0** %dst.addr, align 8
  store %struct.__f_block_impl_0* %src, %struct.__f_block_impl_0** %src.addr, align 8
  %0 = load %struct.__f_block_impl_0** %dst.addr, align 8
  %foo = getelementptr inbounds %struct.__f_block_impl_0* %0, i32 0, i32 2
  %1 = bitcast i8*** %foo to i8*
  %2 = load %struct.__f_block_impl_0** %src.addr, align 8
  %foo1 = getelementptr inbounds %struct.__f_block_impl_0* %2, i32 0, i32 2
  %3 = load i8*** %foo1, align 8
  %4 = bitcast i8** %3 to i8*
  call void @_Block_object_assign(i8* %1, i8* %4, i32 3)
  ret void
}

define internal void @_ZL19__f_block_dispose_0P16__f_block_impl_0(%struct.__f_block_impl_0* %src) nounwind {
entry:
  %src.addr = alloca %struct.__f_block_impl_0*, align 8
  store %struct.__f_block_impl_0* %src, %struct.__f_block_impl_0** %src.addr, align 8
  %0 = load %struct.__f_block_impl_0** %src.addr, align 8
  %foo = getelementptr inbounds %struct.__f_block_impl_0* %0, i32 0, i32 2
  %1 = load i8*** %foo, align 8
  %2 = bitcast i8** %1 to i8*
  call void @_Block_object_dispose(i8* %2, i32 3)
  ret void
}

declare void @_Block_object_dispose(i8*, i32)

declare void @_Block_object_assign(i8*, i8*, i32)

declare %struct.objc_object* @objc_msgSend(%struct.objc_object*, %struct.objc_selector*, ...)

declare %struct.objc_object* @objc_getClass(i8*)

declare i8* @_Z16sel_registerNamePKc(i8*)

define linkonce_odr void @_ZN16__f_block_impl_0C2EPvP16__f_block_desc_0PS0_i(%struct.__f_block_impl_0* %this, i8* %fp, %struct.__f_block_desc_0* %desc, i8** %_foo, i32 %flags) unnamed_addr nounwind align 2 {
entry:
  %this.addr = alloca %struct.__f_block_impl_0*, align 8
  %fp.addr = alloca i8*, align 8
  %desc.addr = alloca %struct.__f_block_desc_0*, align 8
  %_foo.addr = alloca i8**, align 8
  %flags.addr = alloca i32, align 4
  store %struct.__f_block_impl_0* %this, %struct.__f_block_impl_0** %this.addr, align 8
  store i8* %fp, i8** %fp.addr, align 8
  store %struct.__f_block_desc_0* %desc, %struct.__f_block_desc_0** %desc.addr, align 8
  store i8** %_foo, i8*** %_foo.addr, align 8
  store i32 %flags, i32* %flags.addr, align 4
  %this1 = load %struct.__f_block_impl_0** %this.addr
  %impl = getelementptr inbounds %struct.__f_block_impl_0* %this1, i32 0, i32 0
  %foo = getelementptr inbounds %struct.__f_block_impl_0* %this1, i32 0, i32 2
  %0 = load i8*** %_foo.addr, align 8
  store i8** %0, i8*** %foo, align 8
  %impl2 = getelementptr inbounds %struct.__f_block_impl_0* %this1, i32 0, i32 0
  %isa = getelementptr inbounds %struct.__block_impl* %impl2, i32 0, i32 0
  store i8* bitcast ([32 x i8*]* @_NSConcreteStackBlock to i8*), i8** %isa, align 8
  %1 = load i32* %flags.addr, align 4
  %impl3 = getelementptr inbounds %struct.__f_block_impl_0* %this1, i32 0, i32 0
  %Flags = getelementptr inbounds %struct.__block_impl* %impl3, i32 0, i32 1
  store i32 %1, i32* %Flags, align 4
  %2 = load i8** %fp.addr, align 8
  %impl4 = getelementptr inbounds %struct.__f_block_impl_0* %this1, i32 0, i32 0
  %FuncPtr = getelementptr inbounds %struct.__block_impl* %impl4, i32 0, i32 3
  store i8* %2, i8** %FuncPtr, align 8
  %3 = load %struct.__f_block_desc_0** %desc.addr, align 8
  %Desc = getelementptr inbounds %struct.__f_block_impl_0* %this1, i32 0, i32 1
  store %struct.__f_block_desc_0* %3, %struct.__f_block_desc_0** %Desc, align 8
  ret void
}
