; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/Coverage/codegen-gnu.m'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"
target triple = "i386-unknown-unknown"

%0 = type { %0*, i32, [6 x { i8*, i8*, i8* (i8*, i8*, ...)* }] }
%1 = type { %1*, i32, [1 x { i8*, i8*, i8* (i8*, i8*, ...)* }] }
%2 = type opaque
%3 = type opaque
%struct.__objcFastEnumerationState = type { i32, i8**, i32*, [5 x i32] }

@0 = private unnamed_addr constant [4 x i8] c"fm0\00", align 1
@1 = private unnamed_addr constant [7 x i8] c"v8@0:4\00", align 1
@.objc_protocol_list = internal global { i8*, i32, [0 x i8*] } zeroinitializer
@.objc_method_list = internal global { i32, [1 x { i8*, i8* }] } { i32 1, [1 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([4 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @1, i32 0, i32 0) }] }
@.objc_method_list1 = internal global { i32, [0 x { i8*, i8* }] } zeroinitializer
@.objc_method_list2 = internal global { i32, [0 x { i8*, i8* }] } zeroinitializer
@.objc_method_list3 = internal global { i32, [0 x { i8*, i8* }] } zeroinitializer
@.objc_property_list = internal global { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] } zeroinitializer
@.objc_property_list4 = internal global { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] } zeroinitializer
@.objc_protocol_name = private unnamed_addr constant [3 x i8] c"P1\00", align 1
@.objc_protocol = internal global { i8*, i8*, { i8*, i32, [0 x i8*] }*, { i32, [1 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* } { i8* inttoptr (i32 2 to i8*), i8* getelementptr inbounds ([3 x i8]* @.objc_protocol_name, i32 0, i32 0), { i8*, i32, [0 x i8*] }* @.objc_protocol_list, { i32, [1 x { i8*, i8* }] }* @.objc_method_list, { i32, [0 x { i8*, i8* }] }* @.objc_method_list1, { i32, [0 x { i8*, i8* }] }* @.objc_method_list2, { i32, [0 x { i8*, i8* }] }* @.objc_method_list3, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* @.objc_property_list, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* @.objc_property_list4 }
@__func__._i_A__im0 = private unnamed_addr constant [9 x i8] c"-[A im0]\00", align 1
@__objc_class_name_Root = external global i32
@__objc_class_ref_Root = weak constant i32* @__objc_class_name_Root
@__objc_class_name_A = global i32 0
@2 = private unnamed_addr constant [4 x i8] c"iv0\00", align 1
@3 = private unnamed_addr constant [2 x i8] c"i\00", align 1
@__objc_ivar_offset_value_A.iv0 = global i32 0
@4 = private unnamed_addr constant [4 x i8] c"iv1\00", align 1
@5 = private unnamed_addr constant [2 x i8] c"@\00", align 1
@__objc_ivar_offset_value_A.iv1 = global i32 4
@6 = private unnamed_addr constant [4 x i8] c"iv2\00", align 1
@__objc_ivar_offset_value_A.iv2 = global i32 8
@.ivar.offsets = internal global [3 x i32*] [i32* @__objc_ivar_offset_value_A.iv0, i32* @__objc_ivar_offset_value_A.iv1, i32* @__objc_ivar_offset_value_A.iv2]
@7 = private unnamed_addr constant [10 x i8] c"v12@0:4i8\00", align 1
@8 = private unnamed_addr constant [3 x i8] c"p0\00", align 1
@9 = private unnamed_addr constant [7 x i8] c"i8@0:4\00", align 1
@10 = private unnamed_addr constant [3 x i8] c"p1\00", align 1
@11 = private unnamed_addr constant [7 x i8] c"setP1:\00", align 1
@12 = private unnamed_addr constant [3 x i8] c"p5\00", align 1
@13 = private unnamed_addr constant [7 x i8] c"@8@0:4\00", align 1
@14 = private unnamed_addr constant [10 x i8] c"v12@0:4@8\00", align 1
@15 = private unnamed_addr constant [7 x i8] c"setP5:\00", align 1
@.objc_property_list5 = internal global { i32, i8*, [3 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] } { i32 3, i8* null, [3 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] [{ i8*, i8, i8, i8*, i8*, i8*, i8* } { i8* getelementptr inbounds ([3 x i8]* @8, i32 0, i32 0), i8 1, i8 0, i8* getelementptr inbounds ([3 x i8]* @8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @9, i32 0, i32 0), i8* null, i8* null }, { i8*, i8, i8, i8*, i8*, i8*, i8* } { i8* getelementptr inbounds ([3 x i8]* @10, i32 0, i32 0), i8 76, i8 1, i8* getelementptr inbounds ([3 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @7, i32 0, i32 0) }, { i8*, i8, i8, i8*, i8*, i8*, i8* } { i8* getelementptr inbounds ([3 x i8]* @12, i32 0, i32 0), i8 12, i8 1, i8* getelementptr inbounds ([3 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @13, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @14, i32 0, i32 0) }] }
@.super_class_name = private unnamed_addr constant [5 x i8] c"Root\00", align 1
@16 = private unnamed_addr constant [4 x i8] c"im0\00", align 1
@17 = private unnamed_addr constant [5 x i8] c"im1:\00", align 1
@.objc_method_list6 = internal global %0 { %0* null, i32 6, [6 x { i8*, i8*, i8* (i8*, i8*, ...)* }] [{ i8*, i8*, i8* (i8*, i8*, ...)* } { i8* getelementptr inbounds ([4 x i8]* @16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @1, i32 0, i32 0), i8* (i8*, i8*, ...)* bitcast (void (%2*, i8*)* @_i_A__im0 to i8* (i8*, i8*, ...)*) }, { i8*, i8*, i8* (i8*, i8*, ...)* } { i8* getelementptr inbounds ([5 x i8]* @17, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @7, i32 0, i32 0), i8* (i8*, i8*, ...)* bitcast (void (%2*, i8*, i32, ...)* @_i_A__im1_ to i8* (i8*, i8*, ...)*) }, { i8*, i8*, i8* (i8*, i8*, ...)* } { i8* getelementptr inbounds ([3 x i8]* @10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @9, i32 0, i32 0), i8* (i8*, i8*, ...)* bitcast (i32 (%2*, i8*)* @_i_A__p1 to i8* (i8*, i8*, ...)*) }, { i8*, i8*, i8* (i8*, i8*, ...)* } { i8* getelementptr inbounds ([7 x i8]* @11, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @7, i32 0, i32 0), i8* (i8*, i8*, ...)* bitcast (void (%2*, i8*, i32)* @_i_A__setP1_ to i8* (i8*, i8*, ...)*) }, { i8*, i8*, i8* (i8*, i8*, ...)* } { i8* getelementptr inbounds ([3 x i8]* @12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @13, i32 0, i32 0), i8* (i8*, i8*, ...)* bitcast (i8* (%2*, i8*)* @_i_A__p5 to i8* (i8*, i8*, ...)*) }, { i8*, i8*, i8* (i8*, i8*, ...)* } { i8* getelementptr inbounds ([7 x i8]* @15, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @14, i32 0, i32 0), i8* (i8*, i8*, ...)* bitcast (void (%2*, i8*, i8*)* @_i_A__setP5_ to i8* (i8*, i8*, ...)*) }] }
@.objc_method_list7 = internal global %1 { %1* null, i32 1, [1 x { i8*, i8*, i8* (i8*, i8*, ...)* }] [{ i8*, i8*, i8* (i8*, i8*, ...)* } { i8* getelementptr inbounds ([4 x i8]* @0, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @1, i32 0, i32 0), i8* (i8*, i8*, ...)* bitcast (void (i8*, i8*)* @_c_A__fm0 to i8* (i8*, i8*, ...)*) }] }
@.objc_ivar_list = internal global { i32, [3 x { i8*, i8*, i32 }] } { i32 3, [3 x { i8*, i8*, i32 }] [{ i8*, i8*, i32 } { i8* getelementptr inbounds ([4 x i8]* @2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @3, i32 0, i32 0), i32 0 }, { i8*, i8*, i32 } { i8* getelementptr inbounds ([4 x i8]* @4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @5, i32 0, i32 0), i32 4 }, { i8*, i8*, i32 } { i8* getelementptr inbounds ([4 x i8]* @6, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @5, i32 0, i32 0), i32 8 }] }
@__objc_ivar_offset_A.iv0 = global i32* getelementptr inbounds ({ i32, [3 x { i8*, i8*, i32 }] }* @.objc_ivar_list, i32 0, i32 1, i32 0, i32 2)
@__objc_ivar_offset_A.iv1 = global i32* getelementptr inbounds ({ i32, [3 x { i8*, i8*, i32 }] }* @.objc_ivar_list, i32 0, i32 1, i32 1, i32 2)
@__objc_ivar_offset_A.iv2 = global i32* getelementptr inbounds ({ i32, [3 x { i8*, i8*, i32 }] }* @.objc_ivar_list, i32 0, i32 1, i32 2, i32 2)
@.class_name = private unnamed_addr constant [2 x i8] c"A\00", align 1
@_OBJC_METACLASS_A = global { i8*, i8*, i8*, i32, i32, i32, i8*, %1*, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i32, i32 } { i8* null, i8* null, i8* getelementptr inbounds ([2 x i8]* @.class_name, i32 0, i32 0), i32 0, i32 18, i32 72, i8* null, %1* @.objc_method_list7, i8* null, i8* null, i8* null, i8* null, i8* null, i32 1, i8* null, i8* null, i32 0, i32 0 }
@.objc_protocol_list8 = internal global { i8*, i32, [1 x i8*] } { i8* null, i32 1, [1 x i8*] [i8* bitcast ({ i8*, i8*, { i8*, i32, [0 x i8*] }*, { i32, [1 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* }* @.objc_protocol to i8*)] }
@_OBJC_CLASS_A = global { i8*, i8*, i8*, i32, i32, i32, { i32, [3 x { i8*, i8*, i32 }] }*, %0*, i8*, i8*, i8*, i8*, i8*, i32, [3 x i32*]*, { i32, i8*, [3 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i32, i32 } { i8* bitcast ({ i8*, i8*, i8*, i32, i32, i32, i8*, %1*, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i32, i32 }* @_OBJC_METACLASS_A to i8*), i8* getelementptr inbounds ([5 x i8]* @.super_class_name, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.class_name, i32 0, i32 0), i32 0, i32 17, i32 12, { i32, [3 x { i8*, i8*, i32 }] }* @.objc_ivar_list, %0* @.objc_method_list6, i8* null, i8* null, i8* null, i8* bitcast ({ i8*, i32, [1 x i8*] }* @.objc_protocol_list8 to i8*), i8* null, i32 1, [3 x i32*]* @.ivar.offsets, { i32, i8*, [3 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* @.objc_property_list5, i32 1, i32 1 }
@__objc_class_ref_A = weak constant i32* @__objc_class_name_A
@__objc_class_name_C = global i32 0
@.ivar.offsets9 = internal global [0 x i32*] zeroinitializer
@.objc_property_list10 = internal global { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] } zeroinitializer
@.class_name11 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@_OBJC_METACLASS_C = global { i8*, i8*, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i32, i32 } { i8* null, i8* null, i8* getelementptr inbounds ([2 x i8]* @.class_name11, i32 0, i32 0), i32 0, i32 18, i32 72, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i32 1, i8* null, i8* null, i32 0, i32 0 }
@.objc_protocol_list12 = internal global { i8*, i32, [0 x i8*] } zeroinitializer
@_OBJC_CLASS_C = global { i8*, i8*, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, [0 x i32*]*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i32, i32 } { i8* bitcast ({ i8*, i8*, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i32, i32 }* @_OBJC_METACLASS_C to i8*), i8* getelementptr inbounds ([2 x i8]* @.class_name, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.class_name11, i32 0, i32 0), i32 0, i32 17, i32 12, i8* null, i8* null, i8* null, i8* null, i8* null, i8* bitcast ({ i8*, i32, [0 x i8*] }* @.objc_protocol_list12 to i8*), i8* null, i32 1, [0 x i32*]* @.ivar.offsets9, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* @.objc_property_list10, i32 1, i32 1 }
@18 = private unnamed_addr constant [4 x i8] c"Cat\00", align 1
@.objc_protocol_list13 = internal global { i8*, i32, [0 x i8*] } zeroinitializer
@19 = internal global { i8*, i8*, i8*, i8*, i8* } { i8* getelementptr inbounds ([4 x i8]* @18, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @.class_name, i32 0, i32 0), i8* null, i8* null, i8* bitcast ({ i8*, i32, [0 x i8*] }* @.objc_protocol_list13 to i8*) }
@20 = private unnamed_addr constant [2 x i8] c"B\00", align 1
@21 = private unnamed_addr constant [12 x i8] c"AnotherHack\00", align 1
@22 = private unnamed_addr constant [33 x i8] c"__ObjC_Protocol_Holder_Ugly_Hack\00", align 1
@.objc_protocol_list14 = internal global { i8*, i32, [1 x i8*] } { i8* null, i32 1, [1 x i8*] [i8* bitcast ({ i8*, i8*, { i8*, i32, [0 x i8*] }*, { i32, [1 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, [0 x { i8*, i8* }] }*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* }* @.objc_protocol to i8*)] }
@23 = internal global { i8*, i8*, i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8]* @21, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8]* @22, i32 0, i32 0), i8* null, i8* null, i8* bitcast ({ i8*, i32, [1 x i8*] }* @.objc_protocol_list14 to i8*) }
@.objc_sel_namep0 = linkonce_odr constant [3 x i8] c"p0\00"
@.objc_sel_nameim0 = linkonce_odr constant [4 x i8] c"im0\00"
@".objc_sel_namecountByEnumeratingWithState:objects:count:" = linkonce_odr constant [43 x i8] c"countByEnumeratingWithState:objects:count:\00"
@.objc_sel_namefm0 = linkonce_odr constant [4 x i8] c"fm0\00"
@.objc_selector_list = internal global [5 x { i8*, i8* }] [{ i8*, i8* } { i8* getelementptr inbounds ([3 x i8]* @.objc_sel_namep0, i32 0, i32 0), i8* null }, { i8*, i8* } { i8* getelementptr inbounds ([4 x i8]* @.objc_sel_nameim0, i32 0, i32 0), i8* null }, { i8*, i8* } { i8* getelementptr inbounds ([43 x i8]* @".objc_sel_namecountByEnumeratingWithState:objects:count:", i32 0, i32 0), i8* null }, { i8*, i8* } { i8* getelementptr inbounds ([4 x i8]* @.objc_sel_namefm0, i32 0, i32 0), i8* null }, { i8*, i8* } zeroinitializer]
@24 = internal global { i32, { i8*, i8* }*, i16, i16, [6 x i8*] } { i32 4, { i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 0), i16 2, i16 2, [6 x i8*] [i8* bitcast ({ i8*, i8*, i8*, i32, i32, i32, { i32, [3 x { i8*, i8*, i32 }] }*, %0*, i8*, i8*, i8*, i8*, i8*, i32, [3 x i32*]*, { i32, i8*, [3 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i32, i32 }* @_OBJC_CLASS_A to i8*), i8* bitcast ({ i8*, i8*, i8*, i32, i32, i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, [0 x i32*]*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i32, i32 }* @_OBJC_CLASS_C to i8*), i8* bitcast ({ i8*, i8*, i8*, i8*, i8* }* @19 to i8*), i8* bitcast ({ i8*, i8*, i8*, i8*, i8* }* @23 to i8*), i8* null, i8* null] }
@.objc_source_file_name = private unnamed_addr constant [124 x i8] c"/home/jazouani/llvm/llvm-3.2/tools/clang/test/Coverage//home/jazouani/llvm/llvm-3.2/tools/clang/test/Coverage/codegen-gnu.m\00", align 1
@25 = internal global { i32, i32, i8*, { i32, { i8*, i8* }*, i16, i16, [6 x i8*] }* } { i32 8, i32 16, i8* getelementptr inbounds ([124 x i8]* @.objc_source_file_name, i32 0, i32 0), { i32, { i8*, i8* }*, i16, i16, [6 x i8*] }* @24 }
@llvm.global_ctors = appending global [1 x { i32, void ()* }] [{ i32, void ()* } { i32 65535, void ()* @.objc_load_function }]

define internal void @_c_A__fm0(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 4
  %_cmd.addr = alloca i8*, align 4
  store i8* %self, i8** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  %self1 = load i8** %self.addr
  %0 = load i8** getelementptr inbounds ({ i8*, i8* }* bitcast ({ i8*, i8*, i8*, i32, i32, i32, i8*, %1*, i8*, i8*, i8*, i8*, i8*, i32, i8*, i8*, i32, i32 }* @_OBJC_METACLASS_A to { i8*, i8* }*), i32 0, i32 1)
  %1 = alloca { i8*, i8* }
  %2 = getelementptr inbounds { i8*, i8* }* %1, i32 0, i32 0
  store i8* %self1, i8** %2
  %3 = getelementptr inbounds { i8*, i8* }* %1, i32 0, i32 1
  store i8* %0, i8** %3
  %4 = call i8* (i8*, i8*, ...)* ({ i8*, i8* }*, i8*)* @objc_msg_lookup_super({ i8*, i8* }* %1, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 3) to i8*))
  %5 = bitcast i8* (i8*, i8*, ...)* %4 to i8* (i8*, i8*)*
  %call = call i8* %5(i8* %self1, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 3) to i8*)), !GNUObjCMessageSend !0
  ret void
}

declare i8* (i8*, i8*, ...)* @objc_msg_lookup_super({ i8*, i8* }*, i8*)

define internal void @_i_A__im0(%2* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %2*, align 4
  %_cmd.addr = alloca i8*, align 4
  %s0 = alloca i8*, align 4
  %s1 = alloca i8*, align 4
  %s2 = alloca i8*, align 4
  %x = alloca i32, align 4
  store %2* %self, %2** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  store i8* getelementptr inbounds ([9 x i8]* @__func__._i_A__im0, i32 0, i32 0), i8** %s0, align 4
  store i8* getelementptr inbounds ([9 x i8]* @__func__._i_A__im0, i32 0, i32 0), i8** %s1, align 4
  store i8* getelementptr inbounds ([9 x i8]* @__func__._i_A__im0, i32 0, i32 0), i8** %s2, align 4
  %self1 = load %2** %self.addr
  %0 = bitcast %2* %self1 to i8*
  %1 = load i8** getelementptr inbounds ({ i8*, i8* }* bitcast ({ i8*, i8*, i8*, i32, i32, i32, { i32, [3 x { i8*, i8*, i32 }] }*, %0*, i8*, i8*, i8*, i8*, i8*, i32, [3 x i32*]*, { i32, i8*, [3 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i32, i32 }* @_OBJC_CLASS_A to { i8*, i8* }*), i32 0, i32 1)
  %2 = alloca { %2*, i8* }
  %3 = getelementptr inbounds { %2*, i8* }* %2, i32 0, i32 0
  store %2* %self1, %2** %3
  %4 = getelementptr inbounds { %2*, i8* }* %2, i32 0, i32 1
  store i8* %1, i8** %4
  %5 = bitcast { %2*, i8* }* %2 to { i8*, i8* }*
  %6 = call i8* (i8*, i8*, ...)* ({ i8*, i8* }*, i8*)* @objc_msg_lookup_super({ i8*, i8* }* %5, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 1) to i8*))
  %7 = bitcast i8* (i8*, i8*, ...)* %6 to void (i8*, i8*)*
  call void %7(i8* %0, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 1) to i8*)), !GNUObjCMessageSend !1
  %self2 = load %2** %self.addr
  %8 = bitcast %2* %self2 to i8*
  %9 = load i8** getelementptr inbounds ({ i8*, i8* }* bitcast ({ i8*, i8*, i8*, i32, i32, i32, { i32, [3 x { i8*, i8*, i32 }] }*, %0*, i8*, i8*, i8*, i8*, i8*, i32, [3 x i32*]*, { i32, i8*, [3 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i32, i32 }* @_OBJC_CLASS_A to { i8*, i8* }*), i32 0, i32 1)
  %10 = alloca { %2*, i8* }
  %11 = getelementptr inbounds { %2*, i8* }* %10, i32 0, i32 0
  store %2* %self2, %2** %11
  %12 = getelementptr inbounds { %2*, i8* }* %10, i32 0, i32 1
  store i8* %9, i8** %12
  %13 = bitcast { %2*, i8* }* %10 to { i8*, i8* }*
  %14 = call i8* (i8*, i8*, ...)* ({ i8*, i8* }*, i8*)* @objc_msg_lookup_super({ i8*, i8* }* %13, i8* bitcast ([5 x { i8*, i8* }]* @.objc_selector_list to i8*))
  %15 = bitcast i8* (i8*, i8*, ...)* %14 to i32 (i8*, i8*)*
  %call = call i32 %15(i8* %8, i8* bitcast ([5 x { i8*, i8* }]* @.objc_selector_list to i8*)), !GNUObjCMessageSend !2
  store i32 %call, i32* %x, align 4
  ret void
}

define internal void @_i_A__im1_(%2* %self, i8* %_cmd, i32 %x, ...) nounwind {
entry:
  %self.addr = alloca %2*, align 4
  %_cmd.addr = alloca i8*, align 4
  %x.addr = alloca i32, align 4
  store %2* %self, %2** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  ret void
}

define internal i32 @_i_A__p1(%2* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %2*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %2* %self, %2** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  %self1 = load %2** %self.addr
  %0 = bitcast %2* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i32 0
  %1 = bitcast i8* %add.ptr to i32*
  %2 = load i32* %1, align 4
  ret i32 %2
}

define internal void @_i_A__setP1_(%2* %self, i8* %_cmd, i32 %p1) nounwind {
entry:
  %self.addr = alloca %2*, align 4
  %_cmd.addr = alloca i8*, align 4
  %p1.addr = alloca i32, align 4
  store %2* %self, %2** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  store i32 %p1, i32* %p1.addr, align 4
  %0 = load i32* %p1.addr, align 4
  %1 = load %2** %self.addr, align 4
  %2 = bitcast %2* %1 to i8*
  %add.ptr = getelementptr inbounds i8* %2, i32 0
  %3 = bitcast i8* %add.ptr to i32*
  store i32 %0, i32* %3, align 4
  ret void
}

define internal i8* @_i_A__p5(%2* %self, i8* %_cmd) nounwind {
entry:
  %retval = alloca i8*, align 4
  %self.addr = alloca %2*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %2* %self, %2** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  %self1 = load %2** %self.addr
  %0 = bitcast %2* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i32 8
  %1 = bitcast i8* %add.ptr to %3**
  %2 = bitcast %3** %1 to i32*
  %load = load atomic i32* %2 unordered, align 4
  %3 = bitcast i8** %retval to i32*
  store i32 %load, i32* %3
  %4 = load i8** %retval
  ret i8* %4
}

define internal void @_i_A__setP5_(%2* %self, i8* %_cmd, i8* %p5) nounwind {
entry:
  %self.addr = alloca %2*, align 4
  %_cmd.addr = alloca i8*, align 4
  %p5.addr = alloca i8*, align 4
  store %2* %self, %2** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  store i8* %p5, i8** %p5.addr, align 4
  %self1 = load %2** %self.addr
  %0 = bitcast %2* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i32 8
  %1 = bitcast i8* %add.ptr to %3**
  %2 = bitcast i8** %p5.addr to i32*
  %3 = bitcast %3** %1 to i32*
  %4 = load i32* %2
  store atomic i32 %4, i32* %3 unordered, align 4
  ret void
}

define i32 @f0(i8* %x) nounwind {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i8*, align 4
  %finally.exn = alloca i8*
  %finally.for-eh = alloca i1
  %exn.slot = alloca i8*
  %e = alloca %2*, align 4
  %0 = alloca %3*, align 4
  %cleanup.dest.slot = alloca i32
  %y = alloca i8*, align 4
  %state.ptr = alloca %struct.__objcFastEnumerationState, align 4
  %items.ptr = alloca [16 x i8*], align 4
  store i8* %x, i8** %x.addr, align 4
  %1 = load i8** %x.addr, align 4
  %2 = call i32 @objc_sync_enter(i8* %1) nounwind
  %3 = call i32 @objc_sync_exit(i8* %1) nounwind
  store i1 false, i1* %finally.for-eh
  %4 = load i8** %x.addr, align 4
  call void @objc_exception_throw(i8* %4) noreturn
  unreachable

catch:                                            ; No predecessors!
  %exn = load i8** %exn.slot
  %5 = bitcast i8* %exn to %2*
  store %2* %5, %2** %e
  call void @objc_exception_throw(i8* %exn) noreturn
  unreachable

catch1:                                           ; No predecessors!
  %exn2 = load i8** %exn.slot
  %6 = bitcast i8* %exn2 to %3*
  store %3* %6, %3** %0
  store i32 2, i32* %cleanup.dest.slot
  %cleanup.dest.saved = load i32* %cleanup.dest.slot
  %finally.shouldthrow = load i1* %finally.for-eh
  br i1 %finally.shouldthrow, label %finally.rethrow, label %finally.cont

finally.rethrow:                                  ; preds = %catch1
  %7 = load i8** %finally.exn
  call void @objc_exception_throw(i8* %7)
  unreachable

finally.cont:                                     ; preds = %catch1
  store i32 %cleanup.dest.saved, i32* %cleanup.dest.slot
  br label %eh.cont

eh.cont:                                          ; preds = %finally.cont
  %8 = bitcast %struct.__objcFastEnumerationState* %state.ptr to i8*
  call void @llvm.memset.p0i8.i32(i8* %8, i8 0, i32 32, i32 4, i1 false)
  %9 = load i8** %x.addr, align 4
  %10 = call i8* (i8*, i8*, ...)* (i8*, i8*)* @objc_msg_lookup(i8* %9, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 2) to i8*)), !GNUObjCMessageSend !3
  %11 = bitcast i8* (i8*, i8*, ...)* %10 to i32 (i8*, i8*, %struct.__objcFastEnumerationState*, [16 x i8*]*, i32)*
  %call = call i32 %11(i8* %9, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 2) to i8*), %struct.__objcFastEnumerationState* %state.ptr, [16 x i8*]* %items.ptr, i32 16), !GNUObjCMessageSend !3
  %iszero = icmp eq i32 %call, 0
  br i1 %iszero, label %forcoll.empty, label %forcoll.loopinit

forcoll.loopinit:                                 ; preds = %eh.cont
  %mutationsptr.ptr = getelementptr inbounds %struct.__objcFastEnumerationState* %state.ptr, i32 0, i32 2
  %mutationsptr = load i32** %mutationsptr.ptr
  %forcoll.initial-mutations = load i32* %mutationsptr
  br label %forcoll.loopbody

forcoll.loopbody:                                 ; preds = %forcoll.refetch, %forcoll.next, %forcoll.loopinit
  %forcoll.index = phi i32 [ 0, %forcoll.loopinit ], [ %14, %forcoll.next ], [ 0, %forcoll.refetch ]
  %forcoll.count = phi i32 [ %call, %forcoll.loopinit ], [ %forcoll.count, %forcoll.next ], [ %call4, %forcoll.refetch ]
  %mutationsptr3 = load i32** %mutationsptr.ptr
  %statemutations = load i32* %mutationsptr3
  %12 = icmp eq i32 %statemutations, %forcoll.initial-mutations
  br i1 %12, label %forcoll.notmutated, label %forcoll.mutated

forcoll.mutated:                                  ; preds = %forcoll.loopbody
  call void @objc_enumerationMutation(i8* %9)
  br label %forcoll.notmutated

forcoll.notmutated:                               ; preds = %forcoll.mutated, %forcoll.loopbody
  %stateitems.ptr = getelementptr inbounds %struct.__objcFastEnumerationState* %state.ptr, i32 0, i32 1
  %stateitems = load i8*** %stateitems.ptr
  %currentitem.ptr = getelementptr i8** %stateitems, i32 %forcoll.index
  %13 = load i8** %currentitem.ptr
  store i8* %13, i8** %y, align 4
  br label %forcoll.end

forcoll.next:                                     ; No predecessors!
  %14 = add i32 %forcoll.index, 1
  %15 = icmp ult i32 %14, %forcoll.count
  br i1 %15, label %forcoll.loopbody, label %forcoll.refetch

forcoll.refetch:                                  ; preds = %forcoll.next
  %16 = call i8* (i8*, i8*, ...)* (i8*, i8*)* @objc_msg_lookup(i8* %9, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 2) to i8*)), !GNUObjCMessageSend !3
  %17 = bitcast i8* (i8*, i8*, ...)* %16 to i32 (i8*, i8*, %struct.__objcFastEnumerationState*, [16 x i8*]*, i32)*
  %call4 = call i32 %17(i8* %9, i8* bitcast ({ i8*, i8* }* getelementptr inbounds ([5 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 2) to i8*), %struct.__objcFastEnumerationState* %state.ptr, [16 x i8*]* %items.ptr, i32 16), !GNUObjCMessageSend !3
  %18 = icmp eq i32 %call4, 0
  br i1 %18, label %forcoll.empty, label %forcoll.loopbody

forcoll.empty:                                    ; preds = %forcoll.refetch, %eh.cont
  br label %forcoll.end

forcoll.end:                                      ; preds = %forcoll.empty, %forcoll.notmutated
  %19 = load i32* %retval
  ret i32 %19
}

declare i32 @objc_sync_exit(i8*)

declare i32 @objc_sync_enter(i8*)

declare void @objc_exception_throw(i8*)

declare void @objc_enumerationMutation(i8*)

declare void @llvm.memset.p0i8.i32(i8* nocapture, i8, i32, i32, i1) nounwind

declare i8* (i8*, i8*, ...)* @objc_msg_lookup(i8*, i8*)

define internal void @.objc_load_function() {
entry:
  call void ({ i32, i32, i8*, { i32, { i8*, i8* }*, i16, i16, [6 x i8*] }* }*, ...)* @__objc_exec_class({ i32, i32, i8*, { i32, { i8*, i8* }*, i16, i16, [6 x i8*] }* }* @25)
  ret void
}

declare void @__objc_exec_class({ i32, i32, i8*, { i32, { i8*, i8* }*, i16, i16, [6 x i8*] }* }*, ...)

!0 = metadata !{metadata !"fm0", metadata !"Root", i1 true}
!1 = metadata !{metadata !"im0", metadata !"Root", i1 false}
!2 = metadata !{metadata !"p0", metadata !"Root", i1 false}
!3 = metadata !{metadata !"countByEnumeratingWithState:objects:count:", metadata !"", i1 false}
