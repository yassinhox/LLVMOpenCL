; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGen/blocks-1.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__block_descriptor = type { i64, i64 }
%struct.__block_byref_a = type { i8*, %struct.__block_byref_a*, i32, i32, i32 }
%struct.__block_literal_generic = type { i8*, i32, i32, i8*, %struct.__block_descriptor* }
%struct.__block_byref_a.0 = type { i8*, %struct.__block_byref_a.0*, i32, i32, i32 }
%struct.__block_byref_a.1 = type { i8*, %struct.__block_byref_a.1*, i32, i32, i32 }
%struct.__block_byref_a.2 = type { i8*, %struct.__block_byref_a.2*, i32, i32, i32 }
%struct.__block_byref_k = type { i8*, %struct.__block_byref_k*, i32, i32, i32 }
%struct.__block_byref_j = type { i8*, %struct.__block_byref_j*, i32, i32, i8*, i8*, i32 (i32)* }
%struct.__block_byref_j.3 = type { i8*, %struct.__block_byref_j.3*, i32, i32, i8*, i8*, i32 (i32)* }
%struct.__block_byref_k.4 = type { i8*, %struct.__block_byref_k.4*, i32, i32, i32 }
%struct.__block_byref_i = type { i8*, %struct.__block_byref_i*, i32, i32, %struct.anon }
%struct.anon = type { i32 }
%struct.__block_byref_i.5 = type { i8*, %struct.__block_byref_i.5*, i32, i32, %struct.anon }
%struct.__block_byref_i.6 = type { i8*, %struct.__block_byref_i.6*, i32, i32, i32 }
%struct.__block_byref_i.7 = type { i8*, %struct.__block_byref_i.7*, i32, i32, i32 }
%struct.__block_byref_i.8 = type { i8*, %struct.__block_byref_i.8*, i32, i32, i32 }
%struct.__block_byref_i.9 = type { i8*, %struct.__block_byref_i.9*, i32, i32, i32 }

@.str = private unnamed_addr constant [18 x i8] c"a is %d, b is %d\0A\00", align 1
@_NSConcreteStackBlock = external global i8*
@.str1 = private unnamed_addr constant [6 x i8] c"v8@?0\00", align 1
@__block_descriptor_tmp = internal constant { i64, i64, i8*, i8*, i8*, i8* } { i64 0, i64 44, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_ to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_ to i8*), i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@.str2 = private unnamed_addr constant [9 x i8] c"a is %d\0A\00", align 1
@__block_descriptor_tmp5 = internal constant { i64, i64, i8*, i8*, i8*, i8* } { i64 0, i64 40, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_3 to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_4 to i8*), i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@__block_descriptor_tmp8 = internal constant { i64, i64, i8*, i8*, i8*, i8* } { i64 0, i64 40, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_6 to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_7 to i8*), i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@__block_descriptor_tmp11 = internal constant { i64, i64, i8*, i8*, i8*, i8* } { i64 0, i64 48, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_9 to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_10 to i8*), i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@test4.i = internal global i32 1, align 4
@g = common global i32 0, align 4
@_NSConcreteGlobalBlock = external global i8*
@.str12 = private unnamed_addr constant [9 x i8] c"v12@?0i8\00", align 1
@__block_descriptor_tmp13 = internal constant { i64, i64, i8*, i8* } { i64 0, i64 32, i8* getelementptr inbounds ([9 x i8]* @.str12, i32 0, i32 0), i8* null }
@__block_literal_global = internal constant { i8**, i32, i32, i8*, %struct.__block_descriptor* } { i8** @_NSConcreteGlobalBlock, i32 1342177280, i32 0, i8* bitcast (void (i8*, i32)* @__test4_block_invoke to i8*), %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8* }* @__block_descriptor_tmp13 to %struct.__block_descriptor*) }, align 8
@__block_descriptor_tmp16 = internal constant { i64, i64, i8*, i8*, i8*, i8* } { i64 0, i64 40, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_14 to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_15 to i8*), i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@__block_descriptor_tmp19 = internal constant { i64, i64, i8*, i8*, i8*, i8* } { i64 0, i64 40, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_17 to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_18 to i8*), i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@__block_descriptor_tmp21 = internal constant { i64, i64, i8*, i8* } { i64 0, i64 32, i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@__block_literal_global22 = internal constant { i8**, i32, i32, i8*, %struct.__block_descriptor* } { i8** @_NSConcreteGlobalBlock, i32 1342177280, i32 0, i8* bitcast (void (i8*)* @__test6_block_invoke20 to i8*), %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8* }* @__block_descriptor_tmp21 to %struct.__block_descriptor*) }, align 8
@__block_descriptor_tmp25 = internal constant { i64, i64, i8*, i8*, i8*, i8* } { i64 0, i64 40, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_23 to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_24 to i8*), i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@__block_descriptor_tmp26 = internal constant { i64, i64, i8*, i8* } { i64 0, i64 32, i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0), i8* null }
@__block_literal_global27 = internal constant { i8**, i32, i32, i8*, %struct.__block_descriptor* } { i8** @_NSConcreteGlobalBlock, i32 1342177280, i32 0, i8* bitcast (void (i8*)* @__test7_block_invoke to i8*), %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8* }* @__block_descriptor_tmp26 to %struct.__block_descriptor*) }, align 8

define void @test1() nounwind {
entry:
  %a = alloca %struct.__block_byref_a, align 8
  %b = alloca i32, align 4
  %block = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>, align 8
  %byref.isa = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 0
  store i8* null, i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 1
  store %struct.__block_byref_a* %a, %struct.__block_byref_a** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 2
  store i32 0, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 3
  store i32 32, i32* %byref.size
  store i32 2, i32* %b, align 4
  %forwarding = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 1
  %0 = load %struct.__block_byref_a** %forwarding
  %a1 = getelementptr inbounds %struct.__block_byref_a* %0, i32 0, i32 4
  store i32 1, i32* %a1, align 4
  %forwarding2 = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 1
  %1 = load %struct.__block_byref_a** %forwarding2
  %a3 = getelementptr inbounds %struct.__block_byref_a* %1, i32 0, i32 4
  %2 = load i32* %a3, align 4
  %3 = load i32* %b, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str, i32 0, i32 0), i32 %2, i32 %3)
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 3
  store i8* bitcast (void (i8*)* @__test1_block_invoke to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 5
  %4 = bitcast %struct.__block_byref_a* %a to i8*
  store i8* %4, i8** %block.captured
  %block.captured4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 6
  %5 = load i32* %b, align 4
  store i32 %5, i32* %block.captured4, align 4
  %6 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block to void ()*
  %block.literal = bitcast void ()* %6 to %struct.__block_literal_generic*
  %7 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %8 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %9 = load i8** %7
  %10 = bitcast i8* %9 to void (i8*)*
  call void %10(i8* %8)
  %forwarding5 = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 1
  %11 = load %struct.__block_byref_a** %forwarding5
  %a6 = getelementptr inbounds %struct.__block_byref_a* %11, i32 0, i32 4
  %12 = load i32* %a6, align 4
  %13 = load i32* %b, align 4
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str, i32 0, i32 0), i32 %12, i32 %13)
  %forwarding8 = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 1
  %14 = load %struct.__block_byref_a** %forwarding8
  %a9 = getelementptr inbounds %struct.__block_byref_a* %14, i32 0, i32 4
  store i32 1, i32* %a9, align 4
  %forwarding10 = getelementptr inbounds %struct.__block_byref_a* %a, i32 0, i32 1
  %15 = load %struct.__block_byref_a** %forwarding10
  %a11 = getelementptr inbounds %struct.__block_byref_a* %15, i32 0, i32 4
  %16 = load i32* %a11, align 4
  %17 = load i32* %b, align 4
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str, i32 0, i32 0), i32 %16, i32 %17)
  %18 = bitcast %struct.__block_byref_a* %a to i8*
  call void @_Block_object_dispose(i8* %18, i32 8)
  ret void
}

declare i32 @printf(i8*, ...)

define internal void @__test1_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 5
  %0 = load i8** %block.capture.addr
  %byref.addr = bitcast i8* %0 to %struct.__block_byref_a.0*
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_a.0* %byref.addr, i32 0, i32 1
  %byref.addr.forwarded = load %struct.__block_byref_a.0** %byref.forwarding
  %a = getelementptr inbounds %struct.__block_byref_a.0* %byref.addr.forwarded, i32 0, i32 4
  store i32 10, i32* %a, align 4
  %block.capture.addr1 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 5
  %1 = load i8** %block.capture.addr1
  %byref.addr2 = bitcast i8* %1 to %struct.__block_byref_a.0*
  %byref.forwarding3 = getelementptr inbounds %struct.__block_byref_a.0* %byref.addr2, i32 0, i32 1
  %byref.addr.forwarded4 = load %struct.__block_byref_a.0** %byref.forwarding3
  %a5 = getelementptr inbounds %struct.__block_byref_a.0* %byref.addr.forwarded4, i32 0, i32 4
  %2 = load i32* %a5, align 4
  %block.capture.addr6 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 6
  %3 = load i32* %block.capture.addr6, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str, i32 0, i32 0), i32 %2, i32 %3)
  ret void
}

define internal void @__copy_helper_block_(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  ret void
}

declare void @_Block_object_assign(i8*, i8*, i32)

define internal void @__destroy_helper_block_(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i32 }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

declare void @_Block_object_dispose(i8*, i32)

define void @test2() nounwind {
entry:
  %a = alloca %struct.__block_byref_a.1, align 8
  %block = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>, align 8
  %byref.isa = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 0
  store i8* null, i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 1
  store %struct.__block_byref_a.1* %a, %struct.__block_byref_a.1** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 2
  store i32 0, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 3
  store i32 32, i32* %byref.size
  %forwarding = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 1
  %0 = load %struct.__block_byref_a.1** %forwarding
  %a1 = getelementptr inbounds %struct.__block_byref_a.1* %0, i32 0, i32 4
  store i32 1, i32* %a1, align 4
  %forwarding2 = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 1
  %1 = load %struct.__block_byref_a.1** %forwarding2
  %a3 = getelementptr inbounds %struct.__block_byref_a.1* %1, i32 0, i32 4
  %2 = load i32* %a3, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str2, i32 0, i32 0), i32 %2)
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 3
  store i8* bitcast (void (i8*)* @__test2_block_invoke to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp8 to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %3 = bitcast %struct.__block_byref_a.1* %a to i8*
  store i8* %3, i8** %block.captured
  %4 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block to void ()*
  %block.literal = bitcast void ()* %4 to %struct.__block_literal_generic*
  %5 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %6 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %7 = load i8** %5
  %8 = bitcast i8* %7 to void (i8*)*
  call void %8(i8* %6)
  %forwarding4 = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 1
  %9 = load %struct.__block_byref_a.1** %forwarding4
  %a5 = getelementptr inbounds %struct.__block_byref_a.1* %9, i32 0, i32 4
  %10 = load i32* %a5, align 4
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str2, i32 0, i32 0), i32 %10)
  %forwarding7 = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 1
  %11 = load %struct.__block_byref_a.1** %forwarding7
  %a8 = getelementptr inbounds %struct.__block_byref_a.1* %11, i32 0, i32 4
  store i32 1, i32* %a8, align 4
  %forwarding9 = getelementptr inbounds %struct.__block_byref_a.1* %a, i32 0, i32 1
  %12 = load %struct.__block_byref_a.1** %forwarding9
  %a10 = getelementptr inbounds %struct.__block_byref_a.1* %12, i32 0, i32 4
  %13 = load i32* %a10, align 4
  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str2, i32 0, i32 0), i32 %13)
  %14 = bitcast %struct.__block_byref_a.1* %a to i8*
  call void @_Block_object_dispose(i8* %14, i32 8)
  ret void
}

define internal void @__test2_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %block1 = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>, align 8
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 3
  store i8* bitcast (void (i8*)* @__test2_block_invoke_2 to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp5 to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 5
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %byref.capture = load i8** %block.capture.addr
  store i8* %byref.capture, i8** %block.captured
  %0 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1 to void ()*
  %block.literal = bitcast void ()* %0 to %struct.__block_literal_generic*
  %1 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %2 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %3 = load i8** %1
  %4 = bitcast i8* %3 to void (i8*)*
  call void %4(i8* %2)
  ret void
}

define internal void @__test2_block_invoke_2(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = load i8** %block.capture.addr
  %byref.addr = bitcast i8* %0 to %struct.__block_byref_a.2*
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_a.2* %byref.addr, i32 0, i32 1
  %byref.addr.forwarded = load %struct.__block_byref_a.2** %byref.forwarding
  %a = getelementptr inbounds %struct.__block_byref_a.2* %byref.addr.forwarded, i32 0, i32 4
  store i32 10, i32* %a, align 4
  ret void
}

define internal void @__copy_helper_block_3(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  ret void
}

define internal void @__destroy_helper_block_4(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

define internal void @__copy_helper_block_6(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  ret void
}

define internal void @__destroy_helper_block_7(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

define void @test3() nounwind {
entry:
  %k = alloca %struct.__block_byref_k, align 8
  %j = alloca %struct.__block_byref_j, align 8
  %block = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>, align 8
  %byref.isa = getelementptr inbounds %struct.__block_byref_k* %k, i32 0, i32 0
  store i8* null, i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_k* %k, i32 0, i32 1
  store %struct.__block_byref_k* %k, %struct.__block_byref_k** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_k* %k, i32 0, i32 2
  store i32 0, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_k* %k, i32 0, i32 3
  store i32 32, i32* %byref.size
  %byref.isa1 = getelementptr inbounds %struct.__block_byref_j* %j, i32 0, i32 0
  store i8* null, i8** %byref.isa1
  %byref.forwarding2 = getelementptr inbounds %struct.__block_byref_j* %j, i32 0, i32 1
  store %struct.__block_byref_j* %j, %struct.__block_byref_j** %byref.forwarding2
  %byref.flags3 = getelementptr inbounds %struct.__block_byref_j* %j, i32 0, i32 2
  store i32 33554432, i32* %byref.flags3
  %byref.size4 = getelementptr inbounds %struct.__block_byref_j* %j, i32 0, i32 3
  store i32 48, i32* %byref.size4
  %0 = getelementptr inbounds %struct.__block_byref_j* %j, i32 0, i32 4
  store i8* bitcast (void (i8*, i8*)* @__Block_byref_object_copy_ to i8*), i8** %0
  %1 = getelementptr inbounds %struct.__block_byref_j* %j, i32 0, i32 5
  store i8* bitcast (void (i8*)* @__Block_byref_object_dispose_ to i8*), i8** %1
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 3
  store i8* bitcast (void (i8*)* @__test3_block_invoke to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp11 to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 5
  %2 = bitcast %struct.__block_byref_j* %j to i8*
  store i8* %2, i8** %block.captured
  %block.captured5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 6
  %3 = bitcast %struct.__block_byref_k* %k to i8*
  store i8* %3, i8** %block.captured5
  %4 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block to void ()*
  %block.literal = bitcast void ()* %4 to %struct.__block_literal_generic*
  %5 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %6 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %7 = load i8** %5
  %8 = bitcast i8* %7 to void (i8*)*
  call void %8(i8* %6)
  %9 = bitcast %struct.__block_byref_j* %j to i8*
  call void @_Block_object_dispose(i8* %9, i32 8)
  %10 = bitcast %struct.__block_byref_k* %k to i8*
  call void @_Block_object_dispose(i8* %10, i32 8)
  ret void
}

define internal void @__Block_byref_object_copy_(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr
  %3 = bitcast i8* %2 to %struct.__block_byref_j*
  %x = getelementptr inbounds %struct.__block_byref_j* %3, i32 0, i32 6
  %4 = load i8** %.addr1
  %5 = bitcast i8* %4 to %struct.__block_byref_j*
  %x2 = getelementptr inbounds %struct.__block_byref_j* %5, i32 0, i32 6
  %6 = bitcast i32 (i32)** %x to i8*
  %7 = bitcast i32 (i32)** %x2 to i8**
  %8 = load i8** %7
  call void @_Block_object_assign(i8* %6, i8* %8, i32 135)
  ret void
}

define internal void @__Block_byref_object_dispose_(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %2 = bitcast i8* %1 to %struct.__block_byref_j*
  %x = getelementptr inbounds %struct.__block_byref_j* %2, i32 0, i32 6
  %3 = bitcast i32 (i32)** %x to i8**
  %4 = load i8** %3
  call void @_Block_object_dispose(i8* %4, i32 135)
  ret void
}

define internal void @__test3_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 5
  %0 = load i8** %block.capture.addr
  %byref.addr = bitcast i8* %0 to %struct.__block_byref_j.3*
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_j.3* %byref.addr, i32 0, i32 1
  %byref.addr.forwarded = load %struct.__block_byref_j.3** %byref.forwarding
  %j = getelementptr inbounds %struct.__block_byref_j.3* %byref.addr.forwarded, i32 0, i32 6
  store i32 (i32)* null, i32 (i32)** %j, align 8
  %block.capture.addr1 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 6
  %1 = load i8** %block.capture.addr1
  %byref.addr2 = bitcast i8* %1 to %struct.__block_byref_k.4*
  %byref.forwarding3 = getelementptr inbounds %struct.__block_byref_k.4* %byref.addr2, i32 0, i32 1
  %byref.addr.forwarded4 = load %struct.__block_byref_k.4** %byref.forwarding3
  %k = getelementptr inbounds %struct.__block_byref_k.4* %byref.addr.forwarded4, i32 0, i32 4
  store i32 0, i32* %k, align 4
  ret void
}

define internal void @__copy_helper_block_9(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  %7 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block.source, i32 0, i32 6
  %8 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block.dest, i32 0, i32 6
  %blockcopy.src2 = load i8** %7
  %9 = bitcast i8** %8 to i8*
  call void @_Block_object_assign(i8* %9, i8* %blockcopy.src2, i32 8)
  ret void
}

define internal void @__destroy_helper_block_10(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8*, i8* }>* %block, i32 0, i32 6
  %5 = load i8** %4
  call void @_Block_object_dispose(i8* %5, i32 8)
  ret void
}

define i32 @test4() nounwind {
entry:
  %0 = load i8** getelementptr inbounds (%struct.__block_literal_generic* bitcast ({ i8**, i32, i32, i8*, %struct.__block_descriptor* }* @__block_literal_global to %struct.__block_literal_generic*), i32 0, i32 3)
  %1 = bitcast i8* %0 to void (i8*, i32)*
  call void %1(i8* bitcast ({ i8**, i32, i32, i8*, %struct.__block_descriptor* }* @__block_literal_global to i8*), i32 0)
  %2 = load i32* @test4.i, align 4
  %3 = load i32* @g, align 4
  %add = add nsw i32 %2, %3
  ret i32 %add
}

define internal void @__test4_block_invoke(i8* %.block_descriptor, i32 %j) nounwind {
entry:
  %j.addr = alloca i32, align 4
  store i32 %j, i32* %j.addr, align 4
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor* }>*
  %0 = load i32* %j.addr, align 4
  store i32 %0, i32* @test4.i, align 4
  store i32 0, i32* @g, align 4
  ret void
}

define void @test5() nounwind {
entry:
  %i = alloca %struct.__block_byref_i, align 8
  %block = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>, align 8
  %byref.isa = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 0
  store i8* null, i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 1
  store %struct.__block_byref_i* %i, %struct.__block_byref_i** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 2
  store i32 0, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 3
  store i32 32, i32* %byref.size
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 3
  store i8* bitcast (void (i8*)* @__test5_block_invoke to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp16 to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = bitcast %struct.__block_byref_i* %i to i8*
  store i8* %0, i8** %block.captured
  %1 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block to void ()*
  %block.literal = bitcast void ()* %1 to %struct.__block_literal_generic*
  %2 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %3 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %4 = load i8** %2
  %5 = bitcast i8* %4 to void (i8*)*
  call void %5(i8* %3)
  %6 = bitcast %struct.__block_byref_i* %i to i8*
  call void @_Block_object_dispose(i8* %6, i32 8)
  ret void
}

define internal void @__test5_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = load i8** %block.capture.addr
  %byref.addr = bitcast i8* %0 to %struct.__block_byref_i.5*
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i.5* %byref.addr, i32 0, i32 1
  %byref.addr.forwarded = load %struct.__block_byref_i.5** %byref.forwarding
  %i = getelementptr inbounds %struct.__block_byref_i.5* %byref.addr.forwarded, i32 0, i32 4
  ret void
}

define internal void @__copy_helper_block_14(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  ret void
}

define internal void @__destroy_helper_block_15(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

define void @test6() nounwind {
entry:
  %i = alloca %struct.__block_byref_i.6, align 8
  %block = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>, align 8
  %byref.isa = getelementptr inbounds %struct.__block_byref_i.6* %i, i32 0, i32 0
  store i8* null, i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i.6* %i, i32 0, i32 1
  store %struct.__block_byref_i.6* %i, %struct.__block_byref_i.6** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_i.6* %i, i32 0, i32 2
  store i32 0, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_i.6* %i, i32 0, i32 3
  store i32 32, i32* %byref.size
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 3
  store i8* bitcast (void (i8*)* @__test6_block_invoke to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp19 to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = bitcast %struct.__block_byref_i.6* %i to i8*
  store i8* %0, i8** %block.captured
  %1 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block to void ()*
  %block.literal = bitcast void ()* %1 to %struct.__block_literal_generic*
  %2 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %3 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %4 = load i8** %2
  %5 = bitcast i8* %4 to void (i8*)*
  call void %5(i8* %3)
  %6 = load i8** getelementptr inbounds (%struct.__block_literal_generic* bitcast ({ i8**, i32, i32, i8*, %struct.__block_descriptor* }* @__block_literal_global22 to %struct.__block_literal_generic*), i32 0, i32 3)
  %7 = bitcast i8* %6 to void (i8*)*
  call void %7(i8* bitcast ({ i8**, i32, i32, i8*, %struct.__block_descriptor* }* @__block_literal_global22 to i8*))
  %8 = bitcast %struct.__block_byref_i.6* %i to i8*
  call void @_Block_object_dispose(i8* %8, i32 8)
  ret void
}

define internal void @__test6_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = load i8** %block.capture.addr
  %byref.addr = bitcast i8* %0 to %struct.__block_byref_i.7*
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i.7* %byref.addr, i32 0, i32 1
  %byref.addr.forwarded = load %struct.__block_byref_i.7** %byref.forwarding
  %i = getelementptr inbounds %struct.__block_byref_i.7* %byref.addr.forwarded, i32 0, i32 4
  store i32 1, i32* %i, align 4
  ret void
}

define internal void @__copy_helper_block_17(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  ret void
}

define internal void @__destroy_helper_block_18(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

define internal void @__test6_block_invoke20(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor* }>*
  ret void
}

define void @test7() nounwind {
entry:
  %0 = load i8** getelementptr inbounds (%struct.__block_literal_generic* bitcast ({ i8**, i32, i32, i8*, %struct.__block_descriptor* }* @__block_literal_global27 to %struct.__block_literal_generic*), i32 0, i32 3)
  %1 = bitcast i8* %0 to void (i8*)*
  call void %1(i8* bitcast ({ i8**, i32, i32, i8*, %struct.__block_descriptor* }* @__block_literal_global27 to i8*))
  ret void
}

define internal void @__test7_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %i = alloca %struct.__block_byref_i.8, align 8
  %block1 = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>, align 8
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor* }>*
  %byref.isa = getelementptr inbounds %struct.__block_byref_i.8* %i, i32 0, i32 0
  store i8* null, i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i.8* %i, i32 0, i32 1
  store %struct.__block_byref_i.8* %i, %struct.__block_byref_i.8** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_i.8* %i, i32 0, i32 2
  store i32 0, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_i.8* %i, i32 0, i32 3
  store i32 32, i32* %byref.size
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 3
  store i8* bitcast (void (i8*)* @__test7_block_invoke_2 to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i64, i64, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp25 to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1, i32 0, i32 5
  %0 = bitcast %struct.__block_byref_i.8* %i to i8*
  store i8* %0, i8** %block.captured
  %1 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block1 to void ()*
  %block.literal = bitcast void ()* %1 to %struct.__block_literal_generic*
  %2 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %3 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %4 = load i8** %2
  %5 = bitcast i8* %4 to void (i8*)*
  call void %5(i8* %3)
  %6 = bitcast %struct.__block_byref_i.8* %i to i8*
  call void @_Block_object_dispose(i8* %6, i32 8)
  ret void
}

define internal void @__test7_block_invoke_2(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = load i8** %block.capture.addr
  %byref.addr = bitcast i8* %0 to %struct.__block_byref_i.9*
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i.9* %byref.addr, i32 0, i32 1
  %byref.addr.forwarded = load %struct.__block_byref_i.9** %byref.forwarding
  %i = getelementptr inbounds %struct.__block_byref_i.9* %byref.addr.forwarded, i32 0, i32 4
  store i32 1, i32* %i, align 4
  ret void
}

define internal void @__copy_helper_block_23(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 8
  %.addr1 = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  store i8* %1, i8** %.addr1, align 8
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  ret void
}

define internal void @__destroy_helper_block_24(i8*) {
entry:
  %.addr = alloca i8*, align 8
  store i8* %0, i8** %.addr, align 8
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

define i32 @main() nounwind {
entry:
  %retval = alloca i32, align 4
  %rv = alloca i32, align 4
  store i32 0, i32* %retval
  store i32 0, i32* %rv, align 4
  call void @test1()
  call void @test2()
  call void @test3()
  %call = call i32 @test4()
  %0 = load i32* %rv, align 4
  %add = add nsw i32 %0, %call
  store i32 %add, i32* %rv, align 4
  call void @test5()
  %1 = load i32* %rv, align 4
  ret i32 %1
}
