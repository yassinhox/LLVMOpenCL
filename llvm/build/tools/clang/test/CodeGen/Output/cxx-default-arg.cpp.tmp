; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGen/cxx-default-arg.cpp'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.S = type { float, float }

@s = global %struct.S zeroinitializer, align 4
@c = global { double, double } zeroinitializer, align 8
@x = external global i32

define void @_Z1gv() nounwind {
entry:
  %agg.tmp = alloca %struct.S, align 4
  %coerce = alloca { double, double }, align 8
  %agg.tmp1 = alloca %struct.S, align 4
  %coerce4 = alloca { double, double }, align 8
  %agg.tmp7 = alloca %struct.S, align 4
  %coerce10 = alloca { double, double }, align 8
  %agg.tmp13 = alloca %struct.S, align 4
  %coerce16 = alloca { double, double }, align 8
  %agg.tmp19 = alloca %struct.S, align 4
  %coerce22 = alloca { double, double }, align 8
  %0 = load i32* @x, align 4
  %1 = bitcast %struct.S* %agg.tmp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast (%struct.S* @s to i8*), i64 8, i32 4, i1 false)
  %c.real = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 0)
  %c.imag = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 1)
  %2 = bitcast %struct.S* %agg.tmp to <2 x float>*
  %3 = load <2 x float>* %2, align 1
  %real = getelementptr inbounds { double, double }* %coerce, i32 0, i32 0
  %imag = getelementptr inbounds { double, double }* %coerce, i32 0, i32 1
  store double %c.real, double* %real
  store double %c.imag, double* %imag
  %4 = getelementptr { double, double }* %coerce, i32 0, i32 0
  %5 = load double* %4, align 1
  %6 = getelementptr { double, double }* %coerce, i32 0, i32 1
  %7 = load double* %6, align 1
  call void @_Z1fiii1SCd(i32 0, i32 1, i32 %0, <2 x float> %3, double %5, double %7)
  %8 = load i32* @x, align 4
  %9 = bitcast %struct.S* %agg.tmp1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast (%struct.S* @s to i8*), i64 8, i32 4, i1 false)
  %c.real2 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 0)
  %c.imag3 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 1)
  %10 = bitcast %struct.S* %agg.tmp1 to <2 x float>*
  %11 = load <2 x float>* %10, align 1
  %real5 = getelementptr inbounds { double, double }* %coerce4, i32 0, i32 0
  %imag6 = getelementptr inbounds { double, double }* %coerce4, i32 0, i32 1
  store double %c.real2, double* %real5
  store double %c.imag3, double* %imag6
  %12 = getelementptr { double, double }* %coerce4, i32 0, i32 0
  %13 = load double* %12, align 1
  %14 = getelementptr { double, double }* %coerce4, i32 0, i32 1
  %15 = load double* %14, align 1
  call void @_Z1fiii1SCd(i32 0, i32 1, i32 %8, <2 x float> %11, double %13, double %15)
  %16 = load i32* @x, align 4
  %17 = bitcast %struct.S* %agg.tmp7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* bitcast (%struct.S* @s to i8*), i64 8, i32 4, i1 false)
  %c.real8 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 0)
  %c.imag9 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 1)
  %18 = bitcast %struct.S* %agg.tmp7 to <2 x float>*
  %19 = load <2 x float>* %18, align 1
  %real11 = getelementptr inbounds { double, double }* %coerce10, i32 0, i32 0
  %imag12 = getelementptr inbounds { double, double }* %coerce10, i32 0, i32 1
  store double %c.real8, double* %real11
  store double %c.imag9, double* %imag12
  %20 = getelementptr { double, double }* %coerce10, i32 0, i32 0
  %21 = load double* %20, align 1
  %22 = getelementptr { double, double }* %coerce10, i32 0, i32 1
  %23 = load double* %22, align 1
  call void @_Z1fiii1SCd(i32 0, i32 1, i32 %16, <2 x float> %19, double %21, double %23)
  %24 = load i32* @x, align 4
  %25 = bitcast %struct.S* %agg.tmp13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* bitcast (%struct.S* @s to i8*), i64 8, i32 4, i1 false)
  %c.real14 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 0)
  %c.imag15 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 1)
  %26 = bitcast %struct.S* %agg.tmp13 to <2 x float>*
  %27 = load <2 x float>* %26, align 1
  %real17 = getelementptr inbounds { double, double }* %coerce16, i32 0, i32 0
  %imag18 = getelementptr inbounds { double, double }* %coerce16, i32 0, i32 1
  store double %c.real14, double* %real17
  store double %c.imag15, double* %imag18
  %28 = getelementptr { double, double }* %coerce16, i32 0, i32 0
  %29 = load double* %28, align 1
  %30 = getelementptr { double, double }* %coerce16, i32 0, i32 1
  %31 = load double* %30, align 1
  call void @_Z1fiii1SCd(i32 0, i32 1, i32 %24, <2 x float> %27, double %29, double %31)
  %32 = load i32* @x, align 4
  %33 = bitcast %struct.S* %agg.tmp19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* bitcast (%struct.S* @s to i8*), i64 8, i32 4, i1 false)
  %c.real20 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 0)
  %c.imag21 = load double* getelementptr inbounds ({ double, double }* @c, i32 0, i32 1)
  %34 = bitcast %struct.S* %agg.tmp19 to <2 x float>*
  %35 = load <2 x float>* %34, align 1
  %real23 = getelementptr inbounds { double, double }* %coerce22, i32 0, i32 0
  %imag24 = getelementptr inbounds { double, double }* %coerce22, i32 0, i32 1
  store double %c.real20, double* %real23
  store double %c.imag21, double* %imag24
  %36 = getelementptr { double, double }* %coerce22, i32 0, i32 0
  %37 = load double* %36, align 1
  %38 = getelementptr { double, double }* %coerce22, i32 0, i32 1
  %39 = load double* %38, align 1
  call void @_Z1fiii1SCd(i32 0, i32 1, i32 %32, <2 x float> %35, double %37, double %39)
  ret void
}

declare void @_Z1fiii1SCd(i32, i32, i32, <2 x float>, double, double)

declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind
