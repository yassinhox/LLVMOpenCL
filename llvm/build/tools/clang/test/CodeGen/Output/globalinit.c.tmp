; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGen/globalinit.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@A = global [10 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@y = external global [0 x i32]
@g = global i8* bitcast ([0 x i32]* @y to i8*), align 8
@mb_ptr2len = global i32 (i8*)* @latin_ptr2len, align 8
@string = global [8 x i8] c"string\00\00", align 1
@string2 = global [4 x i8] c"stri", align 1
@test.buf = internal global [10 x i8] zeroinitializer, align 1
@test.bufptr = internal global i8* getelementptr inbounds ([10 x i8]* @test.buf, i32 0, i32 0), align 8
@booltest = global i8 0, align 1
@booltest2.booltest3 = internal global i8 1, align 1
@c = global [2 x i32] [i32 0, i32 1], align 4
@d = global [1 x i32] [i32 1], align 4
@x = common global [10 x i32] zeroinitializer, align 16

define void @foo() nounwind {
entry:
  store i32 1, i32* getelementptr inbounds ([10 x i32]* @x, i32 0, i64 0), align 1
  ret void
}

define void @bar() nounwind {
entry:
  store i32 1, i32* getelementptr inbounds ([10 x i32]* @x, i32 0, i64 0), align 4
  ret void
}

declare i32 @latin_ptr2len(i8*)

define i8* @test(i32 %c) nounwind {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32* %c.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  br label %cond.end

cond.false:                                       ; preds = %entry
  %1 = load i8** @test.bufptr, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ getelementptr inbounds ([10 x i8]* @test.buf, i32 0, i32 0), %cond.true ], [ %1, %cond.false ]
  ret i8* %cond
}

define void @booltest2() nounwind {
entry:
  ret void
}
