; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGen/2009-06-01-addrofknr.c'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.funcptr = type { i32 (...)* }

define i32 @main(i32 %argc, i8** %argv) nounwind {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %fp = alloca %struct.funcptr, align 8
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %func = getelementptr inbounds %struct.funcptr* %fp, i32 0, i32 0
  store i32 (...)* bitcast (i32 (i8*)* @func to i32 (...)*), i32 (...)** %func, align 8
  %func1 = getelementptr inbounds %struct.funcptr* %fp, i32 0, i32 0
  store i32 (...)* bitcast (i32 (i8*)* @func to i32 (...)*), i32 (...)** %func1, align 8
  ret i32 0
}

define internal i32 @func(i8* %f) nounwind {
entry:
  %f.addr = alloca i8*, align 8
  store i8* %f, i8** %f.addr, align 8
  ret i32 0
}
