
 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1


 [B1 (ENTRY)]
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1


 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1: 1
   2: return [B1.1];
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1


 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3: a
   4: [B1.3] (ImplicitCastExpr, NoOp, const class A)
   5: const A &b = a;
   6: A() (CXXConstructExpr, class A)
   7: [B1.6] (BindTemporary)
   8: [B1.7] (ImplicitCastExpr, NoOp, const class A)
   9: [B1.8]
  10: const A &c = A();
  11: [B1.10].~A() (Implicit destructor)
  12: [B1.2].~A() (Implicit destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1


 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, class A [2])
   2: A a[2];
   3:  (CXXConstructExpr, class A [0])
   4: A b[0];
   5: [B1.2].~A() (Implicit destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1


 [B2 (ENTRY)]
   Succs (1): B1

 [B1]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3:  (CXXConstructExpr, class A)
   4: A c;
   5:  (CXXConstructExpr, class A)
   6: A d;
   7: [B1.6].~A() (Implicit destructor)
   8: [B1.4].~A() (Implicit destructor)
   9:  (CXXConstructExpr, class A)
  10: A b;
  11: [B1.10].~A() (Implicit destructor)
  12: [B1.2].~A() (Implicit destructor)
   Preds (1): B2
   Succs (1): B0

 [B0 (EXIT)]
   Preds (1): B1


 [B4 (ENTRY)]
   Succs (1): B3

 [B1]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B1.2].~A() (Implicit destructor)
   4: [B3.4].~A() (Implicit destructor)
   5: [B3.2].~A() (Implicit destructor)
   Preds (1): B3
   Succs (1): B0

 [B2]
   1: return;
   2: [B3.4].~A() (Implicit destructor)
   3: [B3.2].~A() (Implicit destructor)
   Preds (1): B3
   Succs (1): B0

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3:  (CXXConstructExpr, class A)
   4: A b;
   5: UV
   6: [B3.5] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B3.6]
   Preds (1): B4
   Succs (2): B2 B1

 [B0 (EXIT)]
   Preds (2): B1 B2


 [B8 (ENTRY)]
   Succs (1): B7

 [B1]
  l1:
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B1.2].~A() (Implicit destructor)
   4: [B6.2].~A() (Implicit destructor)
   5: [B7.2].~A() (Implicit destructor)
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1:  (CXXConstructExpr, class A)
   2: A b;
   3: [B2.2].~A() (Implicit destructor)
   4: [B6.4].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: [B6.4].~A() (Implicit destructor)
   T: goto l1;

   Preds (1): B4
   Succs (1): B1

 [B4]
   1: UV
   2: [B4.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B4.2]
   Preds (1): B6
   Succs (2): B3 B2

 [B5]
   1: [B6.4].~A() (Implicit destructor)
   2: [B6.2].~A() (Implicit destructor)
   T: goto l0;

   Preds (1): B6
   Succs (1): B6

 [B6]
  l0:
   1:  (CXXConstructExpr, class A)
   2: A b;
   3:  (CXXConstructExpr, class A)
   4: A a;
   5: UV
   6: [B6.5] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B6.6]
   Preds (2): B7 B5
   Succs (2): B5 B4

 [B7]
   1:  (CXXConstructExpr, class A)
   2: A a;
   Preds (1): B8
   Succs (1): B6

 [B0 (EXIT)]
   Preds (1): B1


 [B5 (ENTRY)]
   Succs (1): B4

 [B1]
   1: [B4.6].~A() (Implicit destructor)
   2: [B4.2].~A() (Implicit destructor)
   Preds (2): B2 B3
   Succs (1): B0

 [B2]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B2.2].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B3.2].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B1

 [B4]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3: a
   4: [B4.3] (ImplicitCastExpr, NoOp, const class A)
   5: [B4.4] (CXXConstructExpr, class A)
   6: A b = a;
   7: b
   8: [B4.7] (ImplicitCastExpr, NoOp, const class A)
   9: [B4.8].operator int
  10: [B4.9]()
  11: [B4.10] (ImplicitCastExpr, UserDefinedConversion, int)
  12: [B4.11] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B4.12]
   Preds (1): B5
   Succs (2): B3 B2

 [B0 (EXIT)]
   Preds (1): B1


 [B9 (ENTRY)]
   Succs (1): B8

 [B1]
   1: [B8.6].~A() (Implicit destructor)
   2:  (CXXConstructExpr, class A)
   3: A e;
   4: [B1.3].~A() (Implicit destructor)
   5: [B8.2].~A() (Implicit destructor)
   Preds (2): B2 B5
   Succs (1): B0

 [B2]
   1:  (CXXConstructExpr, class A)
   2: A d;
   3: [B2.2].~A() (Implicit destructor)
   4: [B4.2].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B1

 [B3]
   1: return;
   2: [B4.2].~A() (Implicit destructor)
   3: [B8.6].~A() (Implicit destructor)
   4: [B8.2].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B0

 [B4]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: UV
   4: [B4.3] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B4.4]
   Preds (1): B8
   Succs (2): B3 B2

 [B5]
   1:  (CXXConstructExpr, class A)
   2: A d;
   3: [B5.2].~A() (Implicit destructor)
   4: [B7.2].~A() (Implicit destructor)
   Preds (1): B7
   Succs (1): B1

 [B6]
   1: return;
   2: [B7.2].~A() (Implicit destructor)
   3: [B8.6].~A() (Implicit destructor)
   4: [B8.2].~A() (Implicit destructor)
   Preds (1): B7
   Succs (1): B0

 [B7]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: UV
   4: [B7.3] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B7.4]
   Preds (1): B8
   Succs (2): B6 B5

 [B8]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3: a
   4: [B8.3] (ImplicitCastExpr, NoOp, const class A)
   5: [B8.4] (CXXConstructExpr, class A)
   6: A b = a;
   7: b
   8: [B8.7] (ImplicitCastExpr, NoOp, const class A)
   9: [B8.8].operator int
  10: [B8.9]()
  11: [B8.10] (ImplicitCastExpr, UserDefinedConversion, int)
  12: [B8.11] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: if [B8.12]
   Preds (1): B9
   Succs (2): B7 B4

 [B0 (EXIT)]
   Preds (3): B1 B3 B6


 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: [B4.4].~A() (Implicit destructor)
   2: [B5.2].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B4

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B3.2].~A() (Implicit destructor)
   4: [B4.4].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: a
   2: [B4.1] (ImplicitCastExpr, NoOp, const class A)
   3: [B4.2] (CXXConstructExpr, class A)
   4: A b = a;
   5: b
   6: [B4.5] (ImplicitCastExpr, NoOp, const class A)
   7: [B4.6].operator int
   8: [B4.7]()
   9: [B4.8] (ImplicitCastExpr, UserDefinedConversion, int)
  10: [B4.9] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: while [B4.10]
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1:  (CXXConstructExpr, class A)
   2: A a;
   Preds (1): B6
   Succs (1): B4

 [B0 (EXIT)]
   Preds (1): B1


 [B12 (ENTRY)]
   Succs (1): B11

 [B1]
   1: [B10.4].~A() (Implicit destructor)
   2:  (CXXConstructExpr, class A)
   3: A e;
   4: [B1.3].~A() (Implicit destructor)
   5: [B11.2].~A() (Implicit destructor)
   Preds (2): B8 B10
   Succs (1): B0

 [B2]
   Preds (2): B3 B6
   Succs (1): B10

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A d;
   3: [B3.2].~A() (Implicit destructor)
   4: [B9.2].~A() (Implicit destructor)
   5: [B10.4].~A() (Implicit destructor)
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: return;
   2: [B9.2].~A() (Implicit destructor)
   3: [B10.4].~A() (Implicit destructor)
   4: [B11.2].~A() (Implicit destructor)
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: UV
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B5.2]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: [B9.2].~A() (Implicit destructor)
   2: [B10.4].~A() (Implicit destructor)
   T: continue;

   Preds (1): B7
   Succs (1): B2

 [B7]
   1: UV
   2: [B7.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B7.2]
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: [B9.2].~A() (Implicit destructor)
   T: break;

   Preds (1): B9
   Succs (1): B1

 [B9]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: UV
   4: [B9.3] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B9.4]
   Preds (1): B10
   Succs (2): B8 B7

 [B10]
   1: a
   2: [B10.1] (ImplicitCastExpr, NoOp, const class A)
   3: [B10.2] (CXXConstructExpr, class A)
   4: A b = a;
   5: b
   6: [B10.5] (ImplicitCastExpr, NoOp, const class A)
   7: [B10.6].operator int
   8: [B10.7]()
   9: [B10.8] (ImplicitCastExpr, UserDefinedConversion, int)
  10: [B10.9] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: while [B10.10]
   Preds (2): B2 B11
   Succs (2): B9 B1

 [B11]
   1:  (CXXConstructExpr, class A)
   2: A a;
   Preds (1): B12
   Succs (1): B10

 [B0 (EXIT)]
   Preds (2): B1 B4


 [B4 (ENTRY)]
   Succs (1): B2

 [B1]
   1: UV
   2: [B1.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: do ... while [B1.2]
   Preds (1): B2
   Succs (2): B3 B0

 [B2]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3: [B2.2].~A() (Implicit destructor)
   Preds (2): B3 B4
   Succs (1): B1

 [B3]
   Preds (1): B1
   Succs (1): B2

 [B0 (EXIT)]
   Preds (1): B1


 [B12 (ENTRY)]
   Succs (1): B11

 [B1]
   1:  (CXXConstructExpr, class A)
   2: A d;
   3: [B1.2].~A() (Implicit destructor)
   4: [B11.2].~A() (Implicit destructor)
   Preds (2): B8 B2
   Succs (1): B0

 [B2]
   1: UV
   2: [B2.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: do ... while [B2.2]
   Preds (2): B3 B6
   Succs (2): B10 B1

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B3.2].~A() (Implicit destructor)
   4: [B9.2].~A() (Implicit destructor)
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: return;
   2: [B9.2].~A() (Implicit destructor)
   3: [B11.2].~A() (Implicit destructor)
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: UV
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B5.2]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: [B9.2].~A() (Implicit destructor)
   T: continue;

   Preds (1): B7
   Succs (1): B2

 [B7]
   1: UV
   2: [B7.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B7.2]
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: [B9.2].~A() (Implicit destructor)
   T: break;

   Preds (1): B9
   Succs (1): B1

 [B9]
   1:  (CXXConstructExpr, class A)
   2: A b;
   3: UV
   4: [B9.3] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B9.4]
   Preds (2): B10 B11
   Succs (2): B8 B7

 [B10]
   Preds (1): B2
   Succs (1): B9

 [B11]
   1:  (CXXConstructExpr, class A)
   2: A a;
   Preds (1): B12
   Succs (1): B9

 [B0 (EXIT)]
   Preds (2): B1 B4


 [B4 (ENTRY)]
   Succs (1): B2

 [B1]
   1: [B2.6].~A() (Implicit destructor)
   2: [B2.2].~A() (Implicit destructor)
   Preds (2): B3 B2
   Succs (1): B0

 [B2]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3: a
   4: [B2.3] (ImplicitCastExpr, NoOp, const class A)
   5: [B2.4] (CXXConstructExpr, class A)
   6: A b = a;
   7: b
   8: [B2.7] (ImplicitCastExpr, NoOp, const class A)
   9: [B2.8].operator int
  10: [B2.9]()
  11: [B2.10] (ImplicitCastExpr, UserDefinedConversion, int)
   T: switch [B2.11]
   Preds (1): B4
   Succs (1): B1

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B3.2].~A() (Implicit destructor)
   Succs (1): B1

 [B0 (EXIT)]
   Preds (1): B1


 [B9 (ENTRY)]
   Succs (1): B2

 [B1]
   1: [B2.6].~A() (Implicit destructor)
   2:  (CXXConstructExpr, class A)
   3: A g;
   4: [B1.3].~A() (Implicit destructor)
   5: [B2.2].~A() (Implicit destructor)
   Preds (3): B3 B7 B2
   Succs (1): B0

 [B2]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3: a
   4: [B2.3] (ImplicitCastExpr, NoOp, const class A)
   5: [B2.4] (CXXConstructExpr, class A)
   6: A b = a;
   7: b
   8: [B2.7] (ImplicitCastExpr, NoOp, const class A)
   9: [B2.8].operator int
  10: [B2.9]()
  11: [B2.10] (ImplicitCastExpr, UserDefinedConversion, int)
   T: switch [B2.11]
   Preds (1): B9
   Succs (3): B3 B8
     B1

 [B3]
  case 1:
   T: break;

   Preds (2): B2 B4
   Succs (1): B1

 [B4]
   1:  (CXXConstructExpr, class A)
   2: A f;
   3: [B4.2].~A() (Implicit destructor)
   4: [B8.2].~A() (Implicit destructor)
   Preds (1): B6
   Succs (1): B3

 [B5]
   1: return;
   2: [B8.2].~A() (Implicit destructor)
   3: [B2.6].~A() (Implicit destructor)
   4: [B2.2].~A() (Implicit destructor)
   Preds (1): B6
   Succs (1): B0

 [B6]
   1: UV
   2: [B6.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B6.2]
   Preds (1): B8
   Succs (2): B5 B4

 [B7]
   1: [B8.2].~A() (Implicit destructor)
   T: break;

   Preds (1): B8
   Succs (1): B1

 [B8]
  case 0:
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: UV
   4: [B8.3] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B8.4]
   Preds (1): B2
   Succs (2): B7 B6

 [B0 (EXIT)]
   Preds (2): B1 B5


 [B6 (ENTRY)]
   Succs (1): B5

 [B1]
   1: [B4.4].~A() (Implicit destructor)
   2: [B5.2].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B0

 [B2]
   Preds (1): B3
   Succs (1): B4

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A c;
   3: [B3.2].~A() (Implicit destructor)
   4: [B4.4].~A() (Implicit destructor)
   Preds (1): B4
   Succs (1): B2

 [B4]
   1: a
   2: [B4.1] (ImplicitCastExpr, NoOp, const class A)
   3: [B4.2] (CXXConstructExpr, class A)
   4: A b = a;
   5: b
   6: [B4.5] (ImplicitCastExpr, NoOp, const class A)
   7: [B4.6].operator int
   8: [B4.7]()
   9: [B4.8] (ImplicitCastExpr, UserDefinedConversion, int)
  10: [B4.9] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: for (...; [B4.10]; )
   Preds (2): B2 B5
   Succs (2): B3 B1

 [B5]
   1:  (CXXConstructExpr, class A)
   2: A a;
   Preds (1): B6
   Succs (1): B4

 [B0 (EXIT)]
   Preds (1): B1


 [B12 (ENTRY)]
   Succs (1): B11

 [B1]
   1: [B10.4].~A() (Implicit destructor)
   2: [B11.4].~A() (Implicit destructor)
   3:  (CXXConstructExpr, class A)
   4: A f;
   5: [B1.4].~A() (Implicit destructor)
   6: [B11.2].~A() (Implicit destructor)
   Preds (2): B8 B10
   Succs (1): B0

 [B2]
   Preds (2): B3 B6
   Succs (1): B10

 [B3]
   1:  (CXXConstructExpr, class A)
   2: A e;
   3: [B3.2].~A() (Implicit destructor)
   4: [B9.2].~A() (Implicit destructor)
   5: [B10.4].~A() (Implicit destructor)
   Preds (1): B5
   Succs (1): B2

 [B4]
   1: return;
   2: [B9.2].~A() (Implicit destructor)
   3: [B10.4].~A() (Implicit destructor)
   4: [B11.4].~A() (Implicit destructor)
   5: [B11.2].~A() (Implicit destructor)
   Preds (1): B5
   Succs (1): B0

 [B5]
   1: UV
   2: [B5.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B5.2]
   Preds (1): B7
   Succs (2): B4 B3

 [B6]
   1: [B9.2].~A() (Implicit destructor)
   T: continue;

   Preds (1): B7
   Succs (1): B2

 [B7]
   1: UV
   2: [B7.1] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B7.2]
   Preds (1): B9
   Succs (2): B6 B5

 [B8]
   1: [B9.2].~A() (Implicit destructor)
   T: break;

   Preds (1): B9
   Succs (1): B1

 [B9]
   1:  (CXXConstructExpr, class A)
   2: A d;
   3: UV
   4: [B9.3] (ImplicitCastExpr, LValueToRValue, _Bool)
   T: if [B9.4]
   Preds (1): B10
   Succs (2): B8 B7

 [B10]
   1: b
   2: [B10.1] (ImplicitCastExpr, NoOp, const class A)
   3: [B10.2] (CXXConstructExpr, class A)
   4: A c = b;
   5: c
   6: [B10.5] (ImplicitCastExpr, NoOp, const class A)
   7: [B10.6].operator int
   8: [B10.7]()
   9: [B10.8] (ImplicitCastExpr, UserDefinedConversion, int)
  10: [B10.9] (ImplicitCastExpr, IntegralToBoolean, _Bool)
   T: for (...; [B10.10]; )
   Preds (2): B2 B11
   Succs (2): B9 B1

 [B11]
   1:  (CXXConstructExpr, class A)
   2: A a;
   3:  (CXXConstructExpr, class A)
   4: A b;
   Preds (1): B12
   Succs (1): B10

 [B0 (EXIT)]
   Preds (2): B1 B4


 [B3 (ENTRY)]
   Succs (1): B0

 [B1]
   T: try ...
   Succs (2): B2 B0

 [B2]
  catch (const A &e):
   1: catch (const A &e) {
}
   Preds (1): B1
   Succs (1): B0

 [B0 (EXIT)]
   Preds (3): B2 B1 B3


 [B3 (ENTRY)]
   Succs (1): B0

 [B1]
   T: try ...
   Succs (2): B2 B0

 [B2]
  catch (A e):
   1: catch (A e) {
}
   2: [B2.1].~A() (Implicit destructor)
   Preds (1): B1
   Succs (1): B0

 [B0 (EXIT)]
   Preds (3): B2 B1 B3

