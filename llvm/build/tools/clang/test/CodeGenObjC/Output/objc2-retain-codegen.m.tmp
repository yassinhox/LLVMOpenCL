; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/objc2-retain-codegen.m'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-unknown"

module asm "\09.objc_class_name_I0=0"
module asm "\09.globl .objc_class_name_I0"

%0 = type opaque
%struct._objc_class = type { %struct._objc_class*, %struct._objc_class*, i8*, i64, i64, i64, %struct._objc_ivar_list*, %struct._objc_method_list*, %struct._objc_cache*, %struct._objc_protocol_list*, i8*, %struct._objc_class_extension* }
%struct._objc_ivar_list = type opaque
%struct._objc_method_list = type opaque
%struct._objc_cache = type opaque
%struct._objc_protocol_list = type { %struct._objc_protocol_list*, i64, [0 x %struct._objc_protocol] }
%struct._objc_protocol = type { %struct._objc_protocol_extension*, i8*, %struct._objc_protocol_list*, %struct._objc_method_description_list*, %struct._objc_method_description_list* }
%struct._objc_protocol_extension = type { i32, %struct._objc_method_description_list*, %struct._objc_method_description_list*, %struct._prop_list_t*, i8** }
%struct._objc_method_description_list = type { i32, [0 x %struct._objc_method_description] }
%struct._objc_method_description = type { i8*, i8* }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._objc_class_extension = type { i32, i8*, %struct._prop_list_t* }
%struct._objc_ivar = type { i8*, i8*, i32 }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_module = type { i64, i64, i8*, %struct._objc_symtab* }
%struct._objc_symtab = type { i64, i8*, i16, i16, [0 x i8*] }

@"\01L_OBJC_METH_VAR_NAME_" = internal global [3 x i8] c"p0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [8 x i8] c"@16@0:8\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_1" = internal global [7 x i8] c"setP0:\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_2" = internal global [11 x i8] c"v24@0:8@16\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_" = internal global [3 x i8] c"I0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METACLASS_I0" = internal global %struct._objc_class { %struct._objc_class* bitcast ([3 x i8]* @"\01L_OBJC_CLASS_NAME_" to %struct._objc_class*), %struct._objc_class* null, i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i64 0, i64 2, i64 96, %struct._objc_ivar_list* null, %struct._objc_method_list* null, %struct._objc_cache* null, %struct._objc_protocol_list* null, i8* null, %struct._objc_class_extension* null }, section "__OBJC,__meta_class,regular,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_3" = internal global [4 x i8] c"_f0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_4" = internal global [6 x i8] c"@\22I0\22\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_INSTANCE_VARIABLES_I0" = internal global { i32, [1 x %struct._objc_ivar] } { i32 1, [1 x %struct._objc_ivar] [%struct._objc_ivar { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_TYPE_4", i32 0, i32 0), i32 0 }] }, section "__OBJC,__instance_vars,regular,no_dead_strip", align 4
@"\01L_OBJC_INSTANCE_METHODS_I0" = internal global { i8*, i32, [2 x %struct._objc_method] } { i8* null, i32 2, [2 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (i8* (%0*, i8*)* @"\01-[I0 p0]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_2", i32 0, i32 0), i8* bitcast (void (%0*, i8*, i8*)* @"\01-[I0 setP0:]" to i8*) }] }, section "__OBJC,__inst_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_NAME_5" = internal global [2 x i8] c"\01\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_" = internal global [3 x i8] c"p0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_6" = internal global [10 x i8] c"T@,&,V_f0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01l_OBJC_$_PROP_LIST_I0" = internal global { i32, i32, [1 x %struct._prop_t] } { i32 16, i32 1, [1 x %struct._prop_t] [%struct._prop_t { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_6", i32 0, i32 0) }] }, section "__OBJC,__property,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASSEXT_I0" = internal global %struct._objc_class_extension { i32 24, i8* null, %struct._prop_list_t* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_I0" to %struct._prop_list_t*) }, section "__OBJC,__class_ext,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_I0" = internal global %struct._objc_class { %struct._objc_class* @"\01L_OBJC_METACLASS_I0", %struct._objc_class* null, i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i64 0, i64 1, i64 8, %struct._objc_ivar_list* bitcast ({ i32, [1 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_I0" to %struct._objc_ivar_list*), %struct._objc_method_list* bitcast ({ i8*, i32, [2 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_I0" to %struct._objc_method_list*), %struct._objc_cache* null, %struct._objc_protocol_list* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_5", i32 0, i32 0), %struct._objc_class_extension* @"\01L_OBJC_CLASSEXT_I0" }, section "__OBJC,__class,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_NAME_7" = internal global [1 x i8] zeroinitializer, section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_SYMBOLS" = internal global { i64, i8*, i16, i16, [1 x i8*] } { i64 0, i8* null, i16 1, i16 0, [1 x i8*] [i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_I0" to i8*)] }, section "__OBJC,__symbols,regular,no_dead_strip", align 4
@"\01L_OBJC_MODULES" = internal global %struct._objc_module { i64 7, i64 32, i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_7", i32 0, i32 0), %struct._objc_symtab* bitcast ({ i64, i8*, i16, i16, [1 x i8*] }* @"\01L_OBJC_SYMBOLS" to %struct._objc_symtab*) }, section "__OBJC,__module_info,regular,no_dead_strip", align 4
@llvm.used = appending global [19 x i8*] [i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_2", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* bitcast (%struct._objc_class* @"\01L_OBJC_METACLASS_I0" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_TYPE_4", i32 0, i32 0), i8* bitcast ({ i32, [1 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_I0" to i8*), i8* bitcast ({ i8*, i32, [2 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_I0" to i8*), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_5", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_6", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_I0" to i8*), i8* bitcast (%struct._objc_class_extension* @"\01L_OBJC_CLASSEXT_I0" to i8*), i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_I0" to i8*), i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_7", i32 0, i32 0), i8* bitcast ({ i64, i8*, i16, i16, [1 x i8*] }* @"\01L_OBJC_SYMBOLS" to i8*), i8* bitcast (%struct._objc_module* @"\01L_OBJC_MODULES" to i8*)], section "llvm.metadata"

define internal i8* @"\01-[I0 p0]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load %0** %self.addr
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %0**
  %2 = load %0** %1, align 8
  %3 = bitcast %0* %2 to i8*
  ret i8* %3
}

define internal void @"\01-[I0 setP0:]"(%0* %self, i8* %_cmd, i8* %p0) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  %p0.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  store i8* %p0, i8** %p0.addr, align 8
  %0 = load i8** %p0.addr, align 8
  %1 = bitcast i8* %0 to %0*
  %2 = load %0** %self.addr, align 8
  %3 = bitcast %0* %2 to i8*
  %add.ptr = getelementptr inbounds i8* %3, i64 0
  %4 = bitcast i8* %add.ptr to %0**
  %5 = load %0** %self.addr, align 8
  %sub.ptr.rhs.cast = ptrtoint %0* %5 to i64
  %sub.ptr.lhs.cast = ptrtoint %0** %4 to i64
  %ivar.offset = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %6 = bitcast %0* %1 to i8*
  %7 = bitcast %0* %5 to i8**
  %8 = call i8* @objc_assign_ivar(i8* %6, i8** %7, i64 %ivar.offset)
  ret void
}

declare i8* @objc_assign_ivar(i8*, i8**, i64)

!llvm.module.flags = !{!0, !1, !2, !3, !4, !5}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 1}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__OBJC, __image_info,regular"}
!3 = metadata !{i32 1, metadata !"Objective-C Garbage Collection", i32 2}
!4 = metadata !{i32 1, metadata !"Objective-C GC Only", i32 4}
!5 = metadata !{i32 3, metadata !"Objective-C GC Only", metadata !6}
!6 = metadata !{metadata !"Objective-C Garbage Collection", i32 2}
