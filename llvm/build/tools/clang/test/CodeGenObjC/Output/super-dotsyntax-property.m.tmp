; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/super-dotsyntax-property.m'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type opaque
%struct._class_t = type { %struct._class_t*, %struct._class_t*, %struct._objc_cache*, i8* (i8*, i8*)**, %struct._class_ro_t* }
%struct._objc_cache = type opaque
%struct._class_ro_t = type { i32, i32, i32, i8*, i8*, %struct.__method_list_t*, %struct._objc_protocol_list*, %struct._ivar_list_t*, i8*, %struct._prop_list_t* }
%struct.__method_list_t = type { i32, i32, [0 x %struct._objc_method] }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_protocol_list = type { i64, [0 x %struct._protocol_t*] }
%struct._protocol_t = type { i8*, i8*, %struct._objc_protocol_list*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct._prop_list_t*, i32, i32, i8** }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._ivar_list_t = type { i32, i32, [0 x %struct._ivar_t] }
%struct._ivar_t = type { i64*, i8*, i8*, i32, i32 }
%struct._objc_super = type { i8*, i8* }

@"OBJC_METACLASS_$_A" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_B", %struct._class_t* @"OBJC_METACLASS_$_B", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_A" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASSLIST_SUP_REFS_$_" = internal global %struct._class_t* @"OBJC_METACLASS_$_A", section "__DATA, __objc_superrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_METH_VAR_NAME_" = internal global [16 x i8] c"setClassGetter:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_" = internal global i8* getelementptr inbounds ([16 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_METH_VAR_NAME_1" = internal global [12 x i8] c"classGetter\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_2" = internal global i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"OBJC_CLASS_$_A" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_A", %struct._class_t* @"OBJC_CLASS_$_B", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_A" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASSLIST_SUP_REFS_$_3" = internal global %struct._class_t* @"OBJC_CLASS_$_A", section "__DATA, __objc_superrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_METH_VAR_NAME_4" = internal global [11 x i8] c"setGetter:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_5" = internal global i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_METH_VAR_NAME_6" = internal global [7 x i8] c"getter\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_7" = internal global i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_6", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_METH_VAR_NAME_8" = internal global [7 x i8] c"parent\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_9" = internal global i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_8", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_METH_VAR_NAME_10" = internal global [11 x i8] c"setParent:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_11" = internal global i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@_objc_empty_cache = external global %struct._objc_cache
@_objc_empty_vtable = external global i8* (i8*, i8*)*
@"OBJC_METACLASS_$_B" = external global %struct._class_t
@"\01L_OBJC_CLASS_NAME_" = internal global [2 x i8] c"A\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [8 x i8] c"i16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_12" = internal global [13 x i8] c"classGetter2\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_CLASS_METHODS_A" = internal global { i32, i32, [2 x %struct._objc_method] } { i32 24, i32 2, [2 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (i32 (i8*, i8*)* @"\01+[A classGetter]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([13 x i8]* @"\01L_OBJC_METH_VAR_NAME_12", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (i32 (i8*, i8*)* @"\01+[A classGetter2]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_METACLASS_RO_$_A" = internal global %struct._class_ro_t { i32 1, i32 40, i32 40, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [2 x %struct._objc_method] }* @"\01l_OBJC_$_CLASS_METHODS_A" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"OBJC_CLASS_$_B" = external global %struct._class_t
@"\01L_OBJC_METH_VAR_NAME_13" = internal global [7 x i8] c"method\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_14" = internal global [8 x i8] c"v16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_15" = internal global [11 x i8] c"v20@0:8i16\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_METHODS_A" = internal global { i32, i32, [2 x %struct._objc_method] } { i32 24, i32 2, [2 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_13", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_14", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[A method]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_15", i32 0, i32 0), i8* bitcast (void (%0*, i8*, i32)* @"\01-[A setParent:]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_CLASS_RO_$_A" = internal global %struct._class_ro_t { i32 0, i32 4, i32 4, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [2 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_A" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_CLASSLIST_REFERENCES_$_" = internal global %struct._class_t* @"OBJC_CLASS_$_A", section "__DATA, __objc_classrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_SELECTOR_REFERENCES_16" = internal global i8* getelementptr inbounds ([13 x i8]* @"\01L_OBJC_METH_VAR_NAME_12", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_LABEL_CLASS_$" = internal global [1 x i8*] [i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_A" to i8*)], section "__DATA, __objc_classlist, regular, no_dead_strip", align 8
@llvm.used = appending global [25 x i8*] [i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_" to i8*), i8* getelementptr inbounds ([16 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_" to i8*), i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_2" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_3" to i8*), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_5" to i8*), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_6", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_7" to i8*), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_8", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_9" to i8*), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_11" to i8*), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @"\01L_OBJC_METH_VAR_NAME_12", i32 0, i32 0), i8* bitcast ({ i32, i32, [2 x %struct._objc_method] }* @"\01l_OBJC_$_CLASS_METHODS_A" to i8*), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_13", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_14", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_15", i32 0, i32 0), i8* bitcast ({ i32, i32, [2 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_A" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_16" to i8*), i8* bitcast ([1 x i8*]* @"\01L_OBJC_LABEL_CLASS_$" to i8*)], section "llvm.metadata"

define internal i32 @"\01+[A classGetter]"(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 8
  %_cmd.addr = alloca i8*, align 8
  store i8* %self, i8** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  ret i32 0
}

define internal i32 @"\01+[A classGetter2]"(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 8
  %_cmd.addr = alloca i8*, align 8
  %objc_super = alloca %struct._objc_super
  %objc_super3 = alloca %struct._objc_super
  store i8* %self, i8** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load i8** %self.addr
  %0 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 0
  store i8* %self1, i8** %0
  %1 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_"
  %2 = bitcast %struct._class_t* %1 to i8*
  %3 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 1
  store i8* %2, i8** %3
  %4 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_", !invariant.load !4
  call void bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to void (%struct._objc_super*, i8*, i32)*)(%struct._objc_super* %objc_super, i8* %4, i32 100)
  %self2 = load i8** %self.addr
  %5 = getelementptr inbounds %struct._objc_super* %objc_super3, i32 0, i32 0
  store i8* %self2, i8** %5
  %6 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_"
  %7 = bitcast %struct._class_t* %6 to i8*
  %8 = getelementptr inbounds %struct._objc_super* %objc_super3, i32 0, i32 1
  store i8* %7, i8** %8
  %9 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_2", !invariant.load !4
  %call = call i32 bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to i32 (%struct._objc_super*, i8*)*)(%struct._objc_super* %objc_super3, i8* %9)
  ret i32 %call
}

declare i8* @objc_msgSendSuper2(%struct._objc_super*, i8*, ...)

define internal void @"\01-[A method]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  %objc_super = alloca %struct._objc_super
  %x = alloca i32, align 4
  %objc_super3 = alloca %struct._objc_super
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load %0** %self.addr
  %0 = bitcast %0* %self1 to i8*
  %1 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 0
  store i8* %0, i8** %1
  %2 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_3"
  %3 = bitcast %struct._class_t* %2 to i8*
  %4 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 1
  store i8* %3, i8** %4
  %5 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_5", !invariant.load !4
  call void bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to void (%struct._objc_super*, i8*, i32)*)(%struct._objc_super* %objc_super, i8* %5, i32 200)
  %self2 = load %0** %self.addr
  %6 = bitcast %0* %self2 to i8*
  %7 = getelementptr inbounds %struct._objc_super* %objc_super3, i32 0, i32 0
  store i8* %6, i8** %7
  %8 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_3"
  %9 = bitcast %struct._class_t* %8 to i8*
  %10 = getelementptr inbounds %struct._objc_super* %objc_super3, i32 0, i32 1
  store i8* %9, i8** %10
  %11 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_7", !invariant.load !4
  %call = call i32 bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to i32 (%struct._objc_super*, i8*)*)(%struct._objc_super* %objc_super3, i8* %11)
  store i32 %call, i32* %x, align 4
  ret void
}

define internal void @"\01-[A setParent:]"(%0* %self, i8* %_cmd, i32 %arg) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  %arg.addr = alloca i32, align 4
  %objc_super = alloca %struct._objc_super
  %objc_super3 = alloca %struct._objc_super
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  store i32 %arg, i32* %arg.addr, align 4
  %0 = load i32* %arg.addr, align 4
  %self1 = load %0** %self.addr
  %1 = bitcast %0* %self1 to i8*
  %2 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 0
  store i8* %1, i8** %2
  %3 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_3"
  %4 = bitcast %struct._class_t* %3 to i8*
  %5 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 1
  store i8* %4, i8** %5
  %6 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_9", !invariant.load !4
  %call = call i32 bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to i32 (%struct._objc_super*, i8*)*)(%struct._objc_super* %objc_super, i8* %6)
  %add = add nsw i32 %0, %call
  %self2 = load %0** %self.addr
  %7 = bitcast %0* %self2 to i8*
  %8 = getelementptr inbounds %struct._objc_super* %objc_super3, i32 0, i32 0
  store i8* %7, i8** %8
  %9 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_3"
  %10 = bitcast %struct._class_t* %9 to i8*
  %11 = getelementptr inbounds %struct._objc_super* %objc_super3, i32 0, i32 1
  store i8* %10, i8** %11
  %12 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_11", !invariant.load !4
  call void bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to void (%struct._objc_super*, i8*, i32)*)(%struct._objc_super* %objc_super3, i8* %12, i32 %add)
  ret void
}

define void @f0() nounwind {
entry:
  %l1 = alloca i32, align 4
  %l2 = alloca i32, align 4
  %0 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_"
  %1 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_2", !invariant.load !4
  %2 = bitcast %struct._class_t* %0 to i8*
  %call = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %2, i8* %1)
  store i32 %call, i32* %l1, align 4
  %3 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_"
  %4 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_16", !invariant.load !4
  %5 = bitcast %struct._class_t* %3 to i8*
  %call1 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %5, i8* %4)
  store i32 %call1, i32* %l2, align 4
  ret void
}

declare i8* @objc_msgSend(i8*, i8*, ...) nonlazybind

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 2}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
!4 = metadata !{}
