; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/metadata_symbols.m'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:32:64-v128:32:128-a0:0:32-n32-S32"
target triple = "armv6-apple-darwin10"

%0 = type opaque
%1 = type opaque
%2 = type opaque
%3 = type opaque
%struct._objc_cache = type opaque
%struct._class_t = type { %struct._class_t*, %struct._class_t*, %struct._objc_cache*, i8* (i8*, i8*)**, %struct._class_ro_t* }
%struct._class_ro_t = type { i32, i32, i32, i8*, i8*, %struct.__method_list_t*, %struct._objc_protocol_list*, %struct._ivar_list_t*, i8*, %struct._prop_list_t* }
%struct.__method_list_t = type { i32, i32, [0 x %struct._objc_method] }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_protocol_list = type { i32, [0 x %struct._protocol_t*] }
%struct._protocol_t = type { i8*, i8*, %struct._objc_protocol_list*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct._prop_list_t*, i32, i32, i8** }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._ivar_list_t = type { i32, i32, [0 x %struct._ivar_t] }
%struct._ivar_t = type { i32*, i8*, i8*, i32, i32 }
%struct._category_t = type { i8*, %struct._class_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct._objc_protocol_list*, %struct._prop_list_t* }
%struct._objc_typeinfo = type { i8**, i8*, %struct._class_t* }

@_objc_empty_cache = external global %struct._objc_cache
@_objc_empty_vtable = external global i8* (i8*, i8*)*
@"OBJC_CLASS_$_A" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_A", %struct._class_t* null, %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_A" }, section "__DATA, __objc_data", align 4
@"OBJC_METACLASS_$_A" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_A", %struct._class_t* @"OBJC_CLASS_$_A", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_A" }, section "__DATA, __objc_data", align 4
@"\01L_OBJC_CLASS_NAME_" = internal global [2 x i8] c"A\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01l_OBJC_METACLASS_RO_$_A" = internal global %struct._class_ro_t { i32 3, i32 20, i32 20, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* null, %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 4
@"\01L_OBJC_METH_VAR_NAME_" = internal global [4 x i8] c"im0\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [7 x i8] c"v8@0:4\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_METHODS_A" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 12, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[A im0]" to i8*) }] }, section "__DATA, __objc_const", align 4
@"\01l_OBJC_CLASS_RO_$_A" = internal global %struct._class_ro_t { i32 2, i32 0, i32 0, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_A" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 4
@"\01L_OBJC_CLASS_NAME_1" = internal global [4 x i8] c"Cat\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_2" = internal global [4 x i8] c"im1\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_CATEGORY_INSTANCE_METHODS_A_$_Cat" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 12, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_2", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[A(Cat) im1]" to i8*) }] }, section "__DATA, __objc_const", align 4
@"\01l_OBJC_$_CATEGORY_A_$_Cat" = internal global %struct._category_t { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_1", i32 0, i32 0), %struct._class_t* @"OBJC_CLASS_$_A", %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CATEGORY_INSTANCE_METHODS_A_$_Cat" to %struct.__method_list_t*), %struct.__method_list_t* null, %struct._objc_protocol_list* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 4
@objc_ehtype_vtable = external global i8*
@"\01L_OBJC_CLASS_NAME_3" = internal global [4 x i8] c"EH1\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"OBJC_CLASS_$_EH1" = external global %struct._class_t
@"OBJC_EHTYPE_$_EH1" = weak global %struct._objc_typeinfo { i8** getelementptr (i8** @objc_ehtype_vtable, i32 2), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_3", i32 0, i32 0), %struct._class_t* @"OBJC_CLASS_$_EH1" }, section "__DATA,__datacoal_nt,coalesced", align 4
@"OBJC_EHTYPE_$_EH2" = external global %struct._objc_typeinfo
@"OBJC_EHTYPE_$_EH3" = global %struct._objc_typeinfo { i8** getelementptr (i8** @objc_ehtype_vtable, i32 2), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_4", i32 0, i32 0), %struct._class_t* @"OBJC_CLASS_$_EH3" }, section "__DATA,__objc_const", align 4
@"OBJC_CLASS_$_EH3" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_EH3", %struct._class_t* null, %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_EH3" }, section "__DATA, __objc_data", align 4
@"OBJC_METACLASS_$_EH3" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_EH3", %struct._class_t* @"OBJC_CLASS_$_EH3", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_EH3" }, section "__DATA, __objc_data", align 4
@"\01L_OBJC_CLASS_NAME_4" = internal global [4 x i8] c"EH3\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01l_OBJC_METACLASS_RO_$_EH3" = internal global %struct._class_ro_t { i32 3, i32 20, i32 20, i8* null, i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_4", i32 0, i32 0), %struct.__method_list_t* null, %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 4
@"\01l_OBJC_CLASS_RO_$_EH3" = internal global %struct._class_ro_t { i32 34, i32 0, i32 0, i8* null, i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_4", i32 0, i32 0), %struct.__method_list_t* null, %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 4
@"\01L_OBJC_LABEL_CLASS_$" = internal global [2 x i8*] [i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_A" to i8*), i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_EH3" to i8*)], section "__DATA, __objc_classlist, regular, no_dead_strip", align 4
@"\01L_OBJC_LABEL_CATEGORY_$" = internal global [1 x i8*] [i8* bitcast (%struct._category_t* @"\01l_OBJC_$_CATEGORY_A_$_Cat" to i8*)], section "__DATA, __objc_catlist, regular, no_dead_strip", align 4
@llvm.used = appending global [12 x i8*] [i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_A" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_2", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CATEGORY_INSTANCE_METHODS_A_$_Cat" to i8*), i8* bitcast (%struct._category_t* @"\01l_OBJC_$_CATEGORY_A_$_Cat" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_4", i32 0, i32 0), i8* bitcast ([2 x i8*]* @"\01L_OBJC_LABEL_CLASS_$" to i8*), i8* bitcast ([1 x i8*]* @"\01L_OBJC_LABEL_CATEGORY_$" to i8*)], section "llvm.metadata"

define internal void @"\01-[A im0]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %0* %self, %0** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  ret void
}

define internal void @"\01-[A(Cat) im1]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %0* %self, %0** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  ret void
}

define void @f0(i8* %x) nounwind {
entry:
  %x.addr = alloca i8*, align 4
  %exn.slot = alloca i8*
  %x1 = alloca %1*, align 4
  %x5 = alloca %2*, align 4
  %x9 = alloca %3*, align 4
  store i8* %x, i8** %x.addr, align 4
  call void bitcast (void (...)* @f1 to void ()*)()
  br label %eh.cont

eh.cont:                                          ; preds = %entry, %catch6, %catch2, %catch
  ret void

catch:                                            ; No predecessors!
  %exn = load i8** %exn.slot
  %exn.adjusted = call i8* @objc_begin_catch(i8* %exn) nounwind
  %0 = bitcast i8* %exn.adjusted to %1*
  store %1* %0, %1** %x1
  call void @objc_end_catch() nounwind
  br label %eh.cont

catch2:                                           ; No predecessors!
  %exn3 = load i8** %exn.slot
  %exn.adjusted4 = call i8* @objc_begin_catch(i8* %exn3) nounwind
  %1 = bitcast i8* %exn.adjusted4 to %2*
  store %2* %1, %2** %x5
  call void @objc_end_catch() nounwind
  br label %eh.cont

catch6:                                           ; No predecessors!
  %exn7 = load i8** %exn.slot
  %exn.adjusted8 = call i8* @objc_begin_catch(i8* %exn7) nounwind
  %2 = bitcast i8* %exn.adjusted8 to %3*
  store %3* %2, %3** %x9
  call void @objc_end_catch() nounwind
  br label %eh.cont
}

declare void @objc_exception_rethrow()

declare void @objc_end_catch()

declare i8* @objc_begin_catch(i8*)

declare void @f1(...)

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 2}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
