; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/continuation-class.m'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type opaque
%struct._objc_cache = type opaque
%struct._class_t = type { %struct._class_t*, %struct._class_t*, %struct._objc_cache*, i8* (i8*, i8*)**, %struct._class_ro_t* }
%struct._class_ro_t = type { i32, i32, i32, i8*, i8*, %struct.__method_list_t*, %struct._objc_protocol_list*, %struct._ivar_list_t*, i8*, %struct._prop_list_t* }
%struct.__method_list_t = type { i32, i32, [0 x %struct._objc_method] }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_protocol_list = type { i64, [0 x %struct._protocol_t*] }
%struct._protocol_t = type { i8*, i8*, %struct._objc_protocol_list*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct._prop_list_t*, i32, i32, i8** }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._ivar_list_t = type { i32, i32, [0 x %struct._ivar_t] }
%struct._ivar_t = type { i64*, i8*, i8*, i32, i32 }

@"OBJC_IVAR_$_ReadOnly._Anotherobject" = global i64 4, section "__DATA, __objc_ivar", align 8
@"OBJC_IVAR_$_ReadOnly._object" = global i64 0, section "__DATA, __objc_ivar", align 8
@_objc_empty_cache = external global %struct._objc_cache
@_objc_empty_vtable = external global i8* (i8*, i8*)*
@"OBJC_METACLASS_$_Object" = external global %struct._class_t
@"\01L_OBJC_CLASS_NAME_" = internal global [9 x i8] c"ReadOnly\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01l_OBJC_METACLASS_RO_$_ReadOnly" = internal global %struct._class_ro_t { i32 1, i32 40, i32 40, i8* null, i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* null, %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"OBJC_METACLASS_$_ReadOnly" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_Object", %struct._class_t* @"OBJC_METACLASS_$_Object", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_ReadOnly" }, section "__DATA, __objc_data", align 8
@"OBJC_CLASS_$_Object" = external global %struct._class_t
@"\01L_OBJC_METH_VAR_NAME_" = internal global [23 x i8] c"myAnotherobjectSetter:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [11 x i8] c"v20@0:8i16\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_1" = internal global [7 x i8] c"object\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_2" = internal global [8 x i8] c"i16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_3" = internal global [11 x i8] c"setObject:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_4" = internal global [14 x i8] c"Anotherobject\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_METHODS_ReadOnly" = internal global { i32, i32, [4 x %struct._objc_method] } { i32 24, i32 4, [4 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([23 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*, i32)* @"\01-[ReadOnly myAnotherobjectSetter:]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_2", i32 0, i32 0), i8* bitcast (i32 (%0*, i8*)* @"\01-[ReadOnly object]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*, i32)* @"\01-[ReadOnly setObject:]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([14 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_2", i32 0, i32 0), i8* bitcast (i32 (%0*, i8*)* @"\01-[ReadOnly Anotherobject]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_5" = internal global [8 x i8] c"_object\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_6" = internal global [2 x i8] c"i\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_7" = internal global [15 x i8] c"_Anotherobject\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_VARIABLES_ReadOnly" = internal global { i32, i32, [2 x %struct._ivar_t] } { i32 32, i32 2, [2 x %struct._ivar_t] [%struct._ivar_t { i64* @"OBJC_IVAR_$_ReadOnly._object", i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_NAME_5", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_6", i32 0, i32 0), i32 2, i32 4 }, %struct._ivar_t { i64* @"OBJC_IVAR_$_ReadOnly._Anotherobject", i8* getelementptr inbounds ([15 x i8]* @"\01L_OBJC_METH_VAR_NAME_7", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_6", i32 0, i32 0), i32 2, i32 4 }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_PROP_NAME_ATTR_" = internal global [7 x i8] c"object\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_8" = internal global [12 x i8] c"Ti,V_object\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_9" = internal global [14 x i8] c"Anotherobject\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_10" = internal global [19 x i8] c"Ti,V_Anotherobject\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01l_OBJC_$_PROP_LIST_ReadOnly" = internal global { i32, i32, [2 x %struct._prop_t] } { i32 16, i32 2, [2 x %struct._prop_t] [%struct._prop_t { i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_8", i32 0, i32 0) }, %struct._prop_t { i8* getelementptr inbounds ([14 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_9", i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_10", i32 0, i32 0) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_CLASS_RO_$_ReadOnly" = internal global %struct._class_ro_t { i32 0, i32 0, i32 8, i8* null, i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [4 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_ReadOnly" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* bitcast ({ i32, i32, [2 x %struct._ivar_t] }* @"\01l_OBJC_$_INSTANCE_VARIABLES_ReadOnly" to %struct._ivar_list_t*), i8* null, %struct._prop_list_t* bitcast ({ i32, i32, [2 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_ReadOnly" to %struct._prop_list_t*) }, section "__DATA, __objc_const", align 8
@"OBJC_CLASS_$_ReadOnly" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_ReadOnly", %struct._class_t* @"OBJC_CLASS_$_Object", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_ReadOnly" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASSLIST_REFERENCES_$_" = internal global %struct._class_t* @"OBJC_CLASS_$_ReadOnly", section "__DATA, __objc_classrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_METH_VAR_NAME_11" = internal global [4 x i8] c"new\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_" = internal global i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_12" = internal global i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_13" = internal global i8* getelementptr inbounds ([23 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_14" = internal global i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_15" = internal global i8* getelementptr inbounds ([14 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_LABEL_CLASS_$" = internal global [1 x i8*] [i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_ReadOnly" to i8*)], section "__DATA, __objc_classlist, regular, no_dead_strip", align 8
@llvm.used = appending global [25 x i8*] [i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([23 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_2", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), i8* bitcast ({ i32, i32, [4 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_ReadOnly" to i8*), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_NAME_5", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_6", i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @"\01L_OBJC_METH_VAR_NAME_7", i32 0, i32 0), i8* bitcast ({ i32, i32, [2 x %struct._ivar_t] }* @"\01l_OBJC_$_INSTANCE_VARIABLES_ReadOnly" to i8*), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_8", i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_9", i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_10", i32 0, i32 0), i8* bitcast ({ i32, i32, [2 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_ReadOnly" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_12" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_13" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_14" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_15" to i8*), i8* bitcast ([1 x i8*]* @"\01L_OBJC_LABEL_CLASS_$" to i8*)], section "llvm.metadata"

define internal void @"\01-[ReadOnly myAnotherobjectSetter:]"(%0* %self, i8* %_cmd, i32 %val) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  %val.addr = alloca i32, align 4
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  store i32 %val, i32* %val.addr, align 4
  %0 = load i32* %val.addr, align 4
  %1 = load %0** %self.addr, align 8
  %ivar = load i64* @"OBJC_IVAR_$_ReadOnly._Anotherobject", !invariant.load !4
  %2 = bitcast %0* %1 to i8*
  %add.ptr = getelementptr inbounds i8* %2, i64 %ivar
  %3 = bitcast i8* %add.ptr to i32*
  store i32 %0, i32* %3, align 4
  ret void
}

define internal i32 @"\01-[ReadOnly object]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load %0** %self.addr
  %ivar = load i64* @"OBJC_IVAR_$_ReadOnly._object", !invariant.load !4
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 %ivar
  %1 = bitcast i8* %add.ptr to i32*
  %load = load atomic i32* %1 unordered, align 4
  ret i32 %load
}

define internal void @"\01-[ReadOnly setObject:]"(%0* %self, i8* %_cmd, i32 %object) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  %object.addr = alloca i32, align 4
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  store i32 %object, i32* %object.addr, align 4
  %self1 = load %0** %self.addr
  %ivar = load i64* @"OBJC_IVAR_$_ReadOnly._object", !invariant.load !4
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 %ivar
  %1 = bitcast i8* %add.ptr to i32*
  %2 = load i32* %object.addr
  store atomic i32 %2, i32* %1 unordered, align 4
  ret void
}

define internal i32 @"\01-[ReadOnly Anotherobject]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load %0** %self.addr
  %ivar = load i64* @"OBJC_IVAR_$_ReadOnly._Anotherobject", !invariant.load !4
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 %ivar
  %1 = bitcast i8* %add.ptr to i32*
  %load = load atomic i32* %1 unordered, align 4
  ret i32 %load
}

define i32 @main(i32 %argc, i8** %argv) nounwind {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %test = alloca %0*, align 8
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %0 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_"
  %1 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_", !invariant.load !4
  %2 = bitcast %struct._class_t* %0 to i8*
  %call = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %2, i8* %1)
  %3 = bitcast i8* %call to %0*
  store %0* %3, %0** %test, align 8
  %4 = load %0** %test, align 8
  %5 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_12", !invariant.load !4
  %6 = bitcast %0* %4 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %6, i8* %5, i32 12345)
  %7 = load %0** %test, align 8
  %8 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_13", !invariant.load !4
  %9 = bitcast %0* %7 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %9, i8* %8, i32 200)
  %10 = load %0** %test, align 8
  %11 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_14", !invariant.load !4
  %12 = bitcast %0* %10 to i8*
  %call1 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %12, i8* %11)
  %sub = sub nsw i32 %call1, 12345
  %13 = load %0** %test, align 8
  %14 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_15", !invariant.load !4
  %15 = bitcast %0* %13 to i8*
  %call2 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %15, i8* %14)
  %add = add nsw i32 %sub, %call2
  %sub3 = sub nsw i32 %add, 200
  ret i32 %sub3
}

declare i8* @objc_msgSend(i8*, i8*, ...) nonlazybind

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 2}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
!4 = metadata !{}
