; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/property-incr-decr-1.m'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%0 = type opaque
%struct._objc_cache = type opaque
%struct._class_t = type { %struct._class_t*, %struct._class_t*, %struct._objc_cache*, i8* (i8*, i8*)**, %struct._class_ro_t* }
%struct._class_ro_t = type { i32, i32, i32, i8*, i8*, %struct.__method_list_t*, %struct._objc_protocol_list*, %struct._ivar_list_t*, i8*, %struct._prop_list_t* }
%struct.__method_list_t = type { i32, i32, [0 x %struct._objc_method] }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_protocol_list = type { i64, [0 x %struct._protocol_t*] }
%struct._protocol_t = type { i8*, i8*, %struct._objc_protocol_list*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct._prop_list_t*, i32, i32, i8** }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._ivar_list_t = type { i32, i32, [0 x %struct._ivar_t] }
%struct._ivar_t = type { i64*, i8*, i8*, i32, i32 }

@"OBJC_IVAR_$_SomeClass._myValue" = global i64 0, section "__DATA, __objc_ivar", align 8
@_objc_empty_cache = external global %struct._objc_cache
@_objc_empty_vtable = external global i8* (i8*, i8*)*
@"OBJC_METACLASS_$_Object" = external global %struct._class_t
@"\01L_OBJC_CLASS_NAME_" = internal global [10 x i8] c"SomeClass\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01l_OBJC_METACLASS_RO_$_SomeClass" = internal global %struct._class_ro_t { i32 1, i32 40, i32 40, i8* null, i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* null, %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"OBJC_METACLASS_$_SomeClass" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_Object", %struct._class_t* @"OBJC_METACLASS_$_Object", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_SomeClass" }, section "__DATA, __objc_data", align 8
@"OBJC_CLASS_$_Object" = external global %struct._class_t
@"\01L_OBJC_METH_VAR_NAME_" = internal global [8 x i8] c"myValue\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [8 x i8] c"i16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_1" = internal global [12 x i8] c"setMyValue:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_2" = internal global [11 x i8] c"v20@0:8i16\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_METHODS_SomeClass" = internal global { i32, i32, [2 x %struct._objc_method] } { i32 24, i32 2, [2 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (i32 (%0*, i8*)* @"\01-[SomeClass myValue]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_2", i32 0, i32 0), i8* bitcast (void (%0*, i8*, i32)* @"\01-[SomeClass setMyValue:]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_3" = internal global [9 x i8] c"_myValue\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_4" = internal global [2 x i8] c"i\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_VARIABLES_SomeClass" = internal global { i32, i32, [1 x %struct._ivar_t] } { i32 32, i32 1, [1 x %struct._ivar_t] [%struct._ivar_t { i64* @"OBJC_IVAR_$_SomeClass._myValue", i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_4", i32 0, i32 0), i32 2, i32 4 }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_PROP_NAME_ATTR_" = internal global [8 x i8] c"myValue\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_5" = internal global [13 x i8] c"Ti,V_myValue\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01l_OBJC_$_PROP_LIST_SomeClass" = internal global { i32, i32, [1 x %struct._prop_t] } { i32 16, i32 1, [1 x %struct._prop_t] [%struct._prop_t { i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_5", i32 0, i32 0) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_CLASS_RO_$_SomeClass" = internal global %struct._class_ro_t { i32 0, i32 0, i32 4, i8* null, i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [2 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_SomeClass" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* bitcast ({ i32, i32, [1 x %struct._ivar_t] }* @"\01l_OBJC_$_INSTANCE_VARIABLES_SomeClass" to %struct._ivar_list_t*), i8* null, %struct._prop_list_t* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_SomeClass" to %struct._prop_list_t*) }, section "__DATA, __objc_const", align 8
@"OBJC_CLASS_$_SomeClass" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_SomeClass", %struct._class_t* @"OBJC_CLASS_$_Object", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_SomeClass" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASSLIST_REFERENCES_$_" = internal global %struct._class_t* @"OBJC_CLASS_$_SomeClass", section "__DATA, __objc_classrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_METH_VAR_NAME_6" = internal global [4 x i8] c"new\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_" = internal global i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_6", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_7" = internal global i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_8" = internal global i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_LABEL_CLASS_$" = internal global [1 x i8*] [i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_SomeClass" to i8*)], section "__DATA, __objc_classlist, regular, no_dead_strip", align 8
@llvm.used = appending global [18 x i8*] [i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_2", i32 0, i32 0), i8* bitcast ({ i32, i32, [2 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_SomeClass" to i8*), i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_4", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._ivar_t] }* @"\01l_OBJC_$_INSTANCE_VARIABLES_SomeClass" to i8*), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_5", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_SomeClass" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_6", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_7" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_8" to i8*), i8* bitcast ([1 x i8*]* @"\01L_OBJC_LABEL_CLASS_$" to i8*)], section "llvm.metadata"

define internal i32 @"\01-[SomeClass myValue]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load %0** %self.addr
  %ivar = load i64* @"OBJC_IVAR_$_SomeClass._myValue", !invariant.load !4
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 %ivar
  %1 = bitcast i8* %add.ptr to i32*
  %load = load atomic i32* %1 unordered, align 4
  ret i32 %load
}

define internal void @"\01-[SomeClass setMyValue:]"(%0* %self, i8* %_cmd, i32 %myValue) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  %myValue.addr = alloca i32, align 4
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  store i32 %myValue, i32* %myValue.addr, align 4
  %self1 = load %0** %self.addr
  %ivar = load i64* @"OBJC_IVAR_$_SomeClass._myValue", !invariant.load !4
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 %ivar
  %1 = bitcast i8* %add.ptr to i32*
  %2 = load i32* %myValue.addr
  store atomic i32 %2, i32* %1 unordered, align 4
  ret void
}

define i32 @main() nounwind {
entry:
  %retval = alloca i32, align 4
  %val = alloca i32, align 4
  %o = alloca %0*, align 8
  store i32 0, i32* %retval
  %0 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_"
  %1 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_", !invariant.load !4
  %2 = bitcast %struct._class_t* %0 to i8*
  %call = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %2, i8* %1)
  %3 = bitcast i8* %call to %0*
  store %0* %3, %0** %o, align 8
  %4 = load %0** %o, align 8
  %5 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_7", !invariant.load !4
  %6 = bitcast %0* %4 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %6, i8* %5, i32 -1)
  %7 = load %0** %o, align 8
  %8 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_8", !invariant.load !4
  %9 = bitcast %0* %7 to i8*
  %call1 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %9, i8* %8)
  %add = add nsw i32 %call1, 1
  %10 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_7", !invariant.load !4
  %11 = bitcast %0* %7 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %11, i8* %10, i32 %add)
  store i32 %call1, i32* %val, align 4
  %12 = load %0** %o, align 8
  %13 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_8", !invariant.load !4
  %14 = bitcast %0* %12 to i8*
  %call2 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %14, i8* %13)
  %sub = sub nsw i32 %call2, 1
  %15 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_7", !invariant.load !4
  %16 = bitcast %0* %12 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %16, i8* %15, i32 %sub)
  %17 = load i32* %val, align 4
  %add3 = add nsw i32 %17, %call2
  store i32 %add3, i32* %val, align 4
  %18 = load %0** %o, align 8
  %19 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_8", !invariant.load !4
  %20 = bitcast %0* %18 to i8*
  %call4 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %20, i8* %19)
  %add5 = add nsw i32 %call4, 1
  %21 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_7", !invariant.load !4
  %22 = bitcast %0* %18 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %22, i8* %21, i32 %add5)
  %23 = load i32* %val, align 4
  %add6 = add nsw i32 %23, %add5
  store i32 %add6, i32* %val, align 4
  %24 = load %0** %o, align 8
  %25 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_8", !invariant.load !4
  %26 = bitcast %0* %24 to i8*
  %call7 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %26, i8* %25)
  %sub8 = sub nsw i32 %call7, 1
  %27 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_7", !invariant.load !4
  %28 = bitcast %0* %24 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %28, i8* %27, i32 %sub8)
  %29 = load i32* %val, align 4
  %add9 = add nsw i32 %29, %sub8
  store i32 %add9, i32* %val, align 4
  %30 = load %0** %o, align 8
  %31 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_8", !invariant.load !4
  %32 = bitcast %0* %30 to i8*
  %call10 = call i32 bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i32 (i8*, i8*)*)(i8* %32, i8* %31)
  %add11 = add nsw i32 %call10, 1
  %33 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_7", !invariant.load !4
  %34 = bitcast %0* %30 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*, i32)*)(i8* %34, i8* %33, i32 %add11)
  %35 = load i32* %val, align 4
  %add12 = add nsw i32 %35, 2
  %add13 = add nsw i32 %add11, %add12
  ret i32 %add13
}

declare i8* @objc_msgSend(i8*, i8*, ...) nonlazybind

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 2}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
!4 = metadata !{}
