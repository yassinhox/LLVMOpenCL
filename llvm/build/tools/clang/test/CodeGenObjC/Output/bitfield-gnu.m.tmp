; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/bitfield-gnu.m'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__objc_class_name_Obj = global i64 0
@0 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@1 = private unnamed_addr constant [10 x i8] c"^{?=b0i1}\00", align 1
@__objc_ivar_offset_value_Obj.b = global i32 0
@.ivar.offsets = internal global [1 x i32*] [i32* @__objc_ivar_offset_value_Obj.b]
@.objc_property_list = internal global { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] } zeroinitializer
@.objc_ivar_list = internal global { i32, [1 x { i8*, i8*, i32 }] } { i32 1, [1 x { i8*, i8*, i32 }] [{ i8*, i8*, i32 } { i8* getelementptr inbounds ([2 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @1, i64 0, i64 0), i32 0 }] }
@__objc_ivar_offset_Obj.b = global i32* getelementptr inbounds ({ i32, [1 x { i8*, i8*, i32 }] }* @.objc_ivar_list, i64 0, i32 1, i32 0, i32 2)
@.class_name = private unnamed_addr constant [4 x i8] c"Obj\00", align 1
@_OBJC_METACLASS_Obj = global { i8*, i8*, i8*, i64, i64, i64, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i8*, i8*, i64, i64 } { i8* null, i8* null, i8* getelementptr inbounds ([4 x i8]* @.class_name, i64 0, i64 0), i64 0, i64 18, i64 144, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i64 1, i8* null, i8* null, i64 0, i64 0 }
@.objc_protocol_list = internal global { i8*, i64, [0 x i8*] } zeroinitializer
@_OBJC_CLASS_Obj = global { i8*, i8*, i8*, i64, i64, i64, { i32, [1 x { i8*, i8*, i32 }] }*, i8*, i8*, i8*, i8*, i8*, i8*, i64, [1 x i32*]*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i64, i64 } { i8* bitcast ({ i8*, i8*, i8*, i64, i64, i64, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i64, i8*, i8*, i64, i64 }* @_OBJC_METACLASS_Obj to i8*), i8* null, i8* getelementptr inbounds ([4 x i8]* @.class_name, i64 0, i64 0), i64 0, i64 17, i64 8, { i32, [1 x { i8*, i8*, i32 }] }* @.objc_ivar_list, i8* null, i8* null, i8* null, i8* null, i8* bitcast ({ i8*, i64, [0 x i8*] }* @.objc_protocol_list to i8*), i8* null, i64 1, [1 x i32*]* @.ivar.offsets, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }* @.objc_property_list, i64 1, i64 1 }
@2 = private unnamed_addr constant [12 x i8] c"AnotherHack\00", align 1
@3 = private unnamed_addr constant [33 x i8] c"__ObjC_Protocol_Holder_Ugly_Hack\00", align 1
@.objc_protocol_list1 = internal global { i8*, i64, [0 x i8*] } zeroinitializer
@4 = internal global { i8*, i8*, i8*, i8*, i8* } { i8* getelementptr inbounds ([12 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8]* @3, i64 0, i64 0), i8* null, i8* null, i8* bitcast ({ i8*, i64, [0 x i8*] }* @.objc_protocol_list1 to i8*) }
@.objc_selector_list = internal global [1 x { i8*, i8* }] zeroinitializer
@5 = internal global { i64, { i8*, i8* }*, i16, i16, [4 x i8*] } { i64 0, { i8*, i8* }* getelementptr inbounds ([1 x { i8*, i8* }]* @.objc_selector_list, i32 0, i32 0), i16 1, i16 1, [4 x i8*] [i8* bitcast ({ i8*, i8*, i8*, i64, i64, i64, { i32, [1 x { i8*, i8*, i32 }] }*, i8*, i8*, i8*, i8*, i8*, i8*, i64, [1 x i32*]*, { i32, i8*, [0 x { i8*, i8, i8, i8*, i8*, i8*, i8* }] }*, i64, i64 }* @_OBJC_CLASS_Obj to i8*), i8* bitcast ({ i8*, i8*, i8*, i8*, i8* }* @4 to i8*), i8* null, i8* null] }
@.objc_source_file_name = private unnamed_addr constant [131 x i8] c"/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC//home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/bitfield-gnu.m\00", align 1
@6 = internal global { i64, i64, i8*, { i64, { i8*, i8* }*, i16, i16, [4 x i8*] }* } { i64 8, i64 32, i8* getelementptr inbounds ([131 x i8]* @.objc_source_file_name, i64 0, i64 0), { i64, { i8*, i8* }*, i16, i16, [4 x i8*] }* @5 }
@llvm.global_ctors = appending global [1 x { i32, void ()* }] [{ i32, void ()* } { i32 65535, void ()* @.objc_load_function }]

define internal void @.objc_load_function() {
entry:
  call void ({ i64, i64, i8*, { i64, { i8*, i8* }*, i16, i16, [4 x i8*] }* }*, ...)* @__objc_exec_class({ i64, i64, i8*, { i64, { i8*, i8* }*, i16, i16, [4 x i8*] }* }* @6)
  ret void
}

declare void @__objc_exec_class({ i64, i64, i8*, { i64, { i8*, i8* }*, i16, i16, [4 x i8*] }* }*, ...)
