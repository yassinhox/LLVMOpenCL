; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/blocks-1.m'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128-n8:16:32-S128"
target triple = "i386-apple-darwin10"

%0 = type opaque
%1 = type opaque
%struct._objc_module = type { i32, i32, i8*, %struct._objc_symtab* }
%struct._objc_symtab = type { i32, i8*, i16, i16, [0 x i8*] }
%struct.__block_descriptor = type { i32, i32 }
%struct.__block_literal_generic = type { i8*, i32, i32, i8*, %struct.__block_descriptor* }
%struct.__block_byref_weakSelf = type { i8*, %struct.__block_byref_weakSelf*, i32, i32, i8*, i8*, %1* }
%struct.__block_byref_i = type { i8*, %struct.__block_byref_i*, i32, i32, i32 }
%struct.__block_byref_i.0 = type { i8*, %struct.__block_byref_i.0*, i32, i32, i32 }

@_NSConcreteStackBlock = external global i8*
@.str = private unnamed_addr constant [6 x i8] c"v4@?0\00", align 1
@"\01L_OBJC_CLASS_NAME_" = internal global [3 x i8] c"\01A\00", section "__TEXT,__cstring,cstring_literals", align 1
@__block_descriptor_tmp = internal constant { i32, i32, i8*, i8*, i8*, i8* } { i32 0, i32 24, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_ to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_ to i8*), i8* getelementptr inbounds ([6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0) }
@b = global void ()* null, align 4
@"\01L_OBJC_CLASS_NAME_3" = internal global [3 x i8] c"\01A\00", section "__TEXT,__cstring,cstring_literals", align 1
@__block_descriptor_tmp4 = internal constant { i32, i32, i8*, i8*, i8*, i8* } { i32 0, i32 24, i8* bitcast (void (i8*, i8*)* @__copy_helper_block_1 to i8*), i8* bitcast (void (i8*)* @__destroy_helper_block_2 to i8*), i8* getelementptr inbounds ([6 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_3", i32 0, i32 0) }
@"\01L_OBJC_CLASS_NAME_5" = internal global [1 x i8] zeroinitializer, section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_MODULES" = internal global %struct._objc_module { i32 7, i32 16, i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_5", i32 0, i32 0), %struct._objc_symtab* null }, section "__OBJC,__module_info,regular,no_dead_strip", align 4
@llvm.used = appending global [4 x i8*] [i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_5", i32 0, i32 0), i8* bitcast (%struct._objc_module* @"\01L_OBJC_MODULES" to i8*)], section "llvm.metadata"

define void @_Z5test1P12NSDictionary(%0* %dict) nounwind {
entry:
  %dict.addr = alloca %0*, align 4
  %block = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>, align 4
  store %0* %dict, %0** %dict.addr, align 4
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 3
  store i8* bitcast (void (i8*)* @___Z5test1P12NSDictionary_block_invoke to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i32, i32, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 5
  %0 = load %0** %dict.addr, align 4
  %1 = bitcast %0* %0 to i8*
  %2 = bitcast %0** %block.captured to i8**
  %weakassign = call i8* @objc_assign_strongCast(i8* %1, i8** %2)
  %3 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block to void ()*
  %block.literal = bitcast void ()* %3 to %struct.__block_literal_generic*
  %4 = getelementptr inbounds %struct.__block_literal_generic* %block.literal, i32 0, i32 3
  %5 = bitcast %struct.__block_literal_generic* %block.literal to i8*
  %6 = load i8** %4
  %7 = bitcast i8* %6 to void (i8*)*
  call void %7(i8* %5)
  ret void
}

define internal void @___Z5test1P12NSDictionary_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 5
  ret void
}

define internal void @__copy_helper_block_(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 4
  %.addr1 = alloca i8*, align 4
  store i8* %0, i8** %.addr, align 4
  store i8* %1, i8** %.addr1, align 4
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load %0** %4
  %6 = bitcast %0* %blockcopy.src to i8*
  %7 = bitcast %0** %5 to i8*
  call void @_Block_object_assign(i8* %7, i8* %6, i32 3)
  ret void
}

declare void @_Block_object_assign(i8*, i8*, i32)

define internal void @__destroy_helper_block_(i8*) {
entry:
  %.addr = alloca i8*, align 4
  store i8* %0, i8** %.addr, align 4
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, %0* }>* %block, i32 0, i32 5
  %3 = load %0** %2
  %4 = bitcast %0* %3 to i8*
  call void @_Block_object_dispose(i8* %4, i32 3)
  ret void
}

declare void @_Block_object_dispose(i8*, i32)

declare i8* @objc_assign_strongCast(i8*, i8**)

define void @_Z3foov() nounwind {
entry:
  %weakSelf = alloca %struct.__block_byref_weakSelf, align 4
  %l = alloca %1*, align 4
  %byref.isa = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 0
  store i8* inttoptr (i32 1 to i8*), i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 1
  store %struct.__block_byref_weakSelf* %weakSelf, %struct.__block_byref_weakSelf** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 2
  store i32 33554432, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 3
  store i32 28, i32* %byref.size
  %0 = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 4
  store i8* bitcast (void (i8*, i8*)* @__Block_byref_object_copy_ to i8*), i8** %0
  %1 = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 5
  store i8* bitcast (void (i8*)* @__Block_byref_object_dispose_ to i8*), i8** %1
  %forwarding = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 1
  %2 = load %struct.__block_byref_weakSelf** %forwarding
  %weakSelf1 = getelementptr inbounds %struct.__block_byref_weakSelf* %2, i32 0, i32 6
  %3 = bitcast %1** %weakSelf1 to i8**
  %weakread = call i8* @objc_read_weak(i8** %3)
  %4 = bitcast i8* %weakread to %1*
  store %1* %4, %1** %l, align 4
  %5 = load %1** %l, align 4
  %forwarding2 = getelementptr inbounds %struct.__block_byref_weakSelf* %weakSelf, i32 0, i32 1
  %6 = load %struct.__block_byref_weakSelf** %forwarding2
  %weakSelf3 = getelementptr inbounds %struct.__block_byref_weakSelf* %6, i32 0, i32 6
  %7 = bitcast %1* %5 to i8*
  %8 = bitcast %1** %weakSelf3 to i8**
  %weakassign = call i8* @objc_assign_weak(i8* %7, i8** %8)
  %9 = bitcast %struct.__block_byref_weakSelf* %weakSelf to i8*
  call void @_Block_object_dispose(i8* %9, i32 8)
  ret void
}

define internal void @__Block_byref_object_copy_(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 4
  %.addr1 = alloca i8*, align 4
  store i8* %0, i8** %.addr, align 4
  store i8* %1, i8** %.addr1, align 4
  %2 = load i8** %.addr
  %3 = bitcast i8* %2 to %struct.__block_byref_weakSelf*
  %x = getelementptr inbounds %struct.__block_byref_weakSelf* %3, i32 0, i32 6
  %4 = load i8** %.addr1
  %5 = bitcast i8* %4 to %struct.__block_byref_weakSelf*
  %x2 = getelementptr inbounds %struct.__block_byref_weakSelf* %5, i32 0, i32 6
  %6 = bitcast %1** %x to i8*
  %7 = bitcast %1** %x2 to i8**
  %8 = load i8** %7
  call void @_Block_object_assign(i8* %6, i8* %8, i32 147)
  ret void
}

define internal void @__Block_byref_object_dispose_(i8*) {
entry:
  %.addr = alloca i8*, align 4
  store i8* %0, i8** %.addr, align 4
  %1 = load i8** %.addr
  %2 = bitcast i8* %1 to %struct.__block_byref_weakSelf*
  %x = getelementptr inbounds %struct.__block_byref_weakSelf* %2, i32 0, i32 6
  %3 = bitcast %1** %x to i8**
  %4 = load i8** %3
  call void @_Block_object_dispose(i8* %4, i32 147)
  ret void
}

declare i8* @objc_read_weak(i8**)

declare i8* @objc_assign_weak(i8*, i8**)

define void @_Z5test2v() nounwind {
entry:
  %i = alloca %struct.__block_byref_i, align 4
  %block = alloca <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>, align 4
  %byref.isa = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 0
  store i8* null, i8** %byref.isa
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 1
  store %struct.__block_byref_i* %i, %struct.__block_byref_i** %byref.forwarding
  %byref.flags = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 2
  store i32 0, i32* %byref.flags
  %byref.size = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 3
  store i32 20, i32* %byref.size
  %i1 = getelementptr inbounds %struct.__block_byref_i* %i, i32 0, i32 4
  store i32 0, i32* %i1, align 4
  %block.isa = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 0
  store i8* bitcast (i8** @_NSConcreteStackBlock to i8*), i8** %block.isa
  %block.flags = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 1
  store i32 1107296256, i32* %block.flags
  %block.reserved = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 2
  store i32 0, i32* %block.reserved
  %block.invoke = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 3
  store i8* bitcast (void (i8*)* @___Z5test2v_block_invoke to i8*), i8** %block.invoke
  %block.descriptor = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 4
  store %struct.__block_descriptor* bitcast ({ i32, i32, i8*, i8*, i8*, i8* }* @__block_descriptor_tmp4 to %struct.__block_descriptor*), %struct.__block_descriptor** %block.descriptor
  %block.captured = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = bitcast %struct.__block_byref_i* %i to i8*
  store i8* %0, i8** %block.captured
  %1 = bitcast <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block to void ()*
  %2 = bitcast void ()* %1 to i8*
  %weakassign = call i8* @objc_assign_weak(i8* %2, i8** bitcast (void ()** @b to i8**))
  %3 = bitcast %struct.__block_byref_i* %i to i8*
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

define internal void @___Z5test2v_block_invoke(i8* %.block_descriptor) nounwind {
entry:
  %block = bitcast i8* %.block_descriptor to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %block.capture.addr = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %0 = load i8** %block.capture.addr
  %byref.addr = bitcast i8* %0 to %struct.__block_byref_i.0*
  %byref.forwarding = getelementptr inbounds %struct.__block_byref_i.0* %byref.addr, i32 0, i32 1
  %byref.addr.forwarded = load %struct.__block_byref_i.0** %byref.forwarding
  %i = getelementptr inbounds %struct.__block_byref_i.0* %byref.addr.forwarded, i32 0, i32 4
  %1 = load i32* %i, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %i, align 4
  ret void
}

define internal void @__copy_helper_block_1(i8*, i8*) {
entry:
  %.addr = alloca i8*, align 4
  %.addr1 = alloca i8*, align 4
  store i8* %0, i8** %.addr, align 4
  store i8* %1, i8** %.addr1, align 4
  %2 = load i8** %.addr1
  %block.source = bitcast i8* %2 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %3 = load i8** %.addr
  %block.dest = bitcast i8* %3 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %4 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.source, i32 0, i32 5
  %5 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block.dest, i32 0, i32 5
  %blockcopy.src = load i8** %4
  %6 = bitcast i8** %5 to i8*
  call void @_Block_object_assign(i8* %6, i8* %blockcopy.src, i32 8)
  ret void
}

define internal void @__destroy_helper_block_2(i8*) {
entry:
  %.addr = alloca i8*, align 4
  store i8* %0, i8** %.addr, align 4
  %1 = load i8** %.addr
  %block = bitcast i8* %1 to <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>*
  %2 = getelementptr inbounds <{ i8*, i32, i32, i8*, %struct.__block_descriptor*, i8* }>* %block, i32 0, i32 5
  %3 = load i8** %2
  call void @_Block_object_dispose(i8* %3, i32 8)
  ret void
}

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 1}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__OBJC, __image_info,regular"}
!3 = metadata !{i32 1, metadata !"Objective-C Garbage Collection", i32 2}
