; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/bitfield-1.m'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32-n8:16:32-S128"
target triple = "i386-pc-linux-gnu"

module asm "\09.objc_class_name_Base=0"
module asm "\09.globl .objc_class_name_Base"
module asm "\09.objc_class_name_Derived=0"
module asm "\09.globl .objc_class_name_Derived"
module asm "\09.lazy_reference .objc_class_name_Object"
module asm "\09.lazy_reference .objc_class_name_Base"
module asm "\09.lazy_reference .objc_class_name_Derived"

%0 = type opaque
%1 = type opaque
%struct._objc_class = type { %struct._objc_class*, %struct._objc_class*, i8*, i32, i32, i32, %struct._objc_ivar_list*, %struct._objc_method_list*, %struct._objc_cache*, %struct._objc_protocol_list*, i8*, %struct._objc_class_extension* }
%struct._objc_ivar_list = type opaque
%struct._objc_method_list = type opaque
%struct._objc_cache = type opaque
%struct._objc_protocol_list = type { %struct._objc_protocol_list*, i32, [0 x %struct._objc_protocol] }
%struct._objc_protocol = type { %struct._objc_protocol_extension*, i8*, %struct._objc_protocol_list*, %struct._objc_method_description_list*, %struct._objc_method_description_list* }
%struct._objc_protocol_extension = type { i32, %struct._objc_method_description_list*, %struct._objc_method_description_list*, %struct._prop_list_t*, i8** }
%struct._objc_method_description_list = type { i32, [0 x %struct._objc_method_description] }
%struct._objc_method_description = type { i8*, i8* }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._objc_class_extension = type { i32, i8*, %struct._prop_list_t* }
%struct._objc_ivar = type { i8*, i8*, i32 }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_module = type { i32, i32, i8*, %struct._objc_symtab* }
%struct._objc_symtab = type { i32, i8*, i16, i16, [0 x i8*] }

@"\01L_OBJC_METH_VAR_NAME_" = internal global [10 x i8] c"setValues\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [7 x i8] c"v8@0:4\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_" = internal global [7 x i8] c"Object\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_1" = internal global [5 x i8] c"Base\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METACLASS_Base" = internal global %struct._objc_class { %struct._objc_class* bitcast ([7 x i8]* @"\01L_OBJC_CLASS_NAME_" to %struct._objc_class*), %struct._objc_class* bitcast ([7 x i8]* @"\01L_OBJC_CLASS_NAME_" to %struct._objc_class*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_CLASS_NAME_1", i32 0, i32 0), i32 0, i32 2, i32 48, %struct._objc_ivar_list* null, %struct._objc_method_list* null, %struct._objc_cache* null, %struct._objc_protocol_list* null, i8* null, %struct._objc_class_extension* null }, section "__OBJC,__meta_class,regular,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_2" = internal global [5 x i8] c"full\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_3" = internal global [2 x i8] c"i\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_4" = internal global [6 x i8] c"full2\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_5" = internal global [4 x i8] c"b32\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_6" = internal global [6 x i8] c"_refs\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_7" = internal global [3 x i8] c"b8\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_8" = internal global [7 x i8] c"field2\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_9" = internal global [3 x i8] c"b3\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_10" = internal global [3 x i8] c"f3\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_11" = internal global [3 x i8] c"cc\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_12" = internal global [2 x i8] c"s\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_13" = internal global [2 x i8] c"g\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_14" = internal global [4 x i8] c"b16\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_15" = internal global [3 x i8] c"r2\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_16" = internal global [3 x i8] c"r3\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_17" = internal global [3 x i8] c"r4\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_18" = internal global [3 x i8] c"b2\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_19" = internal global [3 x i8] c"r5\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_20" = internal global [2 x i8] c"c\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_21" = internal global [2 x i8] c"c\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_INSTANCE_VARIABLES_Base" = internal global { i32, [12 x %struct._objc_ivar] } { i32 12, [12 x %struct._objc_ivar] [%struct._objc_ivar { i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_2", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_3", i32 0, i32 0), i32 0 }, %struct._objc_ivar { i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_TYPE_5", i32 0, i32 0), i32 4 }, %struct._objc_ivar { i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_6", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_7", i32 0, i32 0), i32 8 }, %struct._objc_ivar { i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_8", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_9", i32 0, i32 0), i32 9 }, %struct._objc_ivar { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_7", i32 0, i32 0), i32 9 }, %struct._objc_ivar { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_12", i32 0, i32 0), i32 12 }, %struct._objc_ivar { i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_NAME_13", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_TYPE_14", i32 0, i32 0), i32 14 }, %struct._objc_ivar { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_15", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_7", i32 0, i32 0), i32 16 }, %struct._objc_ivar { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_16", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_7", i32 0, i32 0), i32 17 }, %struct._objc_ivar { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_17", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_18", i32 0, i32 0), i32 18 }, %struct._objc_ivar { i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_19", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_7", i32 0, i32 0), i32 18 }, %struct._objc_ivar { i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_NAME_20", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_21", i32 0, i32 0), i32 20 }] }, section "__OBJC,__instance_vars,regular,no_dead_strip", align 4
@"\01L_OBJC_INSTANCE_METHODS_Base" = internal global { i8*, i32, [1 x %struct._objc_method] } { i8* null, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[Base setValues]" to i8*) }] }, section "__OBJC,__inst_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_Base" = internal global %struct._objc_class { %struct._objc_class* @"\01L_OBJC_METACLASS_Base", %struct._objc_class* bitcast ([7 x i8]* @"\01L_OBJC_CLASS_NAME_" to %struct._objc_class*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_CLASS_NAME_1", i32 0, i32 0), i32 0, i32 1, i32 24, %struct._objc_ivar_list* bitcast ({ i32, [12 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_Base" to %struct._objc_ivar_list*), %struct._objc_method_list* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_Base" to %struct._objc_method_list*), %struct._objc_cache* null, %struct._objc_protocol_list* null, i8* null, %struct._objc_class_extension* null }, section "__OBJC,__class,regular,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_22" = internal global [12 x i8] c"checkValues\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_23" = internal global [8 x i8] c"Derived\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METACLASS_Derived" = internal global %struct._objc_class { %struct._objc_class* bitcast ([7 x i8]* @"\01L_OBJC_CLASS_NAME_" to %struct._objc_class*), %struct._objc_class* bitcast ([5 x i8]* @"\01L_OBJC_CLASS_NAME_1" to %struct._objc_class*), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_CLASS_NAME_23", i32 0, i32 0), i32 0, i32 2, i32 48, %struct._objc_ivar_list* null, %struct._objc_method_list* null, %struct._objc_cache* null, %struct._objc_protocol_list* null, i8* null, %struct._objc_class_extension* null }, section "__OBJC,__meta_class,regular,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_24" = internal global [2 x i8] c"d\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_25" = internal global [8 x i8] c"_field3\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_26" = internal global [3 x i8] c"b6\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_INSTANCE_VARIABLES_Derived" = internal global { i32, [2 x %struct._objc_ivar] } { i32 2, [2 x %struct._objc_ivar] [%struct._objc_ivar { i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_NAME_24", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_21", i32 0, i32 0), i32 21 }, %struct._objc_ivar { i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_NAME_25", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_26", i32 0, i32 0), i32 22 }] }, section "__OBJC,__instance_vars,regular,no_dead_strip", align 4
@"\01L_OBJC_INSTANCE_METHODS_Derived" = internal global { i8*, i32, [1 x %struct._objc_method] } { i8* null, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_22", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%1*, i8*)* @"\01-[Derived checkValues]" to i8*) }] }, section "__OBJC,__inst_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_Derived" = internal global %struct._objc_class { %struct._objc_class* @"\01L_OBJC_METACLASS_Derived", %struct._objc_class* bitcast ([5 x i8]* @"\01L_OBJC_CLASS_NAME_1" to %struct._objc_class*), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_CLASS_NAME_23", i32 0, i32 0), i32 0, i32 1, i32 24, %struct._objc_ivar_list* bitcast ({ i32, [2 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_Derived" to %struct._objc_ivar_list*), %struct._objc_method_list* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_Derived" to %struct._objc_method_list*), %struct._objc_cache* null, %struct._objc_protocol_list* null, i8* null, %struct._objc_class_extension* null }, section "__OBJC,__class,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_REFERENCES_" = internal global %struct._objc_class* bitcast ([8 x i8]* @"\01L_OBJC_CLASS_NAME_23" to %struct._objc_class*), section "__OBJC,__cls_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_27" = internal global [6 x i8] c"alloc\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_" = internal global i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_27", i32 0, i32 0), section "__OBJC,__message_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_28" = internal global [5 x i8] c"init\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_SELECTOR_REFERENCES_29" = internal global i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_28", i32 0, i32 0), section "__OBJC,__message_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_SELECTOR_REFERENCES_30" = internal global i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), section "__OBJC,__message_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_SELECTOR_REFERENCES_31" = internal global i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_22", i32 0, i32 0), section "__OBJC,__message_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_CLASS_NAME_32" = internal global [1 x i8] zeroinitializer, section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_SYMBOLS" = internal global { i32, i8*, i16, i16, [2 x i8*] } { i32 0, i8* null, i16 2, i16 0, [2 x i8*] [i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_Base" to i8*), i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_Derived" to i8*)] }, section "__OBJC,__symbols,regular,no_dead_strip", align 4
@"\01L_OBJC_MODULES" = internal global %struct._objc_module { i32 7, i32 16, i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_32", i32 0, i32 0), %struct._objc_symtab* bitcast ({ i32, i8*, i16, i16, [2 x i8*] }* @"\01L_OBJC_SYMBOLS" to %struct._objc_symtab*) }, section "__OBJC,__module_info,regular,no_dead_strip", align 4
@llvm.used = appending global [47 x i8*] [i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_CLASS_NAME_1", i32 0, i32 0), i8* bitcast (%struct._objc_class* @"\01L_OBJC_METACLASS_Base" to i8*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_2", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_3", i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_TYPE_5", i32 0, i32 0), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_6", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_7", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_NAME_8", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_9", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_12", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_NAME_13", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_TYPE_14", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_15", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_16", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_17", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_18", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_NAME_19", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_NAME_20", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_21", i32 0, i32 0), i8* bitcast ({ i32, [12 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_Base" to i8*), i8* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_Base" to i8*), i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_Base" to i8*), i8* getelementptr inbounds ([12 x i8]* @"\01L_OBJC_METH_VAR_NAME_22", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_CLASS_NAME_23", i32 0, i32 0), i8* bitcast (%struct._objc_class* @"\01L_OBJC_METACLASS_Derived" to i8*), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_NAME_24", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_NAME_25", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_METH_VAR_TYPE_26", i32 0, i32 0), i8* bitcast ({ i32, [2 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_Derived" to i8*), i8* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_Derived" to i8*), i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_Derived" to i8*), i8* bitcast (%struct._objc_class** @"\01L_OBJC_CLASS_REFERENCES_" to i8*), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_27", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_" to i8*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_28", i32 0, i32 0), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_29" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_30" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_31" to i8*), i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_32", i32 0, i32 0), i8* bitcast ({ i32, i8*, i16, i16, [2 x i8*] }* @"\01L_OBJC_SYMBOLS" to i8*), i8* bitcast (%struct._objc_module* @"\01L_OBJC_MODULES" to i8*)], section "llvm.metadata"

define internal void @"\01-[Base setValues]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %0* %self, %0** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  %0 = load %0** %self.addr, align 4
  %1 = bitcast %0* %0 to i8*
  %add.ptr = getelementptr inbounds i8* %1, i32 0
  %2 = bitcast i8* %add.ptr to i32*
  store i32 1, i32* %2, align 4
  %3 = load %0** %self.addr, align 4
  %4 = bitcast %0* %3 to i8*
  %add.ptr1 = getelementptr inbounds i8* %4, i32 4
  %5 = bitcast i8* %add.ptr1 to i32*
  store i32 2, i32* %5, align 1
  %6 = load %0** %self.addr, align 4
  %7 = bitcast %0* %6 to i8*
  %add.ptr2 = getelementptr inbounds i8* %7, i32 8
  %8 = bitcast i8* %add.ptr2 to i32*
  %9 = load i32* %8, align 1
  %10 = and i32 %9, -256
  %11 = or i32 %10, 3
  store i32 %11, i32* %8, align 1
  %12 = load %0** %self.addr, align 4
  %13 = bitcast %0* %12 to i8*
  %add.ptr3 = getelementptr inbounds i8* %13, i32 9
  %14 = bitcast i8* %add.ptr3 to i32*
  %15 = load i32* %14, align 1
  %16 = and i32 %15, -8
  %17 = or i32 %16, 1
  store i32 %17, i32* %14, align 1
  %18 = load %0** %self.addr, align 4
  %19 = bitcast %0* %18 to i8*
  %add.ptr4 = getelementptr inbounds i8* %19, i32 9
  %20 = bitcast i8* %add.ptr4 to i32*
  %21 = load i32* %20, align 1
  %22 = and i32 %21, -2041
  %23 = or i32 %22, 48
  store i32 %23, i32* %20, align 1
  %24 = load %0** %self.addr, align 4
  %25 = bitcast %0* %24 to i8*
  %add.ptr5 = getelementptr inbounds i8* %25, i32 12
  %26 = bitcast i8* %add.ptr5 to i16*
  store i16 7, i16* %26, align 2
  %27 = load %0** %self.addr, align 4
  %28 = bitcast %0* %27 to i8*
  %add.ptr6 = getelementptr inbounds i8* %28, i32 14
  %29 = bitcast i8* %add.ptr6 to i32*
  %30 = load i32* %29, align 1
  %31 = and i32 %30, -65536
  %32 = or i32 %31, 8
  store i32 %32, i32* %29, align 1
  %33 = load %0** %self.addr, align 4
  %34 = bitcast %0* %33 to i8*
  %add.ptr7 = getelementptr inbounds i8* %34, i32 16
  %35 = bitcast i8* %add.ptr7 to i32*
  %36 = load i32* %35, align 1
  %37 = and i32 %36, -256
  %38 = or i32 %37, 9
  store i32 %38, i32* %35, align 1
  %39 = load %0** %self.addr, align 4
  %40 = bitcast %0* %39 to i8*
  %add.ptr8 = getelementptr inbounds i8* %40, i32 17
  %41 = bitcast i8* %add.ptr8 to i32*
  %42 = load i32* %41, align 1
  %43 = and i32 %42, -256
  %44 = or i32 %43, 10
  store i32 %44, i32* %41, align 1
  %45 = load %0** %self.addr, align 4
  %46 = bitcast %0* %45 to i8*
  %add.ptr9 = getelementptr inbounds i8* %46, i32 18
  %47 = bitcast i8* %add.ptr9 to i32*
  %48 = load i32* %47, align 1
  %49 = and i32 %48, -4
  %50 = or i32 %49, 1
  store i32 %50, i32* %47, align 1
  %51 = load %0** %self.addr, align 4
  %52 = bitcast %0* %51 to i8*
  %add.ptr10 = getelementptr inbounds i8* %52, i32 18
  %53 = bitcast i8* %add.ptr10 to i32*
  %54 = load i32* %53, align 1
  %55 = and i32 %54, -1021
  %56 = or i32 %55, 48
  store i32 %56, i32* %53, align 1
  %57 = load %0** %self.addr, align 4
  %58 = bitcast %0* %57 to i8*
  %add.ptr11 = getelementptr inbounds i8* %58, i32 20
  store i8 13, i8* %add.ptr11, align 1
  ret void
}

define internal void @"\01-[Derived checkValues]"(%1* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %1*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %1* %self, %1** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  %0 = load %1** %self.addr, align 4
  %1 = bitcast %1* %0 to i8*
  %add.ptr = getelementptr inbounds i8* %1, i32 0
  %2 = bitcast i8* %add.ptr to i32*
  %3 = load i32* %2, align 4
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @abort() noreturn
  unreachable

if.end:                                           ; preds = %entry
  %4 = load %1** %self.addr, align 4
  %5 = bitcast %1* %4 to i8*
  %add.ptr1 = getelementptr inbounds i8* %5, i32 4
  %6 = bitcast i8* %add.ptr1 to i32*
  %7 = load i32* %6, align 1
  %cmp2 = icmp eq i32 %7, 2
  br i1 %cmp2, label %if.end4, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @abort() noreturn
  unreachable

if.end4:                                          ; preds = %if.end
  %8 = load %1** %self.addr, align 4
  %9 = bitcast %1* %8 to i8*
  %add.ptr5 = getelementptr inbounds i8* %9, i32 8
  %10 = bitcast i8* %add.ptr5 to i32*
  %11 = load i32* %10, align 1
  %bf.clear = and i32 %11, 255
  %12 = shl i32 %bf.clear, 24
  %bf.val.sext = ashr i32 %12, 24
  %cmp6 = icmp eq i32 %bf.val.sext, 3
  br i1 %cmp6, label %if.end8, label %if.then7

if.then7:                                         ; preds = %if.end4
  call void @abort() noreturn
  unreachable

if.end8:                                          ; preds = %if.end4
  %13 = load %1** %self.addr, align 4
  %14 = bitcast %1* %13 to i8*
  %add.ptr9 = getelementptr inbounds i8* %14, i32 9
  %15 = bitcast i8* %add.ptr9 to i32*
  %16 = load i32* %15, align 1
  %bf.clear10 = and i32 %16, 7
  %17 = shl i32 %bf.clear10, 29
  %bf.val.sext11 = ashr i32 %17, 29
  %cmp12 = icmp eq i32 %bf.val.sext11, 1
  br i1 %cmp12, label %if.end14, label %if.then13

if.then13:                                        ; preds = %if.end8
  call void @abort() noreturn
  unreachable

if.end14:                                         ; preds = %if.end8
  %18 = load %1** %self.addr, align 4
  %19 = bitcast %1* %18 to i8*
  %add.ptr15 = getelementptr inbounds i8* %19, i32 9
  %20 = bitcast i8* %add.ptr15 to i32*
  %21 = load i32* %20, align 1
  %22 = lshr i32 %21, 3
  %bf.clear16 = and i32 %22, 255
  %cmp17 = icmp eq i32 %bf.clear16, 6
  br i1 %cmp17, label %if.end19, label %if.then18

if.then18:                                        ; preds = %if.end14
  call void @abort() noreturn
  unreachable

if.end19:                                         ; preds = %if.end14
  %23 = load %1** %self.addr, align 4
  %24 = bitcast %1* %23 to i8*
  %add.ptr20 = getelementptr inbounds i8* %24, i32 12
  %25 = bitcast i8* %add.ptr20 to i16*
  %26 = load i16* %25, align 2
  %conv = sext i16 %26 to i32
  %cmp21 = icmp eq i32 %conv, 7
  br i1 %cmp21, label %if.end24, label %if.then23

if.then23:                                        ; preds = %if.end19
  call void @abort() noreturn
  unreachable

if.end24:                                         ; preds = %if.end19
  %27 = load %1** %self.addr, align 4
  %28 = bitcast %1* %27 to i8*
  %add.ptr25 = getelementptr inbounds i8* %28, i32 14
  %29 = bitcast i8* %add.ptr25 to i32*
  %30 = load i32* %29, align 1
  %bf.clear26 = and i32 %30, 65535
  %cmp27 = icmp eq i32 %bf.clear26, 8
  br i1 %cmp27, label %if.end30, label %if.then29

if.then29:                                        ; preds = %if.end24
  call void @abort() noreturn
  unreachable

if.end30:                                         ; preds = %if.end24
  %31 = load %1** %self.addr, align 4
  %32 = bitcast %1* %31 to i8*
  %add.ptr31 = getelementptr inbounds i8* %32, i32 16
  %33 = bitcast i8* %add.ptr31 to i32*
  %34 = load i32* %33, align 1
  %bf.clear32 = and i32 %34, 255
  %35 = shl i32 %bf.clear32, 24
  %bf.val.sext33 = ashr i32 %35, 24
  %cmp34 = icmp eq i32 %bf.val.sext33, 9
  br i1 %cmp34, label %if.end37, label %if.then36

if.then36:                                        ; preds = %if.end30
  call void @abort() noreturn
  unreachable

if.end37:                                         ; preds = %if.end30
  %36 = load %1** %self.addr, align 4
  %37 = bitcast %1* %36 to i8*
  %add.ptr38 = getelementptr inbounds i8* %37, i32 17
  %38 = bitcast i8* %add.ptr38 to i32*
  %39 = load i32* %38, align 1
  %bf.clear39 = and i32 %39, 255
  %40 = shl i32 %bf.clear39, 24
  %bf.val.sext40 = ashr i32 %40, 24
  %cmp41 = icmp eq i32 %bf.val.sext40, 10
  br i1 %cmp41, label %if.end44, label %if.then43

if.then43:                                        ; preds = %if.end37
  call void @abort() noreturn
  unreachable

if.end44:                                         ; preds = %if.end37
  %41 = load %1** %self.addr, align 4
  %42 = bitcast %1* %41 to i8*
  %add.ptr45 = getelementptr inbounds i8* %42, i32 18
  %43 = bitcast i8* %add.ptr45 to i32*
  %44 = load i32* %43, align 1
  %bf.clear46 = and i32 %44, 3
  %45 = shl i32 %bf.clear46, 30
  %bf.val.sext47 = ashr i32 %45, 30
  %cmp48 = icmp eq i32 %bf.val.sext47, 1
  br i1 %cmp48, label %if.end51, label %if.then50

if.then50:                                        ; preds = %if.end44
  call void @abort() noreturn
  unreachable

if.end51:                                         ; preds = %if.end44
  %46 = load %1** %self.addr, align 4
  %47 = bitcast %1* %46 to i8*
  %add.ptr52 = getelementptr inbounds i8* %47, i32 18
  %48 = bitcast i8* %add.ptr52 to i32*
  %49 = load i32* %48, align 1
  %50 = lshr i32 %49, 2
  %bf.clear53 = and i32 %50, 255
  %51 = shl i32 %bf.clear53, 24
  %bf.val.sext54 = ashr i32 %51, 24
  %cmp55 = icmp eq i32 %bf.val.sext54, 12
  br i1 %cmp55, label %if.end58, label %if.then57

if.then57:                                        ; preds = %if.end51
  call void @abort() noreturn
  unreachable

if.end58:                                         ; preds = %if.end51
  %52 = load %1** %self.addr, align 4
  %53 = bitcast %1* %52 to i8*
  %add.ptr59 = getelementptr inbounds i8* %53, i32 20
  %54 = load i8* %add.ptr59, align 1
  %conv60 = sext i8 %54 to i32
  %cmp61 = icmp eq i32 %conv60, 13
  br i1 %cmp61, label %if.end64, label %if.then63

if.then63:                                        ; preds = %if.end58
  call void @abort() noreturn
  unreachable

if.end64:                                         ; preds = %if.end58
  ret void
}

declare void @abort() noreturn

define i32 @main() nounwind {
entry:
  %retval = alloca i32, align 4
  %obj = alloca %1*, align 4
  store i32 0, i32* %retval
  %0 = load %struct._objc_class** @"\01L_OBJC_CLASS_REFERENCES_"
  %1 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_"
  %2 = bitcast %struct._objc_class* %0 to i8*
  %call = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %2, i8* %1)
  %3 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_29"
  %call1 = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %call, i8* %3)
  %4 = bitcast i8* %call1 to %1*
  store %1* %4, %1** %obj, align 4
  %5 = load %1** %obj, align 4
  %6 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_30"
  %7 = bitcast %1* %5 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*)*)(i8* %7, i8* %6)
  %8 = load %1** %obj, align 4
  %9 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_31"
  %10 = bitcast %1* %8 to i8*
  call void bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to void (i8*, i8*)*)(i8* %10, i8* %9)
  ret i32 0
}

declare i8* @objc_msgSend(i8*, i8*, ...) nonlazybind

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 1}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__OBJC, __image_info,regular"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
