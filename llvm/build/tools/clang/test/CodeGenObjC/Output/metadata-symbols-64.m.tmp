; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/metadata-symbols-64.m'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-darwin10"

%0 = type opaque
%1 = type opaque
%2 = type opaque
%struct._objc_cache = type opaque
%struct._class_t = type { %struct._class_t*, %struct._class_t*, %struct._objc_cache*, i8* (i8*, i8*)**, %struct._class_ro_t* }
%struct._class_ro_t = type { i32, i32, i32, i8*, i8*, %struct.__method_list_t*, %struct._objc_protocol_list*, %struct._ivar_list_t*, i8*, %struct._prop_list_t* }
%struct.__method_list_t = type { i32, i32, [0 x %struct._objc_method] }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_protocol_list = type { i64, [0 x %struct._protocol_t*] }
%struct._protocol_t = type { i8*, i8*, %struct._objc_protocol_list*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct._prop_list_t*, i32, i32, i8** }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._ivar_list_t = type { i32, i32, [0 x %struct._ivar_t] }
%struct._ivar_t = type { i64*, i8*, i8*, i32, i32 }
%struct._category_t = type { i8*, %struct._class_t*, %struct.__method_list_t*, %struct.__method_list_t*, %struct._objc_protocol_list*, %struct._prop_list_t* }
%struct._message_ref_t = type { i8*, i8* }
%struct._objc_super = type { i8*, i8* }

@"OBJC_IVAR_$_A._ivar" = global i64 0, section "__DATA, __objc_ivar", align 8
@_objc_empty_cache = external global %struct._objc_cache
@_objc_empty_vtable = external global i8* (i8*, i8*)*
@"OBJC_CLASS_$_A" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_A", %struct._class_t* null, %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_A" }, section "__DATA, __objc_data", align 8
@"OBJC_METACLASS_$_A" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_A", %struct._class_t* @"OBJC_CLASS_$_A", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_A" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASS_NAME_" = internal global [2 x i8] c"A\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_" = internal global [4 x i8] c"fm0\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [8 x i8] c"v16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_CLASS_METHODS_A" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 24, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (i8*, i8*)* @"\01+[A fm0]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_1" = internal global [4 x i8] c"im0\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_2" = internal global [2 x i8] c"P\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01l_OBJC_$_PROTOCOL_INSTANCE_METHODS_P" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 24, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* null }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_$_PROTOCOL_CLASS_METHODS_P" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 24, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* null }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_$_PROTOCOL_METHOD_TYPES_P" = internal global [2 x i8*] [i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0)], section "__DATA, __objc_const", align 8
@"\01l_OBJC_PROTOCOL_$_P" = weak hidden global %struct._protocol_t { i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_2", i32 0, i32 0), %struct._objc_protocol_list* null, %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_PROTOCOL_INSTANCE_METHODS_P" to %struct.__method_list_t*), %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_PROTOCOL_CLASS_METHODS_P" to %struct.__method_list_t*), %struct.__method_list_t* null, %struct.__method_list_t* null, %struct._prop_list_t* null, i32 80, i32 0, i8** getelementptr inbounds ([2 x i8*]* @"\01l_OBJC_$_PROTOCOL_METHOD_TYPES_P", i32 0, i32 0) }, section "__DATA,__datacoal_nt,coalesced", align 8
@"\01l_OBJC_LABEL_PROTOCOL_$_P" = weak hidden global %struct._protocol_t* @"\01l_OBJC_PROTOCOL_$_P", section "__DATA, __objc_protolist, coalesced, no_dead_strip", align 8
@"\01l_OBJC_CLASS_PROTOCOLS_$_A" = internal global { i64, [2 x %struct._protocol_t*] } { i64 1, [2 x %struct._protocol_t*] [%struct._protocol_t* @"\01l_OBJC_PROTOCOL_$_P", %struct._protocol_t* null] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_METACLASS_RO_$_A" = internal global %struct._class_ro_t { i32 3, i32 40, i32 40, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CLASS_METHODS_A" to %struct.__method_list_t*), %struct._objc_protocol_list* bitcast ({ i64, [2 x %struct._protocol_t*] }* @"\01l_OBJC_CLASS_PROTOCOLS_$_A" to %struct._objc_protocol_list*), %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_3" = internal global [5 x i8] c"ivar\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_4" = internal global [8 x i8] c"i16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_5" = internal global [9 x i8] c"setIvar:\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_6" = internal global [11 x i8] c"v20@0:8i16\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_METHODS_A" = internal global { i32, i32, [3 x %struct._objc_method] } { i32 24, i32 3, [3 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[A im0]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_4", i32 0, i32 0), i8* bitcast (i32 (%0*, i8*)* @"\01-[A ivar]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_METH_VAR_NAME_5", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_6", i32 0, i32 0), i8* bitcast (void (%0*, i8*, i32)* @"\01-[A setIvar:]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_7" = internal global [6 x i8] c"_ivar\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_8" = internal global [2 x i8] c"i\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_VARIABLES_A" = internal global { i32, i32, [1 x %struct._ivar_t] } { i32 32, i32 1, [1 x %struct._ivar_t] [%struct._ivar_t { i64* @"OBJC_IVAR_$_A._ivar", i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_7", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_8", i32 0, i32 0), i32 2, i32 4 }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_PROP_NAME_ATTR_" = internal global [5 x i8] c"ivar\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_9" = internal global [10 x i8] c"Ti,V_ivar\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01l_OBJC_$_PROP_LIST_A" = internal global { i32, i32, [1 x %struct._prop_t] } { i32 16, i32 1, [1 x %struct._prop_t] [%struct._prop_t { i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_9", i32 0, i32 0) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_CLASS_RO_$_A" = internal global %struct._class_ro_t { i32 2, i32 0, i32 4, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [3 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_A" to %struct.__method_list_t*), %struct._objc_protocol_list* bitcast ({ i64, [2 x %struct._protocol_t*] }* @"\01l_OBJC_CLASS_PROTOCOLS_$_A" to %struct._objc_protocol_list*), %struct._ivar_list_t* bitcast ({ i32, i32, [1 x %struct._ivar_t] }* @"\01l_OBJC_$_INSTANCE_VARIABLES_A" to %struct._ivar_list_t*), i8* null, %struct._prop_list_t* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_A" to %struct._prop_list_t*) }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_CLASS_NAME_10" = internal global [4 x i8] c"Cat\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_11" = internal global [4 x i8] c"im1\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_CATEGORY_INSTANCE_METHODS_A_$_Cat" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 24, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[A(Cat) im1]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_12" = internal global [4 x i8] c"fm1\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_CATEGORY_CLASS_METHODS_A_$_Cat" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 24, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_12", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (i8*, i8*)* @"\01+[A(Cat) fm1]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_$_CATEGORY_A_$_Cat" = internal global %struct._category_t { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_10", i32 0, i32 0), %struct._class_t* @"OBJC_CLASS_$_A", %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CATEGORY_INSTANCE_METHODS_A_$_Cat" to %struct.__method_list_t*), %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CATEGORY_CLASS_METHODS_A_$_Cat" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"OBJC_METACLASS_$_D" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_A", %struct._class_t* @"OBJC_METACLASS_$_A", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_D" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASSLIST_SUP_REFS_$_" = internal global %struct._class_t* @"OBJC_METACLASS_$_D", section "__DATA, __objc_superrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_SELECTOR_REFERENCES_" = internal global i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_12", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"OBJC_CLASS_$_D" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_D", %struct._class_t* @"OBJC_CLASS_$_A", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_D" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASSLIST_SUP_REFS_$_13" = internal global %struct._class_t* @"OBJC_CLASS_$_D", section "__DATA, __objc_superrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_SELECTOR_REFERENCES_14" = internal global i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_CLASS_NAME_15" = internal global [2 x i8] c"D\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_16" = internal global [4 x i8] c"fm2\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_CLASS_METHODS_D" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 24, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_16", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (i8*, i8*)* @"\01+[D fm2]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_METACLASS_RO_$_D" = internal global %struct._class_ro_t { i32 1, i32 40, i32 40, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_15", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CLASS_METHODS_D" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_17" = internal global [4 x i8] c"im2\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_METHODS_D" = internal global { i32, i32, [1 x %struct._objc_method] } { i32 24, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_17", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%1*, i8*)* @"\01-[D im2]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_CLASS_RO_$_D" = internal global %struct._class_ro_t { i32 0, i32 4, i32 4, i8* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_15", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_D" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@DOUBLE = common global double 0.000000e+00, align 8
@FLOAT = common global float 0.000000e+00, align 4
@LONGDOUBLE = common global x86_fp80 0xK00000000000000000000, align 16
@"OBJC_CLASS_$_Example" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_Example", %struct._class_t* null, %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_CLASS_RO_$_Example" }, section "__DATA, __objc_data", align 8
@"OBJC_METACLASS_$_Example" = global %struct._class_t { %struct._class_t* @"OBJC_METACLASS_$_Example", %struct._class_t* @"OBJC_CLASS_$_Example", %struct._objc_cache* @_objc_empty_cache, i8* (i8*, i8*)** @_objc_empty_vtable, %struct._class_ro_t* @"\01l_OBJC_METACLASS_RO_$_Example" }, section "__DATA, __objc_data", align 8
@"\01L_OBJC_CLASS_NAME_18" = internal global [8 x i8] c"Example\00", section "__TEXT,__objc_classname,cstring_literals", align 1
@"\01l_OBJC_METACLASS_RO_$_Example" = internal global %struct._class_ro_t { i32 3, i32 40, i32 40, i8* null, i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_CLASS_NAME_18", i32 0, i32 0), %struct.__method_list_t* null, %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_METH_VAR_NAME_19" = internal global [11 x i8] c"RET_DOUBLE\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_20" = internal global [8 x i8] c"d16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_21" = internal global [10 x i8] c"RET_FLOAT\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_22" = internal global [8 x i8] c"f16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_23" = internal global [15 x i8] c"RET_LONGDOUBLE\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_24" = internal global [8 x i8] c"D16@0:8\00", section "__TEXT,__objc_methtype,cstring_literals", align 1
@"\01l_OBJC_$_INSTANCE_METHODS_Example" = internal global { i32, i32, [3 x %struct._objc_method] } { i32 24, i32 3, [3 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_19", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_20", i32 0, i32 0), i8* bitcast (double (%2*, i8*)* @"\01-[Example RET_DOUBLE]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_NAME_21", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_22", i32 0, i32 0), i8* bitcast (float (%2*, i8*)* @"\01-[Example RET_FLOAT]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([15 x i8]* @"\01L_OBJC_METH_VAR_NAME_23", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_24", i32 0, i32 0), i8* bitcast (x86_fp80 (%2*, i8*)* @"\01-[Example RET_LONGDOUBLE]" to i8*) }] }, section "__DATA, __objc_const", align 8
@"\01l_OBJC_CLASS_RO_$_Example" = internal global %struct._class_ro_t { i32 2, i32 0, i32 0, i8* null, i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_CLASS_NAME_18", i32 0, i32 0), %struct.__method_list_t* bitcast ({ i32, i32, [3 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_Example" to %struct.__method_list_t*), %struct._objc_protocol_list* null, %struct._ivar_list_t* null, i8* null, %struct._prop_list_t* null }, section "__DATA, __objc_const", align 8
@"\01L_OBJC_SELECTOR_REFERENCES_25" = internal global i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_19", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_26" = internal global i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_NAME_21", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"\01L_OBJC_SELECTOR_REFERENCES_27" = internal global i8* getelementptr inbounds ([15 x i8]* @"\01L_OBJC_METH_VAR_NAME_23", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"OBJC_CLASS_$_B" = external global %struct._class_t
@"\01L_OBJC_CLASSLIST_REFERENCES_$_" = internal global %struct._class_t* @"OBJC_CLASS_$_B", section "__DATA, __objc_classrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_SELECTOR_REFERENCES_28" = internal global i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), section "__DATA, __objc_selrefs, literal_pointers, no_dead_strip"
@"OBJC_CLASS_$_C" = external global %struct._class_t
@"\01L_OBJC_CLASSLIST_REFERENCES_$_29" = internal global %struct._class_t* @"OBJC_CLASS_$_C", section "__DATA, __objc_classrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_CLASSLIST_REFERENCES_$_30" = internal global %struct._class_t* @"OBJC_CLASS_$_D", section "__DATA, __objc_classrefs, regular, no_dead_strip", align 8
@"\01L_OBJC_METH_VAR_NAME_31" = internal global [6 x i8] c"alloc\00", section "__TEXT,__objc_methname,cstring_literals", align 1
@"\01l_objc_msgSend_fixup_alloc" = weak hidden global { i8* (i8*, %struct._message_ref_t*, ...)*, i8* } { i8* (i8*, %struct._message_ref_t*, ...)* @objc_msgSend_fixup, i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_31", i32 0, i32 0) }, section "__DATA, __objc_msgrefs, coalesced", align 16
@ID = common global i8* null, align 8
@"\01L_OBJC_LABEL_CLASS_$" = internal global [3 x i8*] [i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_A" to i8*), i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_D" to i8*), i8* bitcast (%struct._class_t* @"OBJC_CLASS_$_Example" to i8*)], section "__DATA, __objc_classlist, regular, no_dead_strip", align 8
@"\01L_OBJC_LABEL_CATEGORY_$" = internal global [1 x i8*] [i8* bitcast (%struct._category_t* @"\01l_OBJC_$_CATEGORY_A_$_Cat" to i8*)], section "__DATA, __objc_catlist, regular, no_dead_strip", align 8
@llvm.used = appending global [56 x i8*] [i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CLASS_METHODS_A" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_2", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_PROTOCOL_INSTANCE_METHODS_P" to i8*), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_PROTOCOL_CLASS_METHODS_P" to i8*), i8* bitcast ([2 x i8*]* @"\01l_OBJC_$_PROTOCOL_METHOD_TYPES_P" to i8*), i8* bitcast (%struct._protocol_t* @"\01l_OBJC_PROTOCOL_$_P" to i8*), i8* bitcast (%struct._protocol_t** @"\01l_OBJC_LABEL_PROTOCOL_$_P" to i8*), i8* bitcast ({ i64, [2 x %struct._protocol_t*] }* @"\01l_OBJC_CLASS_PROTOCOLS_$_A" to i8*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_3", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_4", i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_METH_VAR_NAME_5", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_TYPE_6", i32 0, i32 0), i8* bitcast ({ i32, i32, [3 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_A" to i8*), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_7", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_8", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._ivar_t] }* @"\01l_OBJC_$_INSTANCE_VARIABLES_A" to i8*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_9", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_A" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_10", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CATEGORY_INSTANCE_METHODS_A_$_Cat" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_12", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CATEGORY_CLASS_METHODS_A_$_Cat" to i8*), i8* bitcast (%struct._category_t* @"\01l_OBJC_$_CATEGORY_A_$_Cat" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_13" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_14" to i8*), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_15", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_16", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_CLASS_METHODS_D" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_17", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_D" to i8*), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_CLASS_NAME_18", i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @"\01L_OBJC_METH_VAR_NAME_19", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_20", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_NAME_21", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_22", i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @"\01L_OBJC_METH_VAR_NAME_23", i32 0, i32 0), i8* getelementptr inbounds ([8 x i8]* @"\01L_OBJC_METH_VAR_TYPE_24", i32 0, i32 0), i8* bitcast ({ i32, i32, [3 x %struct._objc_method] }* @"\01l_OBJC_$_INSTANCE_METHODS_Example" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_25" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_26" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_27" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_28" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_29" to i8*), i8* bitcast (%struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_30" to i8*), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_31", i32 0, i32 0), i8* bitcast ([3 x i8*]* @"\01L_OBJC_LABEL_CLASS_$" to i8*), i8* bitcast ([1 x i8*]* @"\01L_OBJC_LABEL_CATEGORY_$" to i8*)], section "llvm.metadata"

define internal void @"\01+[A fm0]"(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 8
  %_cmd.addr = alloca i8*, align 8
  store i8* %self, i8** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  ret void
}

define internal void @"\01-[A im0]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  ret void
}

define internal i32 @"\01-[A ivar]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load %0** %self.addr
  %ivar = load i64* @"OBJC_IVAR_$_A._ivar", !invariant.load !4
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 %ivar
  %1 = bitcast i8* %add.ptr to i32*
  %load = load atomic i32* %1 unordered, align 4
  ret i32 %load
}

define internal void @"\01-[A setIvar:]"(%0* %self, i8* %_cmd, i32 %ivar) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  %ivar.addr = alloca i32, align 4
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  store i32 %ivar, i32* %ivar.addr, align 4
  %self1 = load %0** %self.addr
  %ivar2 = load i64* @"OBJC_IVAR_$_A._ivar", !invariant.load !4
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i64 %ivar2
  %1 = bitcast i8* %add.ptr to i32*
  %2 = load i32* %ivar.addr
  store atomic i32 %2, i32* %1 unordered, align 4
  ret void
}

define internal void @"\01+[A(Cat) fm1]"(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 8
  %_cmd.addr = alloca i8*, align 8
  store i8* %self, i8** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  ret void
}

define internal void @"\01-[A(Cat) im1]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %0* %self, %0** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  ret void
}

define internal void @"\01+[D fm2]"(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 8
  %_cmd.addr = alloca i8*, align 8
  %objc_super = alloca %struct._objc_super
  store i8* %self, i8** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load i8** %self.addr
  %0 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 0
  store i8* %self1, i8** %0
  %1 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_"
  %2 = bitcast %struct._class_t* %1 to i8*
  %3 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 1
  store i8* %2, i8** %3
  %4 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_", !invariant.load !4
  call void bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to void (%struct._objc_super*, i8*)*)(%struct._objc_super* %objc_super, i8* %4)
  ret void
}

declare i8* @objc_msgSendSuper2(%struct._objc_super*, i8*, ...)

define internal void @"\01-[D im2]"(%1* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %1*, align 8
  %_cmd.addr = alloca i8*, align 8
  %objc_super = alloca %struct._objc_super
  store %1* %self, %1** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %self1 = load %1** %self.addr
  %0 = bitcast %1* %self1 to i8*
  %1 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 0
  store i8* %0, i8** %1
  %2 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_SUP_REFS_$_13"
  %3 = bitcast %struct._class_t* %2 to i8*
  %4 = getelementptr inbounds %struct._objc_super* %objc_super, i32 0, i32 1
  store i8* %3, i8** %4
  %5 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_14", !invariant.load !4
  call void bitcast (i8* (%struct._objc_super*, i8*, ...)* @objc_msgSendSuper2 to void (%struct._objc_super*, i8*)*)(%struct._objc_super* %objc_super, i8* %5)
  ret void
}

define internal double @"\01-[Example RET_DOUBLE]"(%2* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %2*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %2* %self, %2** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %0 = load double* @DOUBLE, align 8
  ret double %0
}

define internal float @"\01-[Example RET_FLOAT]"(%2* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %2*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %2* %self, %2** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %0 = load float* @FLOAT, align 4
  ret float %0
}

define internal x86_fp80 @"\01-[Example RET_LONGDOUBLE]"(%2* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %2*, align 8
  %_cmd.addr = alloca i8*, align 8
  store %2* %self, %2** %self.addr, align 8
  store i8* %_cmd, i8** %_cmd.addr, align 8
  %0 = load x86_fp80* @LONGDOUBLE, align 16
  ret x86_fp80 %0
}

define i8* @f0(i8* %x) nounwind {
entry:
  %retval = alloca i8*, align 8
  %x.addr = alloca i8*, align 8
  %pe = alloca %2*, align 8
  %dd = alloca double, align 8
  store i8* %x, i8** %x.addr, align 8
  %0 = load %2** %pe, align 8
  %1 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_25", !invariant.load !4
  %2 = bitcast %2* %0 to i8*
  %call = call double bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to double (i8*, i8*)*)(i8* %2, i8* %1)
  store double %call, double* %dd, align 8
  %3 = load %2** %pe, align 8
  %4 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_26", !invariant.load !4
  %5 = bitcast %2* %3 to i8*
  %call1 = call float bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to float (i8*, i8*)*)(i8* %5, i8* %4)
  %conv = fpext float %call1 to double
  store double %conv, double* %dd, align 8
  %6 = load %2** %pe, align 8
  %7 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_27", !invariant.load !4
  %8 = bitcast %2* %6 to i8*
  %call2 = call x86_fp80 bitcast (double (i8*, i8*, ...)* @objc_msgSend_fpret to x86_fp80 (i8*, i8*)*)(i8* %8, i8* %7)
  %conv3 = fptrunc x86_fp80 %call2 to double
  store double %conv3, double* %dd, align 8
  %9 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_"
  %10 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_28", !invariant.load !4
  %11 = bitcast %struct._class_t* %9 to i8*
  %call4 = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %11, i8* %10)
  %12 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_29"
  %13 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_14", !invariant.load !4
  %14 = bitcast %struct._class_t* %12 to i8*
  %call5 = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %14, i8* %13)
  %15 = load %struct._class_t** @"\01L_OBJC_CLASSLIST_REFERENCES_$_30"
  %16 = bitcast %struct._class_t* %15 to i8*
  %msgSend_fn = load i8** getelementptr inbounds (%struct._message_ref_t* bitcast ({ i8* (i8*, %struct._message_ref_t*, ...)*, i8* }* @"\01l_objc_msgSend_fixup_alloc" to %struct._message_ref_t*), i32 0, i32 0)
  %17 = bitcast i8* %msgSend_fn to i8* (i8*, %struct._message_ref_t*)*
  %call6 = call i8* %17(i8* %16, %struct._message_ref_t* bitcast ({ i8* (i8*, %struct._message_ref_t*, ...)*, i8* }* @"\01l_objc_msgSend_fixup_alloc" to %struct._message_ref_t*))
  %18 = load i8** %retval
  ret i8* %18
}

declare i8* @objc_msgSend(i8*, i8*, ...) nonlazybind

declare double @objc_msgSend_fpret(i8*, i8*, ...)

declare i8* @objc_msgSend_fixup(i8*, %struct._message_ref_t*, ...)

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 2}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
!4 = metadata !{}
