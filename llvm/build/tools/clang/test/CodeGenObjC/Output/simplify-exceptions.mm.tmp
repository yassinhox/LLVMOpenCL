; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/simplify-exceptions.mm'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-apple-darwin10"

%struct.t0_B = type { %struct.t0_A }
%struct.t0_A = type { i8 }

@_ZZ2t0vE1x = internal global %struct.t0_B zeroinitializer, align 1
@_ZGVZ2t0vE1x = internal global i64 0

define %struct.t0_B* @_Z2t0v() {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = load atomic i8* bitcast (i64* @_ZGVZ2t0vE1x to i8*) acquire, align 1
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end

init.check:                                       ; preds = %entry
  %1 = call i32 @__cxa_guard_acquire(i64* @_ZGVZ2t0vE1x)
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %init, label %init.end

init:                                             ; preds = %init.check
  invoke void @_ZN4t0_BC1Ev(%struct.t0_B* @_ZZ2t0vE1x)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %init
  call void @__cxa_guard_release(i64* @_ZGVZ2t0vE1x)
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  ret %struct.t0_B* @_ZZ2t0vE1x

lpad:                                             ; preds = %init
  %2 = landingpad { i8*, i32 } personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*)
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot
  call void @__cxa_guard_abort(i64* @_ZGVZ2t0vE1x) nounwind
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8** %exn.slot
  %sel = load i32* %ehselector.slot
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

declare i32 @__cxa_guard_acquire(i64*) nounwind

define linkonce_odr void @_ZN4t0_BC1Ev(%struct.t0_B* %this) unnamed_addr inlinehint align 2 {
entry:
  %this.addr = alloca %struct.t0_B*, align 8
  store %struct.t0_B* %this, %struct.t0_B** %this.addr, align 8
  %this1 = load %struct.t0_B** %this.addr
  call void @_ZN4t0_BC2Ev(%struct.t0_B* %this1)
  ret void
}

declare void @__cxa_guard_abort(i64*) nounwind

declare void @__cxa_guard_release(i64*) nounwind

define linkonce_odr void @_ZN4t0_BC2Ev(%struct.t0_B* %this) unnamed_addr inlinehint align 2 {
entry:
  %this.addr = alloca %struct.t0_B*, align 8
  store %struct.t0_B* %this, %struct.t0_B** %this.addr, align 8
  %this1 = load %struct.t0_B** %this.addr
  %a = getelementptr inbounds %struct.t0_B* %this1, i32 0, i32 0
  call void @_ZN4t0_AC1Ev(%struct.t0_A* %a)
  ret void
}

declare void @_ZN4t0_AC1Ev(%struct.t0_A*)

declare i32 @__gxx_personality_v0(...)

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 2}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__DATA, __objc_imageinfo, regular, no_dead_strip"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
