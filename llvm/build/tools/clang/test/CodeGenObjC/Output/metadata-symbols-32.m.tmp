; ModuleID = '/home/jazouani/llvm/llvm-3.2/tools/clang/test/CodeGenObjC/metadata-symbols-32.m'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128-n8:16:32-S128"
target triple = "i386-apple-darwin9"

module asm "\09.objc_class_name_A=0"
module asm "\09.globl .objc_class_name_A"
module asm "\09.lazy_reference .objc_class_name_Protocol"
module asm "\09.lazy_reference .objc_class_name_A"
module asm "\09.lazy_reference .objc_class_name_J0"
module asm "\09.lazy_reference .objc_class_name_B"
module asm "\09.lazy_reference .objc_class_name_C"
module asm "\09.objc_category_name_A_Cat=0"
module asm "\09.globl .objc_category_name_A_Cat"
module asm "\09.objc_category_name_J0_Category=0"
module asm "\09.globl .objc_category_name_J0_Category"

%0 = type opaque
%struct._objc_protocol_extension = type { i32, %struct._objc_method_description_list*, %struct._objc_method_description_list*, %struct._prop_list_t*, i8** }
%struct._objc_method_description_list = type { i32, [0 x %struct._objc_method_description] }
%struct._objc_method_description = type { i8*, i8* }
%struct._prop_list_t = type { i32, i32, [0 x %struct._prop_t] }
%struct._prop_t = type { i8*, i8* }
%struct._objc_protocol = type { %struct._objc_protocol_extension*, i8*, %struct._objc_protocol_list*, %struct._objc_method_description_list*, %struct._objc_method_description_list* }
%struct._objc_protocol_list = type { %struct._objc_protocol_list*, i32, [0 x %struct._objc_protocol] }
%struct._objc_method = type { i8*, i8*, i8* }
%struct._objc_class = type { %struct._objc_class*, %struct._objc_class*, i8*, i32, i32, i32, %struct._objc_ivar_list*, %struct._objc_method_list*, %struct._objc_cache*, %struct._objc_protocol_list*, i8*, %struct._objc_class_extension* }
%struct._objc_ivar_list = type opaque
%struct._objc_method_list = type opaque
%struct._objc_cache = type opaque
%struct._objc_class_extension = type { i32, i8*, %struct._prop_list_t* }
%struct._objc_ivar = type { i8*, i8*, i32 }
%struct._objc_category = type { i8*, i8*, %struct._objc_method_list*, %struct._objc_method_list*, %struct._objc_protocol_list*, i32, %struct._prop_list_t* }
%struct._objc_module = type { i32, i32, i8*, %struct._objc_symtab* }
%struct._objc_symtab = type { i32, i8*, i16, i16, [0 x i8*] }

@"\01L_OBJC_METH_VAR_NAME_" = internal global [4 x i8] c"im0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_" = internal global [7 x i8] c"v8@0:4\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_1" = internal global [4 x i8] c"fm0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROTOCOL_METHOD_TYPES_P" = internal global [2 x i8*] [i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0)], align 4
@"\01L_OBJC_PROTOCOLEXT_P" = internal global %struct._objc_protocol_extension { i32 20, %struct._objc_method_description_list* null, %struct._objc_method_description_list* null, %struct._prop_list_t* null, i8** getelementptr inbounds ([2 x i8*]* @"\01L_OBJC_PROTOCOL_METHOD_TYPES_P", i32 0, i32 0) }
@"\01L_OBJC_CLASS_NAME_" = internal global [2 x i8] c"P\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROTOCOL_INSTANCE_METHODS_P" = internal global { i32, [1 x %struct._objc_method_description] } { i32 1, [1 x %struct._objc_method_description] [%struct._objc_method_description { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0) }] }, section "__OBJC,__cat_inst_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_PROTOCOL_CLASS_METHODS_P" = internal global { i32, [1 x %struct._objc_method_description] } { i32 1, [1 x %struct._objc_method_description] [%struct._objc_method_description { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0) }] }, section "__OBJC,__cat_cls_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_PROTOCOL_P" = internal global %struct._objc_protocol { %struct._objc_protocol_extension* @"\01L_OBJC_PROTOCOLEXT_P", i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), %struct._objc_protocol_list* null, %struct._objc_method_description_list* bitcast ({ i32, [1 x %struct._objc_method_description] }* @"\01L_OBJC_PROTOCOL_INSTANCE_METHODS_P" to %struct._objc_method_description_list*), %struct._objc_method_description_list* bitcast ({ i32, [1 x %struct._objc_method_description] }* @"\01L_OBJC_PROTOCOL_CLASS_METHODS_P" to %struct._objc_method_description_list*) }, section "__OBJC,__protocol,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_PROTOCOLS_A" = internal global { %struct._objc_protocol_list*, i32, [2 x %struct._objc_protocol*] } { %struct._objc_protocol_list* null, i32 1, [2 x %struct._objc_protocol*] [%struct._objc_protocol* @"\01L_OBJC_PROTOCOL_P", %struct._objc_protocol* null] }, section "__OBJC,__cat_cls_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_2" = internal global [5 x i8] c"ivar\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_3" = internal global [7 x i8] c"i8@0:4\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_4" = internal global [9 x i8] c"setIvar:\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_5" = internal global [10 x i8] c"v12@0:4i8\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_6" = internal global [2 x i8] c"A\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_METHODS_A" = internal global { i8*, i32, [1 x %struct._objc_method] } { i8* null, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (i8*, i8*)* @"\01+[A fm0]" to i8*) }] }, section "__OBJC,__cls_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_METACLASS_A" = internal global %struct._objc_class { %struct._objc_class* bitcast ([2 x i8]* @"\01L_OBJC_CLASS_NAME_6" to %struct._objc_class*), %struct._objc_class* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_6", i32 0, i32 0), i32 0, i32 2, i32 48, %struct._objc_ivar_list* null, %struct._objc_method_list* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_CLASS_METHODS_A" to %struct._objc_method_list*), %struct._objc_cache* null, %struct._objc_protocol_list* bitcast ({ %struct._objc_protocol_list*, i32, [2 x %struct._objc_protocol*] }* @"\01L_OBJC_CLASS_PROTOCOLS_A" to %struct._objc_protocol_list*), i8* null, %struct._objc_class_extension* null }, section "__OBJC,__meta_class,regular,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_7" = internal global [6 x i8] c"_ivar\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_TYPE_8" = internal global [2 x i8] c"i\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_INSTANCE_VARIABLES_A" = internal global { i32, [1 x %struct._objc_ivar] } { i32 1, [1 x %struct._objc_ivar] [%struct._objc_ivar { i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_7", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_8", i32 0, i32 0), i32 0 }] }, section "__OBJC,__instance_vars,regular,no_dead_strip", align 4
@"\01L_OBJC_INSTANCE_METHODS_A" = internal global { i8*, i32, [3 x %struct._objc_method] } { i8* null, i32 3, [3 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[A im0]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_2", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_3", i32 0, i32 0), i8* bitcast (i32 (%0*, i8*)* @"\01-[A ivar]" to i8*) }, %struct._objc_method { i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_TYPE_5", i32 0, i32 0), i8* bitcast (void (%0*, i8*, i32)* @"\01-[A setIvar:]" to i8*) }] }, section "__OBJC,__inst_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_PROP_NAME_ATTR_" = internal global [5 x i8] c"ivar\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_PROP_NAME_ATTR_9" = internal global [10 x i8] c"Ti,V_ivar\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01l_OBJC_$_PROP_LIST_A" = internal global { i32, i32, [1 x %struct._prop_t] } { i32 8, i32 1, [1 x %struct._prop_t] [%struct._prop_t { i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_9", i32 0, i32 0) }] }, section "__OBJC,__property,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASSEXT_A" = internal global %struct._objc_class_extension { i32 12, i8* null, %struct._prop_list_t* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_A" to %struct._prop_list_t*) }, section "__OBJC,__class_ext,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_A" = internal global %struct._objc_class { %struct._objc_class* @"\01L_OBJC_METACLASS_A", %struct._objc_class* null, i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_6", i32 0, i32 0), i32 0, i32 1, i32 4, %struct._objc_ivar_list* bitcast ({ i32, [1 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_A" to %struct._objc_ivar_list*), %struct._objc_method_list* bitcast ({ i8*, i32, [3 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_A" to %struct._objc_method_list*), %struct._objc_cache* null, %struct._objc_protocol_list* bitcast ({ %struct._objc_protocol_list*, i32, [2 x %struct._objc_protocol*] }* @"\01L_OBJC_CLASS_PROTOCOLS_A" to %struct._objc_protocol_list*), i8* null, %struct._objc_class_extension* @"\01L_OBJC_CLASSEXT_A" }, section "__OBJC,__class,regular,no_dead_strip", align 4
@"\01L_OBJC_METH_VAR_NAME_10" = internal global [4 x i8] c"im1\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_METH_VAR_NAME_11" = internal global [4 x i8] c"fm1\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_12" = internal global [4 x i8] c"Cat\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CATEGORY_INSTANCE_METHODS_A_Cat" = internal global { i8*, i32, [1 x %struct._objc_method] } { i8* null, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (%0*, i8*)* @"\01-[A(Cat) im1]" to i8*) }] }, section "__OBJC,__cat_inst_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_CATEGORY_CLASS_METHODS_A_Cat" = internal global { i8*, i32, [1 x %struct._objc_method] } { i8* null, i32 1, [1 x %struct._objc_method] [%struct._objc_method { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* bitcast (void (i8*, i8*)* @"\01+[A(Cat) fm1]" to i8*) }] }, section "__OBJC,__cat_cls_meth,regular,no_dead_strip", align 4
@"\01L_OBJC_CATEGORY_A_Cat" = internal global %struct._objc_category { i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_12", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_6", i32 0, i32 0), %struct._objc_method_list* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_CATEGORY_INSTANCE_METHODS_A_Cat" to %struct._objc_method_list*), %struct._objc_method_list* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_CATEGORY_CLASS_METHODS_A_Cat" to %struct._objc_method_list*), %struct._objc_protocol_list* null, i32 28, %struct._prop_list_t* null }, section "__OBJC,__category,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_NAME_13" = internal global [9 x i8] c"Category\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_NAME_14" = internal global [3 x i8] c"J0\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CATEGORY_J0_Category" = internal global %struct._objc_category { i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_CLASS_NAME_13", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_14", i32 0, i32 0), %struct._objc_method_list* null, %struct._objc_method_list* null, %struct._objc_protocol_list* null, i32 28, %struct._prop_list_t* null }, section "__OBJC,__category,regular,no_dead_strip", align 4
@"\01L_OBJC_CLASS_NAME_15" = internal global [2 x i8] c"B\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_REFERENCES_" = internal global %struct._objc_class* bitcast ([2 x i8]* @"\01L_OBJC_CLASS_NAME_15" to %struct._objc_class*), section "__OBJC,__cls_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_SELECTOR_REFERENCES_" = internal global i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), section "__OBJC,__message_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_CLASS_NAME_16" = internal global [2 x i8] c"C\00", section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_CLASS_REFERENCES_17" = internal global %struct._objc_class* bitcast ([2 x i8]* @"\01L_OBJC_CLASS_NAME_16" to %struct._objc_class*), section "__OBJC,__cls_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_SELECTOR_REFERENCES_18" = internal global i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), section "__OBJC,__message_refs,literal_pointers,no_dead_strip", align 4
@"\01L_OBJC_CLASS_NAME_19" = internal global [1 x i8] zeroinitializer, section "__TEXT,__cstring,cstring_literals", align 1
@"\01L_OBJC_SYMBOLS" = internal global { i32, i8*, i16, i16, [3 x i8*] } { i32 0, i8* null, i16 1, i16 2, [3 x i8*] [i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_A" to i8*), i8* bitcast (%struct._objc_category* @"\01L_OBJC_CATEGORY_A_Cat" to i8*), i8* bitcast (%struct._objc_category* @"\01L_OBJC_CATEGORY_J0_Category" to i8*)] }, section "__OBJC,__symbols,regular,no_dead_strip", align 4
@"\01L_OBJC_MODULES" = internal global %struct._objc_module { i32 7, i32 16, i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_19", i32 0, i32 0), %struct._objc_symtab* bitcast ({ i32, i8*, i16, i16, [3 x i8*] }* @"\01L_OBJC_SYMBOLS" to %struct._objc_symtab*) }, section "__OBJC,__module_info,regular,no_dead_strip", align 4
@llvm.used = appending global [43 x i8*] [i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_1", i32 0, i32 0), i8* bitcast ([2 x i8*]* @"\01L_OBJC_PROTOCOL_METHOD_TYPES_P" to i8*), i8* bitcast (%struct._objc_protocol_extension* @"\01L_OBJC_PROTOCOLEXT_P" to i8*), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_", i32 0, i32 0), i8* bitcast ({ i32, [1 x %struct._objc_method_description] }* @"\01L_OBJC_PROTOCOL_INSTANCE_METHODS_P" to i8*), i8* bitcast ({ i32, [1 x %struct._objc_method_description] }* @"\01L_OBJC_PROTOCOL_CLASS_METHODS_P" to i8*), i8* bitcast (%struct._objc_protocol* @"\01L_OBJC_PROTOCOL_P" to i8*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_METH_VAR_NAME_2", i32 0, i32 0), i8* getelementptr inbounds ([7 x i8]* @"\01L_OBJC_METH_VAR_TYPE_3", i32 0, i32 0), i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_METH_VAR_NAME_4", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_METH_VAR_TYPE_5", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_6", i32 0, i32 0), i8* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_CLASS_METHODS_A" to i8*), i8* bitcast (%struct._objc_class* @"\01L_OBJC_METACLASS_A" to i8*), i8* getelementptr inbounds ([6 x i8]* @"\01L_OBJC_METH_VAR_NAME_7", i32 0, i32 0), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_METH_VAR_TYPE_8", i32 0, i32 0), i8* bitcast ({ i32, [1 x %struct._objc_ivar] }* @"\01L_OBJC_INSTANCE_VARIABLES_A" to i8*), i8* bitcast ({ i8*, i32, [3 x %struct._objc_method] }* @"\01L_OBJC_INSTANCE_METHODS_A" to i8*), i8* getelementptr inbounds ([5 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_", i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @"\01L_OBJC_PROP_NAME_ATTR_9", i32 0, i32 0), i8* bitcast ({ i32, i32, [1 x %struct._prop_t] }* @"\01l_OBJC_$_PROP_LIST_A" to i8*), i8* bitcast (%struct._objc_class_extension* @"\01L_OBJC_CLASSEXT_A" to i8*), i8* bitcast (%struct._objc_class* @"\01L_OBJC_CLASS_A" to i8*), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_10", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_METH_VAR_NAME_11", i32 0, i32 0), i8* getelementptr inbounds ([4 x i8]* @"\01L_OBJC_CLASS_NAME_12", i32 0, i32 0), i8* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_CATEGORY_INSTANCE_METHODS_A_Cat" to i8*), i8* bitcast ({ i8*, i32, [1 x %struct._objc_method] }* @"\01L_OBJC_CATEGORY_CLASS_METHODS_A_Cat" to i8*), i8* bitcast (%struct._objc_category* @"\01L_OBJC_CATEGORY_A_Cat" to i8*), i8* getelementptr inbounds ([9 x i8]* @"\01L_OBJC_CLASS_NAME_13", i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @"\01L_OBJC_CLASS_NAME_14", i32 0, i32 0), i8* bitcast (%struct._objc_category* @"\01L_OBJC_CATEGORY_J0_Category" to i8*), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_15", i32 0, i32 0), i8* bitcast (%struct._objc_class** @"\01L_OBJC_CLASS_REFERENCES_" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_" to i8*), i8* getelementptr inbounds ([2 x i8]* @"\01L_OBJC_CLASS_NAME_16", i32 0, i32 0), i8* bitcast (%struct._objc_class** @"\01L_OBJC_CLASS_REFERENCES_17" to i8*), i8* bitcast (i8** @"\01L_OBJC_SELECTOR_REFERENCES_18" to i8*), i8* getelementptr inbounds ([1 x i8]* @"\01L_OBJC_CLASS_NAME_19", i32 0, i32 0), i8* bitcast ({ i32, i8*, i16, i16, [3 x i8*] }* @"\01L_OBJC_SYMBOLS" to i8*), i8* bitcast (%struct._objc_module* @"\01L_OBJC_MODULES" to i8*)], section "llvm.metadata"

define internal void @"\01+[A fm0]"(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 4
  %_cmd.addr = alloca i8*, align 4
  store i8* %self, i8** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  ret void
}

define internal void @"\01-[A im0]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %0* %self, %0** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  ret void
}

define internal i32 @"\01-[A ivar]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %0* %self, %0** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  %self1 = load %0** %self.addr
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i32 0
  %1 = bitcast i8* %add.ptr to i32*
  %load = load atomic i32* %1 unordered, align 4
  ret i32 %load
}

define internal void @"\01-[A setIvar:]"(%0* %self, i8* %_cmd, i32 %ivar) nounwind {
entry:
  %self.addr = alloca %0*, align 4
  %_cmd.addr = alloca i8*, align 4
  %ivar.addr = alloca i32, align 4
  store %0* %self, %0** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  store i32 %ivar, i32* %ivar.addr, align 4
  %self1 = load %0** %self.addr
  %0 = bitcast %0* %self1 to i8*
  %add.ptr = getelementptr inbounds i8* %0, i32 0
  %1 = bitcast i8* %add.ptr to i32*
  %2 = load i32* %ivar.addr
  store atomic i32 %2, i32* %1 unordered, align 4
  ret void
}

define internal void @"\01+[A(Cat) fm1]"(i8* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca i8*, align 4
  %_cmd.addr = alloca i8*, align 4
  store i8* %self, i8** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  ret void
}

define internal void @"\01-[A(Cat) im1]"(%0* %self, i8* %_cmd) nounwind {
entry:
  %self.addr = alloca %0*, align 4
  %_cmd.addr = alloca i8*, align 4
  store %0* %self, %0** %self.addr, align 4
  store i8* %_cmd, i8** %_cmd.addr, align 4
  ret void
}

define i8* @f0() nounwind {
entry:
  %retval = alloca i8*, align 4
  %0 = load %struct._objc_class** @"\01L_OBJC_CLASS_REFERENCES_"
  %1 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_"
  %2 = bitcast %struct._objc_class* %0 to i8*
  %call = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %2, i8* %1)
  %3 = load %struct._objc_class** @"\01L_OBJC_CLASS_REFERENCES_17"
  %4 = load i8** @"\01L_OBJC_SELECTOR_REFERENCES_18"
  %5 = bitcast %struct._objc_class* %3 to i8*
  %call1 = call i8* bitcast (i8* (i8*, i8*, ...)* @objc_msgSend to i8* (i8*, i8*)*)(i8* %5, i8* %4)
  %6 = load i8** %retval
  ret i8* %6
}

declare i8* @objc_msgSend(i8*, i8*, ...) nonlazybind

!llvm.module.flags = !{!0, !1, !2, !3}

!0 = metadata !{i32 1, metadata !"Objective-C Version", i32 1}
!1 = metadata !{i32 1, metadata !"Objective-C Image Info Version", i32 0}
!2 = metadata !{i32 1, metadata !"Objective-C Image Info Section", metadata !"__OBJC, __image_info,regular"}
!3 = metadata !{i32 4, metadata !"Objective-C Garbage Collection", i32 0}
