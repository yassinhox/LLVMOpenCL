/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace SPU {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    ABSDB	= 17,
    ADDXr32	= 18,
    ADDXr64	= 19,
    ADDXv2i64	= 20,
    ADDXv4i32	= 21,
    ADJCALLSTACKDOWN	= 22,
    ADJCALLSTACKUP	= 23,
    AHIr16	= 24,
    AHIvec	= 25,
    AHr16	= 26,
    AHv8i16	= 27,
    AIf32	= 28,
    AIr32	= 29,
    AIv4f32	= 30,
    AIv4i32	= 31,
    ANDBIr8	= 32,
    ANDBIv16i8	= 33,
    ANDCr128	= 34,
    ANDCr16	= 35,
    ANDCr32	= 36,
    ANDCr64	= 37,
    ANDCr8	= 38,
    ANDCv16i8	= 39,
    ANDCv16i8_conv	= 40,
    ANDCv2i64	= 41,
    ANDCv4i32	= 42,
    ANDCv8i16	= 43,
    ANDHIi8i16	= 44,
    ANDHIr16	= 45,
    ANDHIv8i16	= 46,
    ANDIi16i32	= 47,
    ANDIi8i32	= 48,
    ANDIr32	= 49,
    ANDIv4i32	= 50,
    ANDfabs32	= 51,
    ANDfabs64	= 52,
    ANDfabsvec	= 53,
    ANDi16i32	= 54,
    ANDr128	= 55,
    ANDr16	= 56,
    ANDr32	= 57,
    ANDr64	= 58,
    ANDr8	= 59,
    ANDv16i8	= 60,
    ANDv2i64	= 61,
    ANDv4i32	= 62,
    ANDv8i16	= 63,
    AVGB	= 64,
    Ar32	= 65,
    Av16i8	= 66,
    Av4i32	= 67,
    BGXvec	= 68,
    BGr32	= 69,
    BGr64	= 70,
    BGv2i64	= 71,
    BGv4i32	= 72,
    BI	= 73,
    BISL	= 74,
    BISLED_00	= 75,
    BISLED_0D	= 76,
    BISLED_E0	= 77,
    BISLED_ED	= 78,
    BR	= 79,
    BRA	= 80,
    BRASL	= 81,
    BRHNZr16	= 82,
    BRHNZv8i16	= 83,
    BRHZr16	= 84,
    BRHZv8i16	= 85,
    BRNZr32	= 86,
    BRNZv4i32	= 87,
    BRSL	= 88,
    BRZr32	= 89,
    BRZv4i32	= 90,
    CBD	= 91,
    CBX	= 92,
    CDD	= 93,
    CDDf64	= 94,
    CDX	= 95,
    CDXf64	= 96,
    CEQBIr8	= 97,
    CEQBIv16i8	= 98,
    CEQBr8	= 99,
    CEQBv16i8	= 100,
    CEQHIr16	= 101,
    CEQHIv8i16	= 102,
    CEQHr16	= 103,
    CEQHv8i16	= 104,
    CEQIr32	= 105,
    CEQIv4i32	= 106,
    CEQr32	= 107,
    CEQv4i32	= 108,
    CFSif32	= 109,
    CFSiv4f32	= 110,
    CFUif32	= 111,
    CFUiv4f32	= 112,
    CGTBIr8	= 113,
    CGTBIv16i8	= 114,
    CGTBr8	= 115,
    CGTBv16i8	= 116,
    CGTHIr16	= 117,
    CGTHIv8i16	= 118,
    CGTHr16	= 119,
    CGTHv8i16	= 120,
    CGTIf32	= 121,
    CGTIr32	= 122,
    CGTIv4f32	= 123,
    CGTIv4i32	= 124,
    CGTr32	= 125,
    CGTv4i32	= 126,
    CGr32	= 127,
    CGr64	= 128,
    CGv2i64	= 129,
    CGv4i32	= 130,
    CHD	= 131,
    CHX	= 132,
    CLGTBIr8	= 133,
    CLGTBIv16i8	= 134,
    CLGTBr8	= 135,
    CLGTBv16i8	= 136,
    CLGTHIr16	= 137,
    CLGTHIv8i16	= 138,
    CLGTHr16	= 139,
    CLGTHv8i16	= 140,
    CLGTIr32	= 141,
    CLGTIv4i32	= 142,
    CLGTr32	= 143,
    CLGTv4i32	= 144,
    CLZr32	= 145,
    CLZv4i32	= 146,
    CNTBv16i8	= 147,
    CNTBv4i32	= 148,
    CNTBv8i16	= 149,
    CSiFf32	= 150,
    CSiFv4f32	= 151,
    CUiFf32	= 152,
    CUiFv4f32	= 153,
    CWD	= 154,
    CWDf32	= 155,
    CWX	= 156,
    CWXf32	= 157,
    CellSDKa	= 158,
    CellSDKaddx	= 159,
    CellSDKah	= 160,
    CellSDKahi	= 161,
    CellSDKai	= 162,
    CellSDKand	= 163,
    CellSDKandbi	= 164,
    CellSDKandc	= 165,
    CellSDKandhi	= 166,
    CellSDKandi	= 167,
    CellSDKbg	= 168,
    CellSDKbgx	= 169,
    CellSDKceq	= 170,
    CellSDKceqb	= 171,
    CellSDKceqbi	= 172,
    CellSDKceqh	= 173,
    CellSDKceqhi	= 174,
    CellSDKceqi	= 175,
    CellSDKcg	= 176,
    CellSDKcgt	= 177,
    CellSDKcgtb	= 178,
    CellSDKcgtbi	= 179,
    CellSDKcgth	= 180,
    CellSDKcgthi	= 181,
    CellSDKcgti	= 182,
    CellSDKcgx	= 183,
    CellSDKclgt	= 184,
    CellSDKclgtb	= 185,
    CellSDKclgtbi	= 186,
    CellSDKclgth	= 187,
    CellSDKclgthi	= 188,
    CellSDKclgti	= 189,
    CellSDKdfa	= 190,
    CellSDKdfm	= 191,
    CellSDKdfma	= 192,
    CellSDKdfms	= 193,
    CellSDKdfnma	= 194,
    CellSDKdfnms	= 195,
    CellSDKdfs	= 196,
    CellSDKfa	= 197,
    CellSDKfceq	= 198,
    CellSDKfcgt	= 199,
    CellSDKfcmeq	= 200,
    CellSDKfcmgt	= 201,
    CellSDKfm	= 202,
    CellSDKfma	= 203,
    CellSDKfms	= 204,
    CellSDKfnms	= 205,
    CellSDKfs	= 206,
    CellSDKmpy	= 207,
    CellSDKmpya	= 208,
    CellSDKmpyh	= 209,
    CellSDKmpyhh	= 210,
    CellSDKmpyhha	= 211,
    CellSDKmpyhhau	= 212,
    CellSDKmpyhhu	= 213,
    CellSDKmpyi	= 214,
    CellSDKmpys	= 215,
    CellSDKmpyu	= 216,
    CellSDKmpyui	= 217,
    CellSDKnand	= 218,
    CellSDKnor	= 219,
    CellSDKor	= 220,
    CellSDKorbi	= 221,
    CellSDKorc	= 222,
    CellSDKorhi	= 223,
    CellSDKori	= 224,
    CellSDKsf	= 225,
    CellSDKsfh	= 226,
    CellSDKsfhi	= 227,
    CellSDKsfi	= 228,
    CellSDKsfx	= 229,
    CellSDKxor	= 230,
    CellSDKxorbi	= 231,
    CellSDKxorhi	= 232,
    CellSDKxori	= 233,
    DFNMSf64	= 234,
    DFNMSv2f64	= 235,
    ENOP	= 236,
    EQVr128	= 237,
    EQVr128_1	= 238,
    EQVr128_2	= 239,
    EQVr128_3	= 240,
    EQVr16	= 241,
    EQVr16_1	= 242,
    EQVr16_2	= 243,
    EQVr16_3	= 244,
    EQVr32	= 245,
    EQVr32_1	= 246,
    EQVr32_2	= 247,
    EQVr32_3	= 248,
    EQVr64	= 249,
    EQVr64_1	= 250,
    EQVr64_2	= 251,
    EQVr64_3	= 252,
    EQVr8	= 253,
    EQVr8_1	= 254,
    EQVr8_2	= 255,
    EQVr8_3	= 256,
    EQVv16i8	= 257,
    EQVv16i8_1	= 258,
    EQVv16i8_2	= 259,
    EQVv16i8_3	= 260,
    EQVv2i64	= 261,
    EQVv2i64_1	= 262,
    EQVv2i64_2	= 263,
    EQVv2i64_3	= 264,
    EQVv4i32	= 265,
    EQVv4i32_1	= 266,
    EQVv4i32_2	= 267,
    EQVv4i32_3	= 268,
    EQVv8i16	= 269,
    EQVv8i16_1	= 270,
    EQVv8i16_2	= 271,
    EQVv8i16_3	= 272,
    FAf32	= 273,
    FAf64	= 274,
    FAv2f64	= 275,
    FAv4f32	= 276,
    FCEQf32	= 277,
    FCGTf32	= 278,
    FCMEQf32	= 279,
    FCMGTf32	= 280,
    FESDf32	= 281,
    FESDvec	= 282,
    FIf32	= 283,
    FIv4f32	= 284,
    FMAf32	= 285,
    FMAf64	= 286,
    FMAv2f64	= 287,
    FMAv4f32	= 288,
    FMSf32	= 289,
    FMSf64	= 290,
    FMSv2f64	= 291,
    FMSv4f32	= 292,
    FMf32	= 293,
    FMf64	= 294,
    FMv2f64	= 295,
    FMv4f32	= 296,
    FNMAf64	= 297,
    FNMAv2f64	= 298,
    FNMSf32	= 299,
    FNMSv4f32	= 300,
    FRDSf64	= 301,
    FRESTf32	= 302,
    FRESTv4f32	= 303,
    FSCRRf32	= 304,
    FSCRWf32	= 305,
    FSM64r16	= 306,
    FSM64r32	= 307,
    FSMBIv16i8	= 308,
    FSMBIv2i64	= 309,
    FSMBIv4i32	= 310,
    FSMBIv8i16	= 311,
    FSMBv16i8	= 312,
    FSMBv16i8_r16	= 313,
    FSMHv8i16	= 314,
    FSMHv8i16_r16	= 315,
    FSMr16	= 316,
    FSMr32	= 317,
    FSMv4i32	= 318,
    FSf32	= 319,
    FSf64	= 320,
    FSv2f64	= 321,
    FSv4f32	= 322,
    GBBv16i8	= 323,
    GBBv16i8_r16	= 324,
    GBBv16i8_r32	= 325,
    GBHv8i16	= 326,
    GBHv8i16_r16	= 327,
    GBHv8i16_r32	= 328,
    GBv4i32	= 329,
    GBv4i32_r16	= 330,
    GBv4i32_r32	= 331,
    HBRA	= 332,
    HBR_LABEL	= 333,
    HEQIr32	= 334,
    HEQr32	= 335,
    HGTIr32	= 336,
    HGTr32	= 337,
    HLGTIr32	= 338,
    HLGTr32	= 339,
    ILAf32	= 340,
    ILAf64	= 341,
    ILAhi	= 342,
    ILAlo	= 343,
    ILAlsa	= 344,
    ILAr32	= 345,
    ILAr64	= 346,
    ILAv2i64	= 347,
    ILAv4i32	= 348,
    ILHUf32	= 349,
    ILHUhi	= 350,
    ILHUr32	= 351,
    ILHUr64	= 352,
    ILHUv2i64	= 353,
    ILHUv4i32	= 354,
    ILHr16	= 355,
    ILHr8	= 356,
    ILHv8i16	= 357,
    ILf32	= 358,
    ILf64	= 359,
    ILr32	= 360,
    ILr64	= 361,
    ILv2i64	= 362,
    ILv4i32	= 363,
    IOHLf32	= 364,
    IOHLlo	= 365,
    IOHLr32	= 366,
    IOHLv2i64	= 367,
    IOHLv4i32	= 368,
    LNOP	= 369,
    LQAf32	= 370,
    LQAf64	= 371,
    LQAr128	= 372,
    LQAr16	= 373,
    LQAr32	= 374,
    LQAr64	= 375,
    LQAr8	= 376,
    LQAv16i8	= 377,
    LQAv2f64	= 378,
    LQAv2i64	= 379,
    LQAv4f32	= 380,
    LQAv4i32	= 381,
    LQAv8i16	= 382,
    LQDf32	= 383,
    LQDf64	= 384,
    LQDr128	= 385,
    LQDr16	= 386,
    LQDr32	= 387,
    LQDr64	= 388,
    LQDr8	= 389,
    LQDv16i8	= 390,
    LQDv2f64	= 391,
    LQDv2i64	= 392,
    LQDv4f32	= 393,
    LQDv4i32	= 394,
    LQDv8i16	= 395,
    LQXf32	= 396,
    LQXf64	= 397,
    LQXr128	= 398,
    LQXr16	= 399,
    LQXr32	= 400,
    LQXr64	= 401,
    LQXr8	= 402,
    LQXv16i8	= 403,
    LQXv2f64	= 404,
    LQXv2i64	= 405,
    LQXv4f32	= 406,
    LQXv4i32	= 407,
    LQXv8i16	= 408,
    LRf32	= 409,
    LRf64	= 410,
    LRr128	= 411,
    LRr16	= 412,
    LRr32	= 413,
    LRr64	= 414,
    LRr8	= 415,
    LRv16i8	= 416,
    LRv2f64	= 417,
    LRv2i64	= 418,
    LRv4f32	= 419,
    LRv4i32	= 420,
    LRv8i16	= 421,
    MPYAr32	= 422,
    MPYAr32_sext	= 423,
    MPYAr32_sextinreg	= 424,
    MPYAv4i32	= 425,
    MPYHHAUr32	= 426,
    MPYHHAUvec	= 427,
    MPYHHAr32	= 428,
    MPYHHAvec	= 429,
    MPYHHUr32	= 430,
    MPYHHUv4i32	= 431,
    MPYHHr32	= 432,
    MPYHHv8i16	= 433,
    MPYHr32	= 434,
    MPYHv4i32	= 435,
    MPYIr16	= 436,
    MPYIvec	= 437,
    MPYSr16	= 438,
    MPYSv4i32	= 439,
    MPYUIr16	= 440,
    MPYUIvec	= 441,
    MPYUr16	= 442,
    MPYUr32	= 443,
    MPYUv4i32	= 444,
    MPYr16	= 445,
    MPYv8i16	= 446,
    NANDr128	= 447,
    NANDr16	= 448,
    NANDr32	= 449,
    NANDr64	= 450,
    NANDr8	= 451,
    NANDv16i8	= 452,
    NANDv2i64	= 453,
    NANDv4i32	= 454,
    NANDv8i16	= 455,
    NORr128	= 456,
    NORr16	= 457,
    NORr32	= 458,
    NORr64	= 459,
    NORr8	= 460,
    NORv16i8	= 461,
    NORv2i64	= 462,
    NORv4i32	= 463,
    NORv8i16	= 464,
    ORBIr8	= 465,
    ORBIv16i8	= 466,
    ORCr128	= 467,
    ORCr16	= 468,
    ORCr32	= 469,
    ORCr64	= 470,
    ORCr8	= 471,
    ORCv16i8	= 472,
    ORCv2i64	= 473,
    ORCv4i32	= 474,
    ORCv8i16	= 475,
    ORHIi8i16	= 476,
    ORHIr16	= 477,
    ORHIv8i16	= 478,
    ORIi16i32	= 479,
    ORIi8i32	= 480,
    ORIr32	= 481,
    ORIv4i32	= 482,
    ORXv4i32	= 483,
    ORf32	= 484,
    ORf64	= 485,
    ORr128	= 486,
    ORr16	= 487,
    ORr32	= 488,
    ORr64	= 489,
    ORr8	= 490,
    ORv16i8	= 491,
    ORv2f64	= 492,
    ORv2i64	= 493,
    ORv4f32	= 494,
    ORv4i32	= 495,
    ORv8i16	= 496,
    RET	= 497,
    ROTHIr16	= 498,
    ROTHIr16_r32	= 499,
    ROTHIv8i16	= 500,
    ROTHMIr16	= 501,
    ROTHMIv8i16	= 502,
    ROTHMr16	= 503,
    ROTHMv8i16	= 504,
    ROTHr16	= 505,
    ROTHr16_r32	= 506,
    ROTHv8i16	= 507,
    ROTIr32	= 508,
    ROTIr32_i16	= 509,
    ROTIr32_i8	= 510,
    ROTIv4i32	= 511,
    ROTIv4i32_i16	= 512,
    ROTIv4i32_i8	= 513,
    ROTMAHIr16	= 514,
    ROTMAHIv8i16	= 515,
    ROTMAHr16	= 516,
    ROTMAHv8i16	= 517,
    ROTMAIr32_i32	= 518,
    ROTMAIr64_i32	= 519,
    ROTMAIv2i64_i32	= 520,
    ROTMAIv4i32_i32	= 521,
    ROTMAr32	= 522,
    ROTMAv4i32	= 523,
    ROTMIr32	= 524,
    ROTMIv4i32	= 525,
    ROTMr32	= 526,
    ROTMv4i32	= 527,
    ROTQBIIr128	= 528,
    ROTQBIIr64	= 529,
    ROTQBIIv16i8	= 530,
    ROTQBIIv2i64	= 531,
    ROTQBIIv4i32	= 532,
    ROTQBIIv8i16	= 533,
    ROTQBIr128	= 534,
    ROTQBIr64	= 535,
    ROTQBIv16i8	= 536,
    ROTQBIv2i64	= 537,
    ROTQBIv4i32	= 538,
    ROTQBIv8i16	= 539,
    ROTQBYBIv16i8_r32	= 540,
    ROTQBYBIv2i64_r32	= 541,
    ROTQBYBIv4i32_r32	= 542,
    ROTQBYBIv8i16_r32	= 543,
    ROTQBYIi128	= 544,
    ROTQBYIv16i8	= 545,
    ROTQBYIv2i64	= 546,
    ROTQBYIv4f32	= 547,
    ROTQBYIv4i32	= 548,
    ROTQBYIv8i16	= 549,
    ROTQBYIvfi64	= 550,
    ROTQBYi128	= 551,
    ROTQBYv16i8	= 552,
    ROTQBYv2f64	= 553,
    ROTQBYv2i64	= 554,
    ROTQBYv4f32	= 555,
    ROTQBYv4i32	= 556,
    ROTQBYv8i16	= 557,
    ROTQMBIIr128	= 558,
    ROTQMBIIr64	= 559,
    ROTQMBIIv16i8	= 560,
    ROTQMBIIv2i64	= 561,
    ROTQMBIIv4i32	= 562,
    ROTQMBIIv8i16	= 563,
    ROTQMBIr128	= 564,
    ROTQMBIr64	= 565,
    ROTQMBIv16i8	= 566,
    ROTQMBIv2i64	= 567,
    ROTQMBIv4i32	= 568,
    ROTQMBIv8i16	= 569,
    ROTQMBYBIr128	= 570,
    ROTQMBYBIv16i8	= 571,
    ROTQMBYBIv2i64	= 572,
    ROTQMBYBIv4i32	= 573,
    ROTQMBYBIv8i16	= 574,
    ROTQMBYIr128	= 575,
    ROTQMBYIr128_zext_r16	= 576,
    ROTQMBYIr128_zext_r32	= 577,
    ROTQMBYIr128_zext_r64	= 578,
    ROTQMBYIr128_zext_r8	= 579,
    ROTQMBYIr64	= 580,
    ROTQMBYIv16i8	= 581,
    ROTQMBYIv2i64	= 582,
    ROTQMBYIv4i32	= 583,
    ROTQMBYIv8i16	= 584,
    ROTQMBYr128	= 585,
    ROTQMBYr64	= 586,
    ROTQMBYv16i8	= 587,
    ROTQMBYv2i64	= 588,
    ROTQMBYv4i32	= 589,
    ROTQMBYv8i16	= 590,
    ROTr32	= 591,
    ROTr32_r16_anyext	= 592,
    ROTr32_r8_anyext	= 593,
    ROTv4i32	= 594,
    SELBf32_cond	= 595,
    SELBf64_cond	= 596,
    SELBr128	= 597,
    SELBr16	= 598,
    SELBr16_cond	= 599,
    SELBr32	= 600,
    SELBr32_cond	= 601,
    SELBr64	= 602,
    SELBr64_cond	= 603,
    SELBr8	= 604,
    SELBr8_cond	= 605,
    SELBv16i8	= 606,
    SELBv16i8_cond	= 607,
    SELBv16i8_vcond	= 608,
    SELBv2i64	= 609,
    SELBv2i64_cond	= 610,
    SELBv2i64_vcond	= 611,
    SELBv4f32_cond	= 612,
    SELBv4i32	= 613,
    SELBv4i32_cond	= 614,
    SELBv4i32_vcond	= 615,
    SELBv8i16	= 616,
    SELBv8i16_cond	= 617,
    SELBv8i16_vcond	= 618,
    SFHIr16	= 619,
    SFHIvec	= 620,
    SFHr16	= 621,
    SFHvec	= 622,
    SFIr32	= 623,
    SFIvec	= 624,
    SFXr32	= 625,
    SFXr64	= 626,
    SFXv2i64	= 627,
    SFXv4i32	= 628,
    SFr32	= 629,
    SFvec	= 630,
    SHLHIr16	= 631,
    SHLHIv8i16	= 632,
    SHLHr16	= 633,
    SHLHr16_r32	= 634,
    SHLHv8i16	= 635,
    SHLIr32	= 636,
    SHLIv4i32	= 637,
    SHLQBIIv16i8	= 638,
    SHLQBIIv2f64	= 639,
    SHLQBIIv2i64	= 640,
    SHLQBIIv4f32	= 641,
    SHLQBIIv4i32	= 642,
    SHLQBIIv8i16	= 643,
    SHLQBIr128	= 644,
    SHLQBIv16i8	= 645,
    SHLQBIv2f64	= 646,
    SHLQBIv2i64	= 647,
    SHLQBIv4f32	= 648,
    SHLQBIv4i32	= 649,
    SHLQBIv8i16	= 650,
    SHLQBYBIr128	= 651,
    SHLQBYBIv16i8	= 652,
    SHLQBYBIv2f64	= 653,
    SHLQBYBIv2i64	= 654,
    SHLQBYBIv4f32	= 655,
    SHLQBYBIv4i32	= 656,
    SHLQBYBIv8i16	= 657,
    SHLQBYIr128	= 658,
    SHLQBYIv16i8	= 659,
    SHLQBYIv2f64	= 660,
    SHLQBYIv2i64	= 661,
    SHLQBYIv4f32	= 662,
    SHLQBYIv4i32	= 663,
    SHLQBYIv8i16	= 664,
    SHLQBYr128	= 665,
    SHLQBYv16i8	= 666,
    SHLQBYv2f64	= 667,
    SHLQBYv2i64	= 668,
    SHLQBYv4f32	= 669,
    SHLQBYv4i32	= 670,
    SHLQBYv8i16	= 671,
    SHLr32	= 672,
    SHLv4i32	= 673,
    SHUFBgprc	= 674,
    SHUFBv16i8	= 675,
    SHUFBv16i8_m32	= 676,
    SHUFBv2f64	= 677,
    SHUFBv2f64_m32	= 678,
    SHUFBv2i64	= 679,
    SHUFBv2i64_m32	= 680,
    SHUFBv4f32	= 681,
    SHUFBv4f32_m32	= 682,
    SHUFBv4i32	= 683,
    SHUFBv4i32_m32	= 684,
    SHUFBv8i16	= 685,
    SHUFBv8i16_m32	= 686,
    STQAf32	= 687,
    STQAf64	= 688,
    STQAr128	= 689,
    STQAr16	= 690,
    STQAr32	= 691,
    STQAr64	= 692,
    STQAr8	= 693,
    STQAv16i8	= 694,
    STQAv2f64	= 695,
    STQAv2i64	= 696,
    STQAv4f32	= 697,
    STQAv4i32	= 698,
    STQAv8i16	= 699,
    STQDf32	= 700,
    STQDf64	= 701,
    STQDr128	= 702,
    STQDr16	= 703,
    STQDr32	= 704,
    STQDr64	= 705,
    STQDr8	= 706,
    STQDv16i8	= 707,
    STQDv2f64	= 708,
    STQDv2i64	= 709,
    STQDv4f32	= 710,
    STQDv4i32	= 711,
    STQDv8i16	= 712,
    STQXf32	= 713,
    STQXf64	= 714,
    STQXr128	= 715,
    STQXr16	= 716,
    STQXr32	= 717,
    STQXr64	= 718,
    STQXr8	= 719,
    STQXv16i8	= 720,
    STQXv2f64	= 721,
    STQXv2i64	= 722,
    STQXv4f32	= 723,
    STQXv4i32	= 724,
    STQXv8i16	= 725,
    SUMB	= 726,
    XORBIr8	= 727,
    XORBIv16i8	= 728,
    XORHIr16	= 729,
    XORHIv8i16	= 730,
    XORIr32	= 731,
    XORIv4i32	= 732,
    XORfneg32	= 733,
    XORfneg64	= 734,
    XORfnegvec	= 735,
    XORr128	= 736,
    XORr16	= 737,
    XORr32	= 738,
    XORr64	= 739,
    XORr8	= 740,
    XORv16i8	= 741,
    XORv2i64	= 742,
    XORv4i32	= 743,
    XORv8i16	= 744,
    XSBHr16	= 745,
    XSBHr32	= 746,
    XSBHr64	= 747,
    XSBHr8	= 748,
    XSBHv16i8	= 749,
    XSHWr16	= 750,
    XSHWr32	= 751,
    XSHWr64	= 752,
    XSHWv4i32	= 753,
    XSWDr64	= 754,
    XSWDr64_inreg	= 755,
    XSWDv2i64	= 756,
    INSTRUCTION_LIST_END = 757
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Descriptors                                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { SPU::R1, 0 };
static const uint16_t ImplicitList2[] = { SPU::R0, 0 };
static const uint16_t ImplicitList3[] = { SPU::R0, SPU::R1, SPU::R2, SPU::R3, SPU::R4, SPU::R5, SPU::R6, SPU::R7, SPU::R8, SPU::R9, SPU::R10, SPU::R11, SPU::R12, SPU::R13, SPU::R14, SPU::R15, SPU::R16, SPU::R17, SPU::R18, SPU::R19, SPU::R20, SPU::R21, SPU::R22, SPU::R23, SPU::R24, SPU::R25, SPU::R26, SPU::R27, SPU::R28, SPU::R29, SPU::R30, SPU::R31, SPU::R32, SPU::R33, SPU::R34, SPU::R35, SPU::R36, SPU::R37, SPU::R38, SPU::R39, SPU::R40, SPU::R41, SPU::R42, SPU::R43, SPU::R44, SPU::R45, SPU::R46, SPU::R47, SPU::R48, SPU::R49, SPU::R50, SPU::R51, SPU::R52, SPU::R53, SPU::R54, SPU::R55, SPU::R56, SPU::R57, SPU::R58, SPU::R59, SPU::R60, SPU::R61, SPU::R62, SPU::R63, SPU::R64, SPU::R65, SPU::R66, SPU::R67, SPU::R68, SPU::R69, SPU::R70, SPU::R71, SPU::R72, SPU::R73, SPU::R74, SPU::R75, SPU::R76, SPU::R77, SPU::R78, SPU::R79, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo10[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo11[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo12[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo43[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64FPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::GPRCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::VECREGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R8CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R16CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { SPU::R64CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { SPU::R32CRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc SPUInsts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = LIFETIME_END
  { 17,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #17 = ABSDB
  { 18,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #18 = ADDXr32
  { 19,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #19 = ADDXr64
  { 20,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #20 = ADDXv2i64
  { 21,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #21 = ADDXv4i32
  { 22,	1,	0,	0,	0,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo5 },  // Inst #22 = ADJCALLSTACKDOWN
  { 23,	1,	0,	0,	0,	0, 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo5 },  // Inst #23 = ADJCALLSTACKUP
  { 24,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #24 = AHIr16
  { 25,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #25 = AHIvec
  { 26,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #26 = AHr16
  { 27,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #27 = AHv8i16
  { 28,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo15 },  // Inst #28 = AIf32
  { 29,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #29 = AIr32
  { 30,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #30 = AIv4f32
  { 31,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #31 = AIv4i32
  { 32,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #32 = ANDBIr8
  { 33,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #33 = ANDBIv16i8
  { 34,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #34 = ANDCr128
  { 35,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #35 = ANDCr16
  { 36,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #36 = ANDCr32
  { 37,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #37 = ANDCr64
  { 38,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #38 = ANDCr8
  { 39,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #39 = ANDCv16i8
  { 40,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #40 = ANDCv16i8_conv
  { 41,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #41 = ANDCv2i64
  { 42,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #42 = ANDCv4i32
  { 43,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #43 = ANDCv8i16
  { 44,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #44 = ANDHIi8i16
  { 45,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #45 = ANDHIr16
  { 46,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #46 = ANDHIv8i16
  { 47,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #47 = ANDIi16i32
  { 48,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #48 = ANDIi8i32
  { 49,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #49 = ANDIr32
  { 50,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #50 = ANDIv4i32
  { 51,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #51 = ANDfabs32
  { 52,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo26 },  // Inst #52 = ANDfabs64
  { 53,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #53 = ANDfabsvec
  { 54,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo27 },  // Inst #54 = ANDi16i32
  { 55,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #55 = ANDr128
  { 56,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #56 = ANDr16
  { 57,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #57 = ANDr32
  { 58,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #58 = ANDr64
  { 59,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #59 = ANDr8
  { 60,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #60 = ANDv16i8
  { 61,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #61 = ANDv2i64
  { 62,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #62 = ANDv4i32
  { 63,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #63 = ANDv8i16
  { 64,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #64 = AVGB
  { 65,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #65 = Ar32
  { 66,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #66 = Av16i8
  { 67,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #67 = Av4i32
  { 68,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #68 = BGXvec
  { 69,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #69 = BGr32
  { 70,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #70 = BGr64
  { 71,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #71 = BGv2i64
  { 72,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #72 = BGv4i32
  { 73,	1,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #73 = BI
  { 74,	1,	0,	2,	0,	0|(1<<MCID::Call), 0x0ULL, ImplicitList2, ImplicitList3, OperandInfo28 },  // Inst #74 = BISL
  { 75,	1,	0,	2,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, ImplicitList3, OperandInfo29 },  // Inst #75 = BISLED_00
  { 76,	1,	0,	2,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, ImplicitList3, OperandInfo29 },  // Inst #76 = BISLED_0D
  { 77,	1,	0,	2,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, ImplicitList3, OperandInfo29 },  // Inst #77 = BISLED_E0
  { 78,	1,	0,	2,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, ImplicitList3, OperandInfo29 },  // Inst #78 = BISLED_ED
  { 79,	1,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #79 = BR
  { 80,	1,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #80 = BRA
  { 81,	1,	0,	2,	0,	0|(1<<MCID::Call), 0x0ULL, ImplicitList2, ImplicitList3, OperandInfo5 },  // Inst #81 = BRASL
  { 82,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #82 = BRHNZr16
  { 83,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #83 = BRHNZv8i16
  { 84,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #84 = BRHZr16
  { 85,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #85 = BRHZv8i16
  { 86,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #86 = BRNZr32
  { 87,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #87 = BRNZv4i32
  { 88,	1,	0,	2,	0,	0|(1<<MCID::Call), 0x0ULL, ImplicitList2, ImplicitList3, OperandInfo5 },  // Inst #88 = BRSL
  { 89,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #89 = BRZr32
  { 90,	2,	0,	2,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #90 = BRZv4i32
  { 91,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #91 = CBD
  { 92,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #92 = CBX
  { 93,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #93 = CDD
  { 94,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #94 = CDDf64
  { 95,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #95 = CDX
  { 96,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #96 = CDXf64
  { 97,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #97 = CEQBIr8
  { 98,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #98 = CEQBIv16i8
  { 99,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #99 = CEQBr8
  { 100,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #100 = CEQBv16i8
  { 101,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #101 = CEQHIr16
  { 102,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #102 = CEQHIv8i16
  { 103,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #103 = CEQHr16
  { 104,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #104 = CEQHv8i16
  { 105,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #105 = CEQIr32
  { 106,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #106 = CEQIv4i32
  { 107,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #107 = CEQr32
  { 108,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #108 = CEQv4i32
  { 109,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo35 },  // Inst #109 = CFSif32
  { 110,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #110 = CFSiv4f32
  { 111,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo35 },  // Inst #111 = CFUif32
  { 112,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #112 = CFUiv4f32
  { 113,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #113 = CGTBIr8
  { 114,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #114 = CGTBIv16i8
  { 115,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #115 = CGTBr8
  { 116,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #116 = CGTBv16i8
  { 117,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #117 = CGTHIr16
  { 118,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #118 = CGTHIv8i16
  { 119,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #119 = CGTHr16
  { 120,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #120 = CGTHv8i16
  { 121,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo37 },  // Inst #121 = CGTIf32
  { 122,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #122 = CGTIr32
  { 123,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #123 = CGTIv4f32
  { 124,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #124 = CGTIv4i32
  { 125,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #125 = CGTr32
  { 126,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #126 = CGTv4i32
  { 127,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #127 = CGr32
  { 128,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #128 = CGr64
  { 129,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #129 = CGv2i64
  { 130,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #130 = CGv4i32
  { 131,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #131 = CHD
  { 132,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #132 = CHX
  { 133,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #133 = CLGTBIr8
  { 134,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #134 = CLGTBIv16i8
  { 135,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #135 = CLGTBr8
  { 136,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #136 = CLGTBv16i8
  { 137,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #137 = CLGTHIr16
  { 138,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #138 = CLGTHIv8i16
  { 139,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #139 = CLGTHr16
  { 140,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #140 = CLGTHv8i16
  { 141,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #141 = CLGTIr32
  { 142,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #142 = CLGTIv4i32
  { 143,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #143 = CLGTr32
  { 144,	3,	1,	3,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #144 = CLGTv4i32
  { 145,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #145 = CLZr32
  { 146,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #146 = CLZv4i32
  { 147,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #147 = CNTBv16i8
  { 148,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #148 = CNTBv4i32
  { 149,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #149 = CNTBv8i16
  { 150,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #150 = CSiFf32
  { 151,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #151 = CSiFv4f32
  { 152,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo39 },  // Inst #152 = CUiFf32
  { 153,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #153 = CUiFv4f32
  { 154,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #154 = CWD
  { 155,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #155 = CWDf32
  { 156,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #156 = CWX
  { 157,	3,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #157 = CWXf32
  { 158,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #158 = CellSDKa
  { 159,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #159 = CellSDKaddx
  { 160,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #160 = CellSDKah
  { 161,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #161 = CellSDKahi
  { 162,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #162 = CellSDKai
  { 163,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #163 = CellSDKand
  { 164,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #164 = CellSDKandbi
  { 165,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #165 = CellSDKandc
  { 166,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #166 = CellSDKandhi
  { 167,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #167 = CellSDKandi
  { 168,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #168 = CellSDKbg
  { 169,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #169 = CellSDKbgx
  { 170,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #170 = CellSDKceq
  { 171,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #171 = CellSDKceqb
  { 172,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #172 = CellSDKceqbi
  { 173,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #173 = CellSDKceqh
  { 174,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #174 = CellSDKceqhi
  { 175,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #175 = CellSDKceqi
  { 176,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #176 = CellSDKcg
  { 177,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #177 = CellSDKcgt
  { 178,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #178 = CellSDKcgtb
  { 179,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #179 = CellSDKcgtbi
  { 180,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #180 = CellSDKcgth
  { 181,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #181 = CellSDKcgthi
  { 182,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #182 = CellSDKcgti
  { 183,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #183 = CellSDKcgx
  { 184,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #184 = CellSDKclgt
  { 185,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #185 = CellSDKclgtb
  { 186,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #186 = CellSDKclgtbi
  { 187,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #187 = CellSDKclgth
  { 188,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #188 = CellSDKclgthi
  { 189,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #189 = CellSDKclgti
  { 190,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #190 = CellSDKdfa
  { 191,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #191 = CellSDKdfm
  { 192,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #192 = CellSDKdfma
  { 193,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #193 = CellSDKdfms
  { 194,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #194 = CellSDKdfnma
  { 195,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #195 = CellSDKdfnms
  { 196,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #196 = CellSDKdfs
  { 197,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #197 = CellSDKfa
  { 198,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #198 = CellSDKfceq
  { 199,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #199 = CellSDKfcgt
  { 200,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #200 = CellSDKfcmeq
  { 201,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #201 = CellSDKfcmgt
  { 202,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #202 = CellSDKfm
  { 203,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #203 = CellSDKfma
  { 204,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #204 = CellSDKfms
  { 205,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #205 = CellSDKfnms
  { 206,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #206 = CellSDKfs
  { 207,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #207 = CellSDKmpy
  { 208,	4,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #208 = CellSDKmpya
  { 209,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #209 = CellSDKmpyh
  { 210,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #210 = CellSDKmpyhh
  { 211,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #211 = CellSDKmpyhha
  { 212,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #212 = CellSDKmpyhhau
  { 213,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #213 = CellSDKmpyhhu
  { 214,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #214 = CellSDKmpyi
  { 215,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #215 = CellSDKmpys
  { 216,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #216 = CellSDKmpyu
  { 217,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #217 = CellSDKmpyui
  { 218,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #218 = CellSDKnand
  { 219,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #219 = CellSDKnor
  { 220,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #220 = CellSDKor
  { 221,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #221 = CellSDKorbi
  { 222,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #222 = CellSDKorc
  { 223,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #223 = CellSDKorhi
  { 224,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #224 = CellSDKori
  { 225,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #225 = CellSDKsf
  { 226,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #226 = CellSDKsfh
  { 227,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #227 = CellSDKsfhi
  { 228,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #228 = CellSDKsfi
  { 229,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #229 = CellSDKsfx
  { 230,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #230 = CellSDKxor
  { 231,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #231 = CellSDKxorbi
  { 232,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #232 = CellSDKxorhi
  { 233,	3,	1,	2,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #233 = CellSDKxori
  { 234,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo42 },  // Inst #234 = DFNMSf64
  { 235,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #235 = DFNMSv2f64
  { 236,	0,	0,	5,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #236 = ENOP
  { 237,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #237 = EQVr128
  { 238,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #238 = EQVr128_1
  { 239,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #239 = EQVr128_2
  { 240,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #240 = EQVr128_3
  { 241,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #241 = EQVr16
  { 242,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #242 = EQVr16_1
  { 243,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #243 = EQVr16_2
  { 244,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #244 = EQVr16_3
  { 245,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #245 = EQVr32
  { 246,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #246 = EQVr32_1
  { 247,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #247 = EQVr32_2
  { 248,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #248 = EQVr32_3
  { 249,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #249 = EQVr64
  { 250,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #250 = EQVr64_1
  { 251,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #251 = EQVr64_2
  { 252,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #252 = EQVr64_3
  { 253,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #253 = EQVr8
  { 254,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #254 = EQVr8_1
  { 255,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #255 = EQVr8_2
  { 256,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #256 = EQVr8_3
  { 257,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #257 = EQVv16i8
  { 258,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #258 = EQVv16i8_1
  { 259,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #259 = EQVv16i8_2
  { 260,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #260 = EQVv16i8_3
  { 261,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #261 = EQVv2i64
  { 262,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #262 = EQVv2i64_1
  { 263,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #263 = EQVv2i64_2
  { 264,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #264 = EQVv2i64_3
  { 265,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #265 = EQVv4i32
  { 266,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #266 = EQVv4i32_1
  { 267,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #267 = EQVv4i32_2
  { 268,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #268 = EQVv4i32_3
  { 269,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #269 = EQVv8i16
  { 270,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #270 = EQVv8i16_1
  { 271,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #271 = EQVv8i16_2
  { 272,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #272 = EQVv8i16_3
  { 273,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo43 },  // Inst #273 = FAf32
  { 274,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo44 },  // Inst #274 = FAf64
  { 275,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #275 = FAv2f64
  { 276,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #276 = FAv4f32
  { 277,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo45 },  // Inst #277 = FCEQf32
  { 278,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo45 },  // Inst #278 = FCGTf32
  { 279,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo45 },  // Inst #279 = FCMEQf32
  { 280,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo45 },  // Inst #280 = FCMGTf32
  { 281,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo46 },  // Inst #281 = FESDf32
  { 282,	2,	1,	14,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #282 = FESDvec
  { 283,	3,	1,	14,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo43 },  // Inst #283 = FIf32
  { 284,	3,	1,	14,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #284 = FIv4f32
  { 285,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo47 },  // Inst #285 = FMAf32
  { 286,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo42 },  // Inst #286 = FMAf64
  { 287,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #287 = FMAv2f64
  { 288,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #288 = FMAv4f32
  { 289,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo47 },  // Inst #289 = FMSf32
  { 290,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo42 },  // Inst #290 = FMSf64
  { 291,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #291 = FMSv2f64
  { 292,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #292 = FMSv4f32
  { 293,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo43 },  // Inst #293 = FMf32
  { 294,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo44 },  // Inst #294 = FMf64
  { 295,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #295 = FMv2f64
  { 296,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #296 = FMv4f32
  { 297,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo42 },  // Inst #297 = FNMAf64
  { 298,	4,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #298 = FNMAv2f64
  { 299,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo47 },  // Inst #299 = FNMSf32
  { 300,	4,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #300 = FNMSv4f32
  { 301,	2,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo48 },  // Inst #301 = FRDSf64
  { 302,	2,	1,	14,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo49 },  // Inst #302 = FRESTf32
  { 303,	2,	1,	14,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #303 = FRESTv4f32
  { 304,	1,	1,	14,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo50 },  // Inst #304 = FSCRRf32
  { 305,	2,	1,	14,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo49 },  // Inst #305 = FSCRWf32
  { 306,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo51 },  // Inst #306 = FSM64r16
  { 307,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo52 },  // Inst #307 = FSM64r32
  { 308,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #308 = FSMBIv16i8
  { 309,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #309 = FSMBIv2i64
  { 310,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #310 = FSMBIv4i32
  { 311,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #311 = FSMBIv8i16
  { 312,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #312 = FSMBv16i8
  { 313,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo51 },  // Inst #313 = FSMBv16i8_r16
  { 314,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #314 = FSMHv8i16
  { 315,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo51 },  // Inst #315 = FSMHv8i16_r16
  { 316,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo51 },  // Inst #316 = FSMr16
  { 317,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo52 },  // Inst #317 = FSMr32
  { 318,	2,	1,	15,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #318 = FSMv4i32
  { 319,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo43 },  // Inst #319 = FSf32
  { 320,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo44 },  // Inst #320 = FSf64
  { 321,	3,	1,	4,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #321 = FSv2f64
  { 322,	3,	1,	14,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #322 = FSv4f32
  { 323,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #323 = GBBv16i8
  { 324,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #324 = GBBv16i8_r16
  { 325,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo54 },  // Inst #325 = GBBv16i8_r32
  { 326,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #326 = GBHv8i16
  { 327,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #327 = GBHv8i16_r16
  { 328,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo54 },  // Inst #328 = GBHv8i16_r32
  { 329,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #329 = GBv4i32
  { 330,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo53 },  // Inst #330 = GBv4i32_r16
  { 331,	2,	1,	6,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo54 },  // Inst #331 = GBv4i32_r32
  { 332,	2,	0,	1,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #332 = HBRA
  { 333,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, ImplicitList1, OperandInfo5 },  // Inst #333 = HBR_LABEL
  { 334,	2,	0,	2,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #334 = HEQIr32
  { 335,	2,	0,	2,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #335 = HEQr32
  { 336,	2,	0,	2,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #336 = HGTIr32
  { 337,	2,	0,	2,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #337 = HGTr32
  { 338,	2,	0,	2,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #338 = HLGTIr32
  { 339,	2,	0,	2,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #339 = HLGTr32
  { 340,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo55 },  // Inst #340 = ILAf32
  { 341,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo56 },  // Inst #341 = ILAf64
  { 342,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #342 = ILAhi
  { 343,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #343 = ILAlo
  { 344,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #344 = ILAlsa
  { 345,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #345 = ILAr32
  { 346,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo57 },  // Inst #346 = ILAr64
  { 347,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #347 = ILAv2i64
  { 348,	2,	1,	10,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #348 = ILAv4i32
  { 349,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo55 },  // Inst #349 = ILHUf32
  { 350,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #350 = ILHUhi
  { 351,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #351 = ILHUr32
  { 352,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo57 },  // Inst #352 = ILHUr64
  { 353,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #353 = ILHUv2i64
  { 354,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #354 = ILHUv4i32
  { 355,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo30 },  // Inst #355 = ILHr16
  { 356,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo58 },  // Inst #356 = ILHr8
  { 357,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #357 = ILHv8i16
  { 358,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo55 },  // Inst #358 = ILf32
  { 359,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo56 },  // Inst #359 = ILf64
  { 360,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo32 },  // Inst #360 = ILr32
  { 361,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo57 },  // Inst #361 = ILr64
  { 362,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #362 = ILv2i64
  { 363,	2,	1,	7,	0,	0, 0x0ULL, NULL, NULL, OperandInfo31 },  // Inst #363 = ILv4i32
  { 364,	3,	1,	7,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo59 },  // Inst #364 = IOHLf32
  { 365,	3,	1,	7,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo60 },  // Inst #365 = IOHLlo
  { 366,	3,	1,	7,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo61 },  // Inst #366 = IOHLr32
  { 367,	3,	1,	7,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo62 },  // Inst #367 = IOHLv2i64
  { 368,	3,	1,	7,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo62 },  // Inst #368 = IOHLv4i32
  { 369,	0,	0,	10,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #369 = LNOP
  { 370,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #370 = LQAf32
  { 371,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo64 },  // Inst #371 = LQAf64
  { 372,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo65 },  // Inst #372 = LQAr128
  { 373,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo66 },  // Inst #373 = LQAr16
  { 374,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #374 = LQAr32
  { 375,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo68 },  // Inst #375 = LQAr64
  { 376,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo69 },  // Inst #376 = LQAr8
  { 377,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #377 = LQAv16i8
  { 378,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #378 = LQAv2f64
  { 379,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #379 = LQAv2i64
  { 380,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #380 = LQAv4f32
  { 381,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #381 = LQAv4i32
  { 382,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #382 = LQAv8i16
  { 383,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #383 = LQDf32
  { 384,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo64 },  // Inst #384 = LQDf64
  { 385,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo65 },  // Inst #385 = LQDr128
  { 386,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo66 },  // Inst #386 = LQDr16
  { 387,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #387 = LQDr32
  { 388,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo68 },  // Inst #388 = LQDr64
  { 389,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo69 },  // Inst #389 = LQDr8
  { 390,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #390 = LQDv16i8
  { 391,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #391 = LQDv2f64
  { 392,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #392 = LQDv2i64
  { 393,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #393 = LQDv4f32
  { 394,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #394 = LQDv4i32
  { 395,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #395 = LQDv8i16
  { 396,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo70 },  // Inst #396 = LQXf32
  { 397,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #397 = LQXf64
  { 398,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo72 },  // Inst #398 = LQXr128
  { 399,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo73 },  // Inst #399 = LQXr16
  { 400,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo74 },  // Inst #400 = LQXr32
  { 401,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo75 },  // Inst #401 = LQXr64
  { 402,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo76 },  // Inst #402 = LQXr8
  { 403,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #403 = LQXv16i8
  { 404,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #404 = LQXv2f64
  { 405,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #405 = LQXv2i64
  { 406,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #406 = LQXv4f32
  { 407,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #407 = LQXv4i32
  { 408,	3,	1,	11,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #408 = LQXv8i16
  { 409,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo49 },  // Inst #409 = LRf32
  { 410,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo77 },  // Inst #410 = LRf64
  { 411,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo78 },  // Inst #411 = LRr128
  { 412,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo79 },  // Inst #412 = LRr16
  { 413,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #413 = LRr32
  { 414,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo80 },  // Inst #414 = LRr64
  { 415,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo81 },  // Inst #415 = LRr8
  { 416,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #416 = LRv16i8
  { 417,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #417 = LRv2f64
  { 418,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #418 = LRv2i64
  { 419,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #419 = LRv4f32
  { 420,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #420 = LRv4i32
  { 421,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #421 = LRv8i16
  { 422,	4,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo82 },  // Inst #422 = MPYAr32
  { 423,	4,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo82 },  // Inst #423 = MPYAr32_sext
  { 424,	4,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo83 },  // Inst #424 = MPYAr32_sextinreg
  { 425,	4,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #425 = MPYAv4i32
  { 426,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #426 = MPYHHAUr32
  { 427,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #427 = MPYHHAUvec
  { 428,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #428 = MPYHHAr32
  { 429,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #429 = MPYHHAvec
  { 430,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #430 = MPYHHUr32
  { 431,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #431 = MPYHHUv4i32
  { 432,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #432 = MPYHHr32
  { 433,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #433 = MPYHHv8i16
  { 434,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #434 = MPYHr32
  { 435,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #435 = MPYHv4i32
  { 436,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #436 = MPYIr16
  { 437,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #437 = MPYIvec
  { 438,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo84 },  // Inst #438 = MPYSr16
  { 439,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #439 = MPYSv4i32
  { 440,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #440 = MPYUIr16
  { 441,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #441 = MPYUIvec
  { 442,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo84 },  // Inst #442 = MPYUr16
  { 443,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #443 = MPYUr32
  { 444,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #444 = MPYUv4i32
  { 445,	3,	1,	8,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #445 = MPYr16
  { 446,	3,	1,	8,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #446 = MPYv8i16
  { 447,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #447 = NANDr128
  { 448,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #448 = NANDr16
  { 449,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #449 = NANDr32
  { 450,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #450 = NANDr64
  { 451,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #451 = NANDr8
  { 452,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #452 = NANDv16i8
  { 453,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #453 = NANDv2i64
  { 454,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #454 = NANDv4i32
  { 455,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #455 = NANDv8i16
  { 456,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #456 = NORr128
  { 457,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #457 = NORr16
  { 458,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #458 = NORr32
  { 459,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #459 = NORr64
  { 460,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #460 = NORr8
  { 461,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #461 = NORv16i8
  { 462,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #462 = NORv2i64
  { 463,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #463 = NORv4i32
  { 464,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #464 = NORv8i16
  { 465,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #465 = ORBIr8
  { 466,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #466 = ORBIv16i8
  { 467,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #467 = ORCr128
  { 468,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #468 = ORCr16
  { 469,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #469 = ORCr32
  { 470,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #470 = ORCr64
  { 471,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #471 = ORCr8
  { 472,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #472 = ORCv16i8
  { 473,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #473 = ORCv2i64
  { 474,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #474 = ORCv4i32
  { 475,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #475 = ORCv8i16
  { 476,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo22 },  // Inst #476 = ORHIi8i16
  { 477,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #477 = ORHIr16
  { 478,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #478 = ORHIv8i16
  { 479,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo23 },  // Inst #479 = ORIi16i32
  { 480,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #480 = ORIi8i32
  { 481,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #481 = ORIr32
  { 482,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #482 = ORIv4i32
  { 483,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #483 = ORXv4i32
  { 484,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo43 },  // Inst #484 = ORf32
  { 485,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo44 },  // Inst #485 = ORf64
  { 486,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #486 = ORr128
  { 487,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #487 = ORr16
  { 488,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #488 = ORr32
  { 489,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #489 = ORr64
  { 490,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #490 = ORr8
  { 491,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #491 = ORv16i8
  { 492,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #492 = ORv2f64
  { 493,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #493 = ORv2i64
  { 494,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #494 = ORv4f32
  { 495,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #495 = ORv4i32
  { 496,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #496 = ORv8i16
  { 497,	0,	0,	2,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, 0 },  // Inst #497 = RET
  { 498,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #498 = ROTHIr16
  { 499,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #499 = ROTHIr16_r32
  { 500,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #500 = ROTHIv8i16
  { 501,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #501 = ROTHMIr16
  { 502,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #502 = ROTHMIv8i16
  { 503,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo85 },  // Inst #503 = ROTHMr16
  { 504,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #504 = ROTHMv8i16
  { 505,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #505 = ROTHr16
  { 506,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo85 },  // Inst #506 = ROTHr16_r32
  { 507,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #507 = ROTHv8i16
  { 508,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #508 = ROTIr32
  { 509,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #509 = ROTIr32_i16
  { 510,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #510 = ROTIr32_i8
  { 511,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #511 = ROTIv4i32
  { 512,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #512 = ROTIv4i32_i16
  { 513,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #513 = ROTIv4i32_i8
  { 514,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #514 = ROTMAHIr16
  { 515,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #515 = ROTMAHIv8i16
  { 516,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo85 },  // Inst #516 = ROTMAHr16
  { 517,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #517 = ROTMAHv8i16
  { 518,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #518 = ROTMAIr32_i32
  { 519,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo86 },  // Inst #519 = ROTMAIr64_i32
  { 520,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #520 = ROTMAIv2i64_i32
  { 521,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #521 = ROTMAIv4i32_i32
  { 522,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #522 = ROTMAr32
  { 523,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #523 = ROTMAv4i32
  { 524,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #524 = ROTMIr32
  { 525,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #525 = ROTMIv4i32
  { 526,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #526 = ROTMr32
  { 527,	3,	1,	13,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #527 = ROTMv4i32
  { 528,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo87 },  // Inst #528 = ROTQBIIr128
  { 529,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo86 },  // Inst #529 = ROTQBIIr64
  { 530,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #530 = ROTQBIIv16i8
  { 531,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #531 = ROTQBIIv2i64
  { 532,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #532 = ROTQBIIv4i32
  { 533,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #533 = ROTQBIIv8i16
  { 534,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #534 = ROTQBIr128
  { 535,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo89 },  // Inst #535 = ROTQBIr64
  { 536,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #536 = ROTQBIv16i8
  { 537,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #537 = ROTQBIv2i64
  { 538,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #538 = ROTQBIv4i32
  { 539,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #539 = ROTQBIv8i16
  { 540,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #540 = ROTQBYBIv16i8_r32
  { 541,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #541 = ROTQBYBIv2i64_r32
  { 542,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #542 = ROTQBYBIv4i32_r32
  { 543,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #543 = ROTQBYBIv8i16_r32
  { 544,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo87 },  // Inst #544 = ROTQBYIi128
  { 545,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #545 = ROTQBYIv16i8
  { 546,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #546 = ROTQBYIv2i64
  { 547,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #547 = ROTQBYIv4f32
  { 548,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #548 = ROTQBYIv4i32
  { 549,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #549 = ROTQBYIv8i16
  { 550,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #550 = ROTQBYIvfi64
  { 551,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #551 = ROTQBYi128
  { 552,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #552 = ROTQBYv16i8
  { 553,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #553 = ROTQBYv2f64
  { 554,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #554 = ROTQBYv2i64
  { 555,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #555 = ROTQBYv4f32
  { 556,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #556 = ROTQBYv4i32
  { 557,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #557 = ROTQBYv8i16
  { 558,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo87 },  // Inst #558 = ROTQMBIIr128
  { 559,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo86 },  // Inst #559 = ROTQMBIIr64
  { 560,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #560 = ROTQMBIIv16i8
  { 561,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #561 = ROTQMBIIv2i64
  { 562,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #562 = ROTQMBIIv4i32
  { 563,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #563 = ROTQMBIIv8i16
  { 564,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #564 = ROTQMBIr128
  { 565,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo89 },  // Inst #565 = ROTQMBIr64
  { 566,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #566 = ROTQMBIv16i8
  { 567,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #567 = ROTQMBIv2i64
  { 568,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #568 = ROTQMBIv4i32
  { 569,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #569 = ROTQMBIv8i16
  { 570,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #570 = ROTQMBYBIr128
  { 571,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #571 = ROTQMBYBIv16i8
  { 572,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #572 = ROTQMBYBIv2i64
  { 573,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #573 = ROTQMBYBIv4i32
  { 574,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #574 = ROTQMBYBIv8i16
  { 575,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo87 },  // Inst #575 = ROTQMBYIr128
  { 576,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo91 },  // Inst #576 = ROTQMBYIr128_zext_r16
  { 577,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo92 },  // Inst #577 = ROTQMBYIr128_zext_r32
  { 578,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo93 },  // Inst #578 = ROTQMBYIr128_zext_r64
  { 579,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo94 },  // Inst #579 = ROTQMBYIr128_zext_r8
  { 580,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo86 },  // Inst #580 = ROTQMBYIr64
  { 581,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #581 = ROTQMBYIv16i8
  { 582,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #582 = ROTQMBYIv2i64
  { 583,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #583 = ROTQMBYIv4i32
  { 584,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #584 = ROTQMBYIv8i16
  { 585,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #585 = ROTQMBYr128
  { 586,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo89 },  // Inst #586 = ROTQMBYr64
  { 587,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #587 = ROTQMBYv16i8
  { 588,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #588 = ROTQMBYv2i64
  { 589,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #589 = ROTQMBYv4i32
  { 590,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #590 = ROTQMBYv8i16
  { 591,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #591 = ROTr32
  { 592,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo95 },  // Inst #592 = ROTr32_r16_anyext
  { 593,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo96 },  // Inst #593 = ROTr32_r8_anyext
  { 594,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #594 = ROTv4i32
  { 595,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo97 },  // Inst #595 = SELBf32_cond
  { 596,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo98 },  // Inst #596 = SELBf64_cond
  { 597,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo99 },  // Inst #597 = SELBr128
  { 598,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo100 },  // Inst #598 = SELBr16
  { 599,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo100 },  // Inst #599 = SELBr16_cond
  { 600,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo83 },  // Inst #600 = SELBr32
  { 601,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo83 },  // Inst #601 = SELBr32_cond
  { 602,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo101 },  // Inst #602 = SELBr64
  { 603,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo102 },  // Inst #603 = SELBr64_cond
  { 604,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #604 = SELBr8
  { 605,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo103 },  // Inst #605 = SELBr8_cond
  { 606,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #606 = SELBv16i8
  { 607,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #607 = SELBv16i8_cond
  { 608,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #608 = SELBv16i8_vcond
  { 609,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #609 = SELBv2i64
  { 610,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #610 = SELBv2i64_cond
  { 611,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #611 = SELBv2i64_vcond
  { 612,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #612 = SELBv4f32_cond
  { 613,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #613 = SELBv4i32
  { 614,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #614 = SELBv4i32_cond
  { 615,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #615 = SELBv4i32_vcond
  { 616,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #616 = SELBv8i16
  { 617,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #617 = SELBv8i16_cond
  { 618,	4,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo104 },  // Inst #618 = SELBv8i16_vcond
  { 619,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #619 = SFHIr16
  { 620,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #620 = SFHIvec
  { 621,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #621 = SFHr16
  { 622,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #622 = SFHvec
  { 623,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #623 = SFIr32
  { 624,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #624 = SFIvec
  { 625,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo9 },  // Inst #625 = SFXr32
  { 626,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo10 },  // Inst #626 = SFXr64
  { 627,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #627 = SFXv2i64
  { 628,	4,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #628 = SFXv4i32
  { 629,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #629 = SFr32
  { 630,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #630 = SFvec
  { 631,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #631 = SHLHIr16
  { 632,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #632 = SHLHIv8i16
  { 633,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #633 = SHLHr16
  { 634,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo85 },  // Inst #634 = SHLHr16_r32
  { 635,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #635 = SHLHv8i16
  { 636,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #636 = SHLIr32
  { 637,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #637 = SHLIv4i32
  { 638,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #638 = SHLQBIIv16i8
  { 639,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #639 = SHLQBIIv2f64
  { 640,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #640 = SHLQBIIv2i64
  { 641,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #641 = SHLQBIIv4f32
  { 642,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #642 = SHLQBIIv4i32
  { 643,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #643 = SHLQBIIv8i16
  { 644,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #644 = SHLQBIr128
  { 645,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #645 = SHLQBIv16i8
  { 646,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #646 = SHLQBIv2f64
  { 647,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #647 = SHLQBIv2i64
  { 648,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #648 = SHLQBIv4f32
  { 649,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #649 = SHLQBIv4i32
  { 650,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #650 = SHLQBIv8i16
  { 651,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #651 = SHLQBYBIr128
  { 652,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #652 = SHLQBYBIv16i8
  { 653,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #653 = SHLQBYBIv2f64
  { 654,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #654 = SHLQBYBIv2i64
  { 655,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #655 = SHLQBYBIv4f32
  { 656,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #656 = SHLQBYBIv4i32
  { 657,	3,	1,	12,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #657 = SHLQBYBIv8i16
  { 658,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo87 },  // Inst #658 = SHLQBYIr128
  { 659,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #659 = SHLQBYIv16i8
  { 660,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #660 = SHLQBYIv2f64
  { 661,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #661 = SHLQBYIv2i64
  { 662,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #662 = SHLQBYIv4f32
  { 663,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #663 = SHLQBYIv4i32
  { 664,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #664 = SHLQBYIv8i16
  { 665,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo88 },  // Inst #665 = SHLQBYr128
  { 666,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #666 = SHLQBYv16i8
  { 667,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #667 = SHLQBYv2f64
  { 668,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #668 = SHLQBYv2i64
  { 669,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #669 = SHLQBYv4f32
  { 670,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #670 = SHLQBYv4i32
  { 671,	3,	1,	12,	0,	0, 0x0ULL, NULL, NULL, OperandInfo90 },  // Inst #671 = SHLQBYv8i16
  { 672,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #672 = SHLr32
  { 673,	3,	1,	13,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #673 = SHLv4i32
  { 674,	4,	1,	16,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo105 },  // Inst #674 = SHUFBgprc
  { 675,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #675 = SHUFBv16i8
  { 676,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #676 = SHUFBv16i8_m32
  { 677,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #677 = SHUFBv2f64
  { 678,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #678 = SHUFBv2f64_m32
  { 679,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #679 = SHUFBv2i64
  { 680,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #680 = SHUFBv2i64_m32
  { 681,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #681 = SHUFBv4f32
  { 682,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #682 = SHUFBv4f32_m32
  { 683,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #683 = SHUFBv4i32
  { 684,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #684 = SHUFBv4i32_m32
  { 685,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #685 = SHUFBv8i16
  { 686,	4,	1,	16,	0,	0, 0x0ULL, NULL, NULL, OperandInfo41 },  // Inst #686 = SHUFBv8i16_m32
  { 687,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #687 = STQAf32
  { 688,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo64 },  // Inst #688 = STQAf64
  { 689,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo65 },  // Inst #689 = STQAr128
  { 690,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo66 },  // Inst #690 = STQAr16
  { 691,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #691 = STQAr32
  { 692,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo68 },  // Inst #692 = STQAr64
  { 693,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo69 },  // Inst #693 = STQAr8
  { 694,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #694 = STQAv16i8
  { 695,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #695 = STQAv2f64
  { 696,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #696 = STQAv2i64
  { 697,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #697 = STQAv4f32
  { 698,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #698 = STQAv4i32
  { 699,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #699 = STQAv8i16
  { 700,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #700 = STQDf32
  { 701,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo64 },  // Inst #701 = STQDf64
  { 702,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo65 },  // Inst #702 = STQDr128
  { 703,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo66 },  // Inst #703 = STQDr16
  { 704,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo67 },  // Inst #704 = STQDr32
  { 705,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo68 },  // Inst #705 = STQDr64
  { 706,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo69 },  // Inst #706 = STQDr8
  { 707,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #707 = STQDv16i8
  { 708,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #708 = STQDv2f64
  { 709,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #709 = STQDv2i64
  { 710,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #710 = STQDv4f32
  { 711,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #711 = STQDv4i32
  { 712,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo33 },  // Inst #712 = STQDv8i16
  { 713,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo70 },  // Inst #713 = STQXf32
  { 714,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #714 = STQXf64
  { 715,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo72 },  // Inst #715 = STQXr128
  { 716,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo73 },  // Inst #716 = STQXr16
  { 717,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo74 },  // Inst #717 = STQXr32
  { 718,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo75 },  // Inst #718 = STQXr64
  { 719,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo76 },  // Inst #719 = STQXr8
  { 720,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #720 = STQXv16i8
  { 721,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #721 = STQXv2f64
  { 722,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #722 = STQXv2i64
  { 723,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #723 = STQXv4f32
  { 724,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #724 = STQXv4i32
  { 725,	3,	0,	11,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo34 },  // Inst #725 = STQXv8i16
  { 726,	3,	1,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #726 = SUMB
  { 727,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo17 },  // Inst #727 = XORBIr8
  { 728,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #728 = XORBIv16i8
  { 729,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #729 = XORHIr16
  { 730,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #730 = XORHIv8i16
  { 731,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #731 = XORIr32
  { 732,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #732 = XORIv4i32
  { 733,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo25 },  // Inst #733 = XORfneg32
  { 734,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo26 },  // Inst #734 = XORfneg64
  { 735,	3,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #735 = XORfnegvec
  { 736,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo18 },  // Inst #736 = XORr128
  { 737,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #737 = XORr16
  { 738,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo19 },  // Inst #738 = XORr32
  { 739,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #739 = XORr64
  { 740,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo21 },  // Inst #740 = XORr8
  { 741,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #741 = XORv16i8
  { 742,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #742 = XORv2i64
  { 743,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #743 = XORv4i32
  { 744,	3,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo8 },  // Inst #744 = XORv8i16
  { 745,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo79 },  // Inst #745 = XSBHr16
  { 746,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #746 = XSBHr32
  { 747,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo80 },  // Inst #747 = XSBHr64
  { 748,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo106 },  // Inst #748 = XSBHr8
  { 749,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #749 = XSBHv16i8
  { 750,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo107 },  // Inst #750 = XSHWr16
  { 751,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo38 },  // Inst #751 = XSHWr32
  { 752,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo80 },  // Inst #752 = XSHWr64
  { 753,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #753 = XSHWv4i32
  { 754,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo108 },  // Inst #754 = XSWDr64
  { 755,	2,	1,	9,	0,	0, 0x0ULL, NULL, NULL, OperandInfo80 },  // Inst #755 = XSWDr64_inreg
  { 756,	2,	1,	9,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo36 },  // Inst #756 = XSWDv2i64
};

extern const char SPUInstrNameData[] = {
  /* 0 */ 'B', 'I', 'S', 'L', 'E', 'D', '_', '0', '0', 0,
  /* 10 */ 'B', 'I', 'S', 'L', 'E', 'D', '_', 'E', '0', 0,
  /* 20 */ 'E', 'Q', 'V', 'v', '4', 'i', '3', '2', '_', '1', 0,
  /* 31 */ 'E', 'Q', 'V', 'r', '3', '2', '_', '1', 0,
  /* 40 */ 'E', 'Q', 'V', 'v', '2', 'i', '6', '4', '_', '1', 0,
  /* 51 */ 'E', 'Q', 'V', 'r', '6', '4', '_', '1', 0,
  /* 60 */ 'E', 'Q', 'V', 'v', '8', 'i', '1', '6', '_', '1', 0,
  /* 71 */ 'E', 'Q', 'V', 'r', '1', '6', '_', '1', 0,
  /* 80 */ 'E', 'Q', 'V', 'r', '1', '2', '8', '_', '1', 0,
  /* 90 */ 'E', 'Q', 'V', 'v', '1', '6', 'i', '8', '_', '1', 0,
  /* 101 */ 'E', 'Q', 'V', 'r', '8', '_', '1', 0,
  /* 109 */ 'F', 'A', 'v', '4', 'f', '3', '2', 0,
  /* 117 */ 'F', 'M', 'A', 'v', '4', 'f', '3', '2', 0,
  /* 126 */ 'L', 'Q', 'A', 'v', '4', 'f', '3', '2', 0,
  /* 135 */ 'S', 'T', 'Q', 'A', 'v', '4', 'f', '3', '2', 0,
  /* 145 */ 'S', 'H', 'U', 'F', 'B', 'v', '4', 'f', '3', '2', 0,
  /* 156 */ 'L', 'Q', 'D', 'v', '4', 'f', '3', '2', 0,
  /* 165 */ 'S', 'T', 'Q', 'D', 'v', '4', 'f', '3', '2', 0,
  /* 175 */ 'C', 'S', 'i', 'F', 'v', '4', 'f', '3', '2', 0,
  /* 185 */ 'C', 'U', 'i', 'F', 'v', '4', 'f', '3', '2', 0,
  /* 195 */ 'A', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 203 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 215 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'B', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 229 */ 'F', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 237 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 250 */ 'C', 'G', 'T', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 260 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 273 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'I', 'v', '4', 'f', '3', '2', 0,
  /* 286 */ 'F', 'M', 'v', '4', 'f', '3', '2', 0,
  /* 294 */ 'L', 'R', 'v', '4', 'f', '3', '2', 0,
  /* 302 */ 'O', 'R', 'v', '4', 'f', '3', '2', 0,
  /* 310 */ 'F', 'S', 'v', '4', 'f', '3', '2', 0,
  /* 318 */ 'F', 'M', 'S', 'v', '4', 'f', '3', '2', 0,
  /* 327 */ 'F', 'N', 'M', 'S', 'v', '4', 'f', '3', '2', 0,
  /* 337 */ 'F', 'R', 'E', 'S', 'T', 'v', '4', 'f', '3', '2', 0,
  /* 348 */ 'L', 'Q', 'X', 'v', '4', 'f', '3', '2', 0,
  /* 357 */ 'S', 'T', 'Q', 'X', 'v', '4', 'f', '3', '2', 0,
  /* 367 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'v', '4', 'f', '3', '2', 0,
  /* 379 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'v', '4', 'f', '3', '2', 0,
  /* 391 */ 'C', 'F', 'S', 'i', 'v', '4', 'f', '3', '2', 0,
  /* 401 */ 'C', 'F', 'U', 'i', 'v', '4', 'f', '3', '2', 0,
  /* 411 */ 'F', 'A', 'f', '3', '2', 0,
  /* 417 */ 'I', 'L', 'A', 'f', '3', '2', 0,
  /* 424 */ 'F', 'M', 'A', 'f', '3', '2', 0,
  /* 431 */ 'L', 'Q', 'A', 'f', '3', '2', 0,
  /* 438 */ 'S', 'T', 'Q', 'A', 'f', '3', '2', 0,
  /* 446 */ 'L', 'Q', 'D', 'f', '3', '2', 0,
  /* 453 */ 'S', 'T', 'Q', 'D', 'f', '3', '2', 0,
  /* 461 */ 'F', 'E', 'S', 'D', 'f', '3', '2', 0,
  /* 469 */ 'C', 'W', 'D', 'f', '3', '2', 0,
  /* 476 */ 'C', 'S', 'i', 'F', 'f', '3', '2', 0,
  /* 484 */ 'C', 'U', 'i', 'F', 'f', '3', '2', 0,
  /* 492 */ 'A', 'I', 'f', '3', '2', 0,
  /* 498 */ 'F', 'I', 'f', '3', '2', 0,
  /* 504 */ 'C', 'G', 'T', 'I', 'f', '3', '2', 0,
  /* 512 */ 'I', 'O', 'H', 'L', 'f', '3', '2', 0,
  /* 520 */ 'I', 'L', 'f', '3', '2', 0,
  /* 526 */ 'F', 'M', 'f', '3', '2', 0,
  /* 532 */ 'F', 'C', 'E', 'Q', 'f', '3', '2', 0,
  /* 540 */ 'F', 'C', 'M', 'E', 'Q', 'f', '3', '2', 0,
  /* 549 */ 'L', 'R', 'f', '3', '2', 0,
  /* 555 */ 'O', 'R', 'f', '3', '2', 0,
  /* 561 */ 'F', 'S', 'C', 'R', 'R', 'f', '3', '2', 0,
  /* 570 */ 'F', 'S', 'f', '3', '2', 0,
  /* 576 */ 'F', 'M', 'S', 'f', '3', '2', 0,
  /* 583 */ 'F', 'N', 'M', 'S', 'f', '3', '2', 0,
  /* 591 */ 'F', 'C', 'G', 'T', 'f', '3', '2', 0,
  /* 599 */ 'F', 'C', 'M', 'G', 'T', 'f', '3', '2', 0,
  /* 608 */ 'F', 'R', 'E', 'S', 'T', 'f', '3', '2', 0,
  /* 617 */ 'I', 'L', 'H', 'U', 'f', '3', '2', 0,
  /* 625 */ 'F', 'S', 'C', 'R', 'W', 'f', '3', '2', 0,
  /* 634 */ 'L', 'Q', 'X', 'f', '3', '2', 0,
  /* 641 */ 'S', 'T', 'Q', 'X', 'f', '3', '2', 0,
  /* 649 */ 'C', 'W', 'X', 'f', '3', '2', 0,
  /* 656 */ 'C', 'F', 'S', 'i', 'f', '3', '2', 0,
  /* 664 */ 'C', 'F', 'U', 'i', 'f', '3', '2', 0,
  /* 672 */ 'X', 'O', 'R', 'f', 'n', 'e', 'g', '3', '2', 0,
  /* 682 */ 'I', 'L', 'A', 'v', '4', 'i', '3', '2', 0,
  /* 691 */ 'R', 'O', 'T', 'M', 'A', 'v', '4', 'i', '3', '2', 0,
  /* 702 */ 'L', 'Q', 'A', 'v', '4', 'i', '3', '2', 0,
  /* 711 */ 'S', 'T', 'Q', 'A', 'v', '4', 'i', '3', '2', 0,
  /* 721 */ 'M', 'P', 'Y', 'A', 'v', '4', 'i', '3', '2', 0,
  /* 731 */ 'S', 'H', 'U', 'F', 'B', 'v', '4', 'i', '3', '2', 0,
  /* 742 */ 'G', 'B', 'v', '4', 'i', '3', '2', 0,
  /* 750 */ 'S', 'E', 'L', 'B', 'v', '4', 'i', '3', '2', 0,
  /* 760 */ 'C', 'N', 'T', 'B', 'v', '4', 'i', '3', '2', 0,
  /* 770 */ 'A', 'N', 'D', 'C', 'v', '4', 'i', '3', '2', 0,
  /* 780 */ 'O', 'R', 'C', 'v', '4', 'i', '3', '2', 0,
  /* 789 */ 'N', 'A', 'N', 'D', 'v', '4', 'i', '3', '2', 0,
  /* 799 */ 'L', 'Q', 'D', 'v', '4', 'i', '3', '2', 0,
  /* 808 */ 'S', 'T', 'Q', 'D', 'v', '4', 'i', '3', '2', 0,
  /* 818 */ 'B', 'G', 'v', '4', 'i', '3', '2', 0,
  /* 826 */ 'C', 'G', 'v', '4', 'i', '3', '2', 0,
  /* 834 */ 'M', 'P', 'Y', 'H', 'v', '4', 'i', '3', '2', 0,
  /* 844 */ 'A', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 852 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 865 */ 'F', 'S', 'M', 'B', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 876 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 888 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 900 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'B', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 915 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'B', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 929 */ 'A', 'N', 'D', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 939 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 953 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 966 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 979 */ 'S', 'H', 'L', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 989 */ 'R', 'O', 'T', 'M', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1000 */ 'C', 'E', 'Q', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1010 */ 'X', 'O', 'R', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1020 */ 'C', 'G', 'T', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1030 */ 'C', 'L', 'G', 'T', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1041 */ 'R', 'O', 'T', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1051 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1065 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1078 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'I', 'v', '4', 'i', '3', '2', 0,
  /* 1091 */ 'I', 'O', 'H', 'L', 'v', '4', 'i', '3', '2', 0,
  /* 1101 */ 'S', 'H', 'L', 'v', '4', 'i', '3', '2', 0,
  /* 1110 */ 'I', 'L', 'v', '4', 'i', '3', '2', 0,
  /* 1118 */ 'F', 'S', 'M', 'v', '4', 'i', '3', '2', 0,
  /* 1127 */ 'R', 'O', 'T', 'M', 'v', '4', 'i', '3', '2', 0,
  /* 1137 */ 'C', 'E', 'Q', 'v', '4', 'i', '3', '2', 0,
  /* 1146 */ 'L', 'R', 'v', '4', 'i', '3', '2', 0,
  /* 1154 */ 'N', 'O', 'R', 'v', '4', 'i', '3', '2', 0,
  /* 1163 */ 'X', 'O', 'R', 'v', '4', 'i', '3', '2', 0,
  /* 1172 */ 'M', 'P', 'Y', 'S', 'v', '4', 'i', '3', '2', 0,
  /* 1182 */ 'C', 'G', 'T', 'v', '4', 'i', '3', '2', 0,
  /* 1191 */ 'C', 'L', 'G', 'T', 'v', '4', 'i', '3', '2', 0,
  /* 1201 */ 'R', 'O', 'T', 'v', '4', 'i', '3', '2', 0,
  /* 1210 */ 'M', 'P', 'Y', 'H', 'H', 'U', 'v', '4', 'i', '3', '2', 0,
  /* 1222 */ 'I', 'L', 'H', 'U', 'v', '4', 'i', '3', '2', 0,
  /* 1232 */ 'M', 'P', 'Y', 'U', 'v', '4', 'i', '3', '2', 0,
  /* 1242 */ 'E', 'Q', 'V', 'v', '4', 'i', '3', '2', 0,
  /* 1251 */ 'X', 'S', 'H', 'W', 'v', '4', 'i', '3', '2', 0,
  /* 1261 */ 'A', 'D', 'D', 'X', 'v', '4', 'i', '3', '2', 0,
  /* 1271 */ 'S', 'F', 'X', 'v', '4', 'i', '3', '2', 0,
  /* 1280 */ 'L', 'Q', 'X', 'v', '4', 'i', '3', '2', 0,
  /* 1289 */ 'S', 'T', 'Q', 'X', 'v', '4', 'i', '3', '2', 0,
  /* 1299 */ 'O', 'R', 'X', 'v', '4', 'i', '3', '2', 0,
  /* 1308 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'v', '4', 'i', '3', '2', 0,
  /* 1321 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'v', '4', 'i', '3', '2', 0,
  /* 1333 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'v', '4', 'i', '3', '2', 0,
  /* 1345 */ 'C', 'L', 'Z', 'v', '4', 'i', '3', '2', 0,
  /* 1354 */ 'B', 'R', 'N', 'Z', 'v', '4', 'i', '3', '2', 0,
  /* 1364 */ 'B', 'R', 'Z', 'v', '4', 'i', '3', '2', 0,
  /* 1373 */ 'A', 'N', 'D', 'i', '1', '6', 'i', '3', '2', 0,
  /* 1383 */ 'A', 'N', 'D', 'I', 'i', '1', '6', 'i', '3', '2', 0,
  /* 1394 */ 'O', 'R', 'I', 'i', '1', '6', 'i', '3', '2', 0,
  /* 1404 */ 'A', 'N', 'D', 'I', 'i', '8', 'i', '3', '2', 0,
  /* 1414 */ 'O', 'R', 'I', 'i', '8', 'i', '3', '2', 0,
  /* 1423 */ 'R', 'O', 'T', 'M', 'A', 'I', 'v', '4', 'i', '3', '2', '_', 'i', '3', '2', 0,
  /* 1439 */ 'R', 'O', 'T', 'M', 'A', 'I', 'r', '3', '2', '_', 'i', '3', '2', 0,
  /* 1453 */ 'R', 'O', 'T', 'M', 'A', 'I', 'v', '2', 'i', '6', '4', '_', 'i', '3', '2', 0,
  /* 1469 */ 'R', 'O', 'T', 'M', 'A', 'I', 'r', '6', '4', '_', 'i', '3', '2', 0,
  /* 1483 */ 'S', 'H', 'U', 'F', 'B', 'v', '4', 'f', '3', '2', '_', 'm', '3', '2', 0,
  /* 1498 */ 'S', 'H', 'U', 'F', 'B', 'v', '4', 'i', '3', '2', '_', 'm', '3', '2', 0,
  /* 1513 */ 'S', 'H', 'U', 'F', 'B', 'v', '2', 'f', '6', '4', '_', 'm', '3', '2', 0,
  /* 1528 */ 'S', 'H', 'U', 'F', 'B', 'v', '2', 'i', '6', '4', '_', 'm', '3', '2', 0,
  /* 1543 */ 'S', 'H', 'U', 'F', 'B', 'v', '8', 'i', '1', '6', '_', 'm', '3', '2', 0,
  /* 1558 */ 'S', 'H', 'U', 'F', 'B', 'v', '1', '6', 'i', '8', '_', 'm', '3', '2', 0,
  /* 1573 */ 'F', 'S', 'M', '6', '4', 'r', '3', '2', 0,
  /* 1582 */ 'M', 'P', 'Y', 'H', 'H', 'A', 'r', '3', '2', 0,
  /* 1592 */ 'I', 'L', 'A', 'r', '3', '2', 0,
  /* 1599 */ 'R', 'O', 'T', 'M', 'A', 'r', '3', '2', 0,
  /* 1608 */ 'L', 'Q', 'A', 'r', '3', '2', 0,
  /* 1615 */ 'S', 'T', 'Q', 'A', 'r', '3', '2', 0,
  /* 1623 */ 'M', 'P', 'Y', 'A', 'r', '3', '2', 0,
  /* 1631 */ 'S', 'E', 'L', 'B', 'r', '3', '2', 0,
  /* 1639 */ 'A', 'N', 'D', 'C', 'r', '3', '2', 0,
  /* 1647 */ 'O', 'R', 'C', 'r', '3', '2', 0,
  /* 1654 */ 'N', 'A', 'N', 'D', 'r', '3', '2', 0,
  /* 1662 */ 'L', 'Q', 'D', 'r', '3', '2', 0,
  /* 1669 */ 'S', 'T', 'Q', 'D', 'r', '3', '2', 0,
  /* 1677 */ 'S', 'F', 'r', '3', '2', 0,
  /* 1683 */ 'B', 'G', 'r', '3', '2', 0,
  /* 1689 */ 'C', 'G', 'r', '3', '2', 0,
  /* 1695 */ 'X', 'S', 'B', 'H', 'r', '3', '2', 0,
  /* 1703 */ 'M', 'P', 'Y', 'H', 'H', 'r', '3', '2', 0,
  /* 1712 */ 'M', 'P', 'Y', 'H', 'r', '3', '2', 0,
  /* 1720 */ 'A', 'I', 'r', '3', '2', 0,
  /* 1726 */ 'A', 'N', 'D', 'I', 'r', '3', '2', 0,
  /* 1734 */ 'S', 'F', 'I', 'r', '3', '2', 0,
  /* 1741 */ 'S', 'H', 'L', 'I', 'r', '3', '2', 0,
  /* 1749 */ 'R', 'O', 'T', 'M', 'I', 'r', '3', '2', 0,
  /* 1758 */ 'C', 'E', 'Q', 'I', 'r', '3', '2', 0,
  /* 1766 */ 'H', 'E', 'Q', 'I', 'r', '3', '2', 0,
  /* 1774 */ 'X', 'O', 'R', 'I', 'r', '3', '2', 0,
  /* 1782 */ 'C', 'G', 'T', 'I', 'r', '3', '2', 0,
  /* 1790 */ 'H', 'G', 'T', 'I', 'r', '3', '2', 0,
  /* 1798 */ 'C', 'L', 'G', 'T', 'I', 'r', '3', '2', 0,
  /* 1807 */ 'H', 'L', 'G', 'T', 'I', 'r', '3', '2', 0,
  /* 1816 */ 'R', 'O', 'T', 'I', 'r', '3', '2', 0,
  /* 1824 */ 'I', 'O', 'H', 'L', 'r', '3', '2', 0,
  /* 1832 */ 'S', 'H', 'L', 'r', '3', '2', 0,
  /* 1839 */ 'I', 'L', 'r', '3', '2', 0,
  /* 1845 */ 'F', 'S', 'M', 'r', '3', '2', 0,
  /* 1852 */ 'R', 'O', 'T', 'M', 'r', '3', '2', 0,
  /* 1860 */ 'C', 'E', 'Q', 'r', '3', '2', 0,
  /* 1867 */ 'H', 'E', 'Q', 'r', '3', '2', 0,
  /* 1874 */ 'L', 'R', 'r', '3', '2', 0,
  /* 1880 */ 'N', 'O', 'R', 'r', '3', '2', 0,
  /* 1887 */ 'X', 'O', 'R', 'r', '3', '2', 0,
  /* 1894 */ 'C', 'G', 'T', 'r', '3', '2', 0,
  /* 1901 */ 'H', 'G', 'T', 'r', '3', '2', 0,
  /* 1908 */ 'C', 'L', 'G', 'T', 'r', '3', '2', 0,
  /* 1916 */ 'H', 'L', 'G', 'T', 'r', '3', '2', 0,
  /* 1924 */ 'R', 'O', 'T', 'r', '3', '2', 0,
  /* 1931 */ 'M', 'P', 'Y', 'H', 'H', 'A', 'U', 'r', '3', '2', 0,
  /* 1942 */ 'M', 'P', 'Y', 'H', 'H', 'U', 'r', '3', '2', 0,
  /* 1952 */ 'I', 'L', 'H', 'U', 'r', '3', '2', 0,
  /* 1960 */ 'M', 'P', 'Y', 'U', 'r', '3', '2', 0,
  /* 1968 */ 'E', 'Q', 'V', 'r', '3', '2', 0,
  /* 1975 */ 'X', 'S', 'H', 'W', 'r', '3', '2', 0,
  /* 1983 */ 'A', 'D', 'D', 'X', 'r', '3', '2', 0,
  /* 1991 */ 'S', 'F', 'X', 'r', '3', '2', 0,
  /* 1998 */ 'L', 'Q', 'X', 'r', '3', '2', 0,
  /* 2005 */ 'S', 'T', 'Q', 'X', 'r', '3', '2', 0,
  /* 2013 */ 'C', 'L', 'Z', 'r', '3', '2', 0,
  /* 2020 */ 'B', 'R', 'N', 'Z', 'r', '3', '2', 0,
  /* 2028 */ 'B', 'R', 'Z', 'r', '3', '2', 0,
  /* 2035 */ 'G', 'B', 'v', '4', 'i', '3', '2', '_', 'r', '3', '2', 0,
  /* 2047 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'B', 'I', 'v', '4', 'i', '3', '2', '_', 'r', '3', '2', 0,
  /* 2065 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'B', 'I', 'v', '2', 'i', '6', '4', '_', 'r', '3', '2', 0,
  /* 2083 */ 'G', 'B', 'H', 'v', '8', 'i', '1', '6', '_', 'r', '3', '2', 0,
  /* 2096 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'B', 'I', 'v', '8', 'i', '1', '6', '_', 'r', '3', '2', 0,
  /* 2114 */ 'S', 'H', 'L', 'H', 'r', '1', '6', '_', 'r', '3', '2', 0,
  /* 2126 */ 'R', 'O', 'T', 'H', 'r', '1', '6', '_', 'r', '3', '2', 0,
  /* 2138 */ 'R', 'O', 'T', 'H', 'I', 'r', '1', '6', '_', 'r', '3', '2', 0,
  /* 2151 */ 'G', 'B', 'B', 'v', '1', '6', 'i', '8', '_', 'r', '3', '2', 0,
  /* 2164 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'B', 'I', 'v', '1', '6', 'i', '8', '_', 'r', '3', '2', 0,
  /* 2182 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'r', '1', '2', '8', '_', 'z', 'e', 'x', 't', '_', 'r', '3', '2', 0,
  /* 2204 */ 'A', 'N', 'D', 'f', 'a', 'b', 's', '3', '2', 0,
  /* 2214 */ 'E', 'Q', 'V', 'v', '4', 'i', '3', '2', '_', '2', 0,
  /* 2225 */ 'E', 'Q', 'V', 'r', '3', '2', '_', '2', 0,
  /* 2234 */ 'E', 'Q', 'V', 'v', '2', 'i', '6', '4', '_', '2', 0,
  /* 2245 */ 'E', 'Q', 'V', 'r', '6', '4', '_', '2', 0,
  /* 2254 */ 'E', 'Q', 'V', 'v', '8', 'i', '1', '6', '_', '2', 0,
  /* 2265 */ 'E', 'Q', 'V', 'r', '1', '6', '_', '2', 0,
  /* 2274 */ 'E', 'Q', 'V', 'r', '1', '2', '8', '_', '2', 0,
  /* 2284 */ 'E', 'Q', 'V', 'v', '1', '6', 'i', '8', '_', '2', 0,
  /* 2295 */ 'E', 'Q', 'V', 'r', '8', '_', '2', 0,
  /* 2303 */ 'E', 'Q', 'V', 'v', '4', 'i', '3', '2', '_', '3', 0,
  /* 2314 */ 'E', 'Q', 'V', 'r', '3', '2', '_', '3', 0,
  /* 2323 */ 'E', 'Q', 'V', 'v', '2', 'i', '6', '4', '_', '3', 0,
  /* 2334 */ 'E', 'Q', 'V', 'r', '6', '4', '_', '3', 0,
  /* 2343 */ 'E', 'Q', 'V', 'v', '8', 'i', '1', '6', '_', '3', 0,
  /* 2354 */ 'E', 'Q', 'V', 'r', '1', '6', '_', '3', 0,
  /* 2363 */ 'E', 'Q', 'V', 'r', '1', '2', '8', '_', '3', 0,
  /* 2373 */ 'E', 'Q', 'V', 'v', '1', '6', 'i', '8', '_', '3', 0,
  /* 2384 */ 'E', 'Q', 'V', 'r', '8', '_', '3', 0,
  /* 2392 */ 'F', 'A', 'v', '2', 'f', '6', '4', 0,
  /* 2400 */ 'F', 'M', 'A', 'v', '2', 'f', '6', '4', 0,
  /* 2409 */ 'F', 'N', 'M', 'A', 'v', '2', 'f', '6', '4', 0,
  /* 2419 */ 'L', 'Q', 'A', 'v', '2', 'f', '6', '4', 0,
  /* 2428 */ 'S', 'T', 'Q', 'A', 'v', '2', 'f', '6', '4', 0,
  /* 2438 */ 'S', 'H', 'U', 'F', 'B', 'v', '2', 'f', '6', '4', 0,
  /* 2449 */ 'L', 'Q', 'D', 'v', '2', 'f', '6', '4', 0,
  /* 2458 */ 'S', 'T', 'Q', 'D', 'v', '2', 'f', '6', '4', 0,
  /* 2468 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'v', '2', 'f', '6', '4', 0,
  /* 2480 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'B', 'I', 'v', '2', 'f', '6', '4', 0,
  /* 2494 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'I', 'v', '2', 'f', '6', '4', 0,
  /* 2507 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'I', 'v', '2', 'f', '6', '4', 0,
  /* 2520 */ 'F', 'M', 'v', '2', 'f', '6', '4', 0,
  /* 2528 */ 'L', 'R', 'v', '2', 'f', '6', '4', 0,
  /* 2536 */ 'O', 'R', 'v', '2', 'f', '6', '4', 0,
  /* 2544 */ 'F', 'S', 'v', '2', 'f', '6', '4', 0,
  /* 2552 */ 'F', 'M', 'S', 'v', '2', 'f', '6', '4', 0,
  /* 2561 */ 'D', 'F', 'N', 'M', 'S', 'v', '2', 'f', '6', '4', 0,
  /* 2572 */ 'L', 'Q', 'X', 'v', '2', 'f', '6', '4', 0,
  /* 2581 */ 'S', 'T', 'Q', 'X', 'v', '2', 'f', '6', '4', 0,
  /* 2591 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'v', '2', 'f', '6', '4', 0,
  /* 2603 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'v', '2', 'f', '6', '4', 0,
  /* 2615 */ 'F', 'A', 'f', '6', '4', 0,
  /* 2621 */ 'I', 'L', 'A', 'f', '6', '4', 0,
  /* 2628 */ 'F', 'M', 'A', 'f', '6', '4', 0,
  /* 2635 */ 'F', 'N', 'M', 'A', 'f', '6', '4', 0,
  /* 2643 */ 'L', 'Q', 'A', 'f', '6', '4', 0,
  /* 2650 */ 'S', 'T', 'Q', 'A', 'f', '6', '4', 0,
  /* 2658 */ 'C', 'D', 'D', 'f', '6', '4', 0,
  /* 2665 */ 'L', 'Q', 'D', 'f', '6', '4', 0,
  /* 2672 */ 'S', 'T', 'Q', 'D', 'f', '6', '4', 0,
  /* 2680 */ 'I', 'L', 'f', '6', '4', 0,
  /* 2686 */ 'F', 'M', 'f', '6', '4', 0,
  /* 2692 */ 'L', 'R', 'f', '6', '4', 0,
  /* 2698 */ 'O', 'R', 'f', '6', '4', 0,
  /* 2704 */ 'F', 'R', 'D', 'S', 'f', '6', '4', 0,
  /* 2712 */ 'F', 'S', 'f', '6', '4', 0,
  /* 2718 */ 'F', 'M', 'S', 'f', '6', '4', 0,
  /* 2725 */ 'D', 'F', 'N', 'M', 'S', 'f', '6', '4', 0,
  /* 2734 */ 'C', 'D', 'X', 'f', '6', '4', 0,
  /* 2741 */ 'L', 'Q', 'X', 'f', '6', '4', 0,
  /* 2748 */ 'S', 'T', 'Q', 'X', 'f', '6', '4', 0,
  /* 2756 */ 'X', 'O', 'R', 'f', 'n', 'e', 'g', '6', '4', 0,
  /* 2766 */ 'I', 'L', 'A', 'v', '2', 'i', '6', '4', 0,
  /* 2775 */ 'L', 'Q', 'A', 'v', '2', 'i', '6', '4', 0,
  /* 2784 */ 'S', 'T', 'Q', 'A', 'v', '2', 'i', '6', '4', 0,
  /* 2794 */ 'S', 'H', 'U', 'F', 'B', 'v', '2', 'i', '6', '4', 0,
  /* 2805 */ 'S', 'E', 'L', 'B', 'v', '2', 'i', '6', '4', 0,
  /* 2815 */ 'A', 'N', 'D', 'C', 'v', '2', 'i', '6', '4', 0,
  /* 2825 */ 'O', 'R', 'C', 'v', '2', 'i', '6', '4', 0,
  /* 2834 */ 'N', 'A', 'N', 'D', 'v', '2', 'i', '6', '4', 0,
  /* 2844 */ 'L', 'Q', 'D', 'v', '2', 'i', '6', '4', 0,
  /* 2853 */ 'S', 'T', 'Q', 'D', 'v', '2', 'i', '6', '4', 0,
  /* 2863 */ 'X', 'S', 'W', 'D', 'v', '2', 'i', '6', '4', 0,
  /* 2873 */ 'B', 'G', 'v', '2', 'i', '6', '4', 0,
  /* 2881 */ 'C', 'G', 'v', '2', 'i', '6', '4', 0,
  /* 2889 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2902 */ 'F', 'S', 'M', 'B', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2913 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2925 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2937 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'B', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2952 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'B', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2966 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2980 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 2993 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 3006 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 3020 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 3033 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'I', 'v', '2', 'i', '6', '4', 0,
  /* 3046 */ 'I', 'O', 'H', 'L', 'v', '2', 'i', '6', '4', 0,
  /* 3056 */ 'I', 'L', 'v', '2', 'i', '6', '4', 0,
  /* 3064 */ 'L', 'R', 'v', '2', 'i', '6', '4', 0,
  /* 3072 */ 'N', 'O', 'R', 'v', '2', 'i', '6', '4', 0,
  /* 3081 */ 'X', 'O', 'R', 'v', '2', 'i', '6', '4', 0,
  /* 3090 */ 'I', 'L', 'H', 'U', 'v', '2', 'i', '6', '4', 0,
  /* 3100 */ 'E', 'Q', 'V', 'v', '2', 'i', '6', '4', 0,
  /* 3109 */ 'A', 'D', 'D', 'X', 'v', '2', 'i', '6', '4', 0,
  /* 3119 */ 'S', 'F', 'X', 'v', '2', 'i', '6', '4', 0,
  /* 3128 */ 'L', 'Q', 'X', 'v', '2', 'i', '6', '4', 0,
  /* 3137 */ 'S', 'T', 'Q', 'X', 'v', '2', 'i', '6', '4', 0,
  /* 3147 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'v', '2', 'i', '6', '4', 0,
  /* 3160 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'v', '2', 'i', '6', '4', 0,
  /* 3172 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'v', '2', 'i', '6', '4', 0,
  /* 3184 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'I', 'v', 'f', 'i', '6', '4', 0,
  /* 3197 */ 'I', 'L', 'A', 'r', '6', '4', 0,
  /* 3204 */ 'L', 'Q', 'A', 'r', '6', '4', 0,
  /* 3211 */ 'S', 'T', 'Q', 'A', 'r', '6', '4', 0,
  /* 3219 */ 'S', 'E', 'L', 'B', 'r', '6', '4', 0,
  /* 3227 */ 'A', 'N', 'D', 'C', 'r', '6', '4', 0,
  /* 3235 */ 'O', 'R', 'C', 'r', '6', '4', 0,
  /* 3242 */ 'N', 'A', 'N', 'D', 'r', '6', '4', 0,
  /* 3250 */ 'L', 'Q', 'D', 'r', '6', '4', 0,
  /* 3257 */ 'S', 'T', 'Q', 'D', 'r', '6', '4', 0,
  /* 3265 */ 'X', 'S', 'W', 'D', 'r', '6', '4', 0,
  /* 3273 */ 'B', 'G', 'r', '6', '4', 0,
  /* 3279 */ 'C', 'G', 'r', '6', '4', 0,
  /* 3285 */ 'X', 'S', 'B', 'H', 'r', '6', '4', 0,
  /* 3293 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'r', '6', '4', 0,
  /* 3304 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'r', '6', '4', 0,
  /* 3314 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'I', 'r', '6', '4', 0,
  /* 3326 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'I', 'r', '6', '4', 0,
  /* 3337 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'r', '6', '4', 0,
  /* 3349 */ 'I', 'L', 'r', '6', '4', 0,
  /* 3355 */ 'L', 'R', 'r', '6', '4', 0,
  /* 3361 */ 'N', 'O', 'R', 'r', '6', '4', 0,
  /* 3368 */ 'X', 'O', 'R', 'r', '6', '4', 0,
  /* 3375 */ 'I', 'L', 'H', 'U', 'r', '6', '4', 0,
  /* 3383 */ 'E', 'Q', 'V', 'r', '6', '4', 0,
  /* 3390 */ 'X', 'S', 'H', 'W', 'r', '6', '4', 0,
  /* 3398 */ 'A', 'D', 'D', 'X', 'r', '6', '4', 0,
  /* 3406 */ 'S', 'F', 'X', 'r', '6', '4', 0,
  /* 3413 */ 'L', 'Q', 'X', 'r', '6', '4', 0,
  /* 3420 */ 'S', 'T', 'Q', 'X', 'r', '6', '4', 0,
  /* 3428 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'r', '6', '4', 0,
  /* 3439 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'r', '1', '2', '8', '_', 'z', 'e', 'x', 't', '_', 'r', '6', '4', 0,
  /* 3461 */ 'A', 'N', 'D', 'f', 'a', 'b', 's', '6', '4', 0,
  /* 3471 */ 'A', 'N', 'D', 'H', 'I', 'i', '8', 'i', '1', '6', 0,
  /* 3482 */ 'O', 'R', 'H', 'I', 'i', '8', 'i', '1', '6', 0,
  /* 3492 */ 'L', 'Q', 'A', 'v', '8', 'i', '1', '6', 0,
  /* 3501 */ 'S', 'T', 'Q', 'A', 'v', '8', 'i', '1', '6', 0,
  /* 3511 */ 'S', 'H', 'U', 'F', 'B', 'v', '8', 'i', '1', '6', 0,
  /* 3522 */ 'S', 'E', 'L', 'B', 'v', '8', 'i', '1', '6', 0,
  /* 3532 */ 'C', 'N', 'T', 'B', 'v', '8', 'i', '1', '6', 0,
  /* 3542 */ 'A', 'N', 'D', 'C', 'v', '8', 'i', '1', '6', 0,
  /* 3552 */ 'O', 'R', 'C', 'v', '8', 'i', '1', '6', 0,
  /* 3561 */ 'N', 'A', 'N', 'D', 'v', '8', 'i', '1', '6', 0,
  /* 3571 */ 'L', 'Q', 'D', 'v', '8', 'i', '1', '6', 0,
  /* 3580 */ 'S', 'T', 'Q', 'D', 'v', '8', 'i', '1', '6', 0,
  /* 3590 */ 'R', 'O', 'T', 'M', 'A', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3602 */ 'G', 'B', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3611 */ 'M', 'P', 'Y', 'H', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3622 */ 'S', 'H', 'L', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3632 */ 'I', 'L', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3641 */ 'F', 'S', 'M', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3651 */ 'C', 'E', 'Q', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3661 */ 'C', 'G', 'T', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3671 */ 'C', 'L', 'G', 'T', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3682 */ 'R', 'O', 'T', 'H', 'v', '8', 'i', '1', '6', 0,
  /* 3692 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3705 */ 'F', 'S', 'M', 'B', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3716 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3728 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3740 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'B', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3755 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'B', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3769 */ 'R', 'O', 'T', 'M', 'A', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3782 */ 'A', 'N', 'D', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3793 */ 'S', 'H', 'L', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3804 */ 'C', 'E', 'Q', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3815 */ 'X', 'O', 'R', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3826 */ 'C', 'G', 'T', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3837 */ 'C', 'L', 'G', 'T', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3849 */ 'R', 'O', 'T', 'H', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3860 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3874 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3887 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3900 */ 'R', 'O', 'T', 'H', 'M', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3912 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3926 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3939 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'I', 'v', '8', 'i', '1', '6', 0,
  /* 3952 */ 'R', 'O', 'T', 'H', 'M', 'v', '8', 'i', '1', '6', 0,
  /* 3963 */ 'L', 'R', 'v', '8', 'i', '1', '6', 0,
  /* 3971 */ 'N', 'O', 'R', 'v', '8', 'i', '1', '6', 0,
  /* 3980 */ 'X', 'O', 'R', 'v', '8', 'i', '1', '6', 0,
  /* 3989 */ 'E', 'Q', 'V', 'v', '8', 'i', '1', '6', 0,
  /* 3998 */ 'L', 'Q', 'X', 'v', '8', 'i', '1', '6', 0,
  /* 4007 */ 'S', 'T', 'Q', 'X', 'v', '8', 'i', '1', '6', 0,
  /* 4017 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'v', '8', 'i', '1', '6', 0,
  /* 4030 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'v', '8', 'i', '1', '6', 0,
  /* 4042 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'v', '8', 'i', '1', '6', 0,
  /* 4054 */ 'M', 'P', 'Y', 'v', '8', 'i', '1', '6', 0,
  /* 4063 */ 'B', 'R', 'H', 'Z', 'v', '8', 'i', '1', '6', 0,
  /* 4073 */ 'B', 'R', 'H', 'N', 'Z', 'v', '8', 'i', '1', '6', 0,
  /* 4084 */ 'R', 'O', 'T', 'I', 'v', '4', 'i', '3', '2', '_', 'i', '1', '6', 0,
  /* 4098 */ 'R', 'O', 'T', 'I', 'r', '3', '2', '_', 'i', '1', '6', 0,
  /* 4110 */ 'F', 'S', 'M', '6', '4', 'r', '1', '6', 0,
  /* 4119 */ 'L', 'Q', 'A', 'r', '1', '6', 0,
  /* 4126 */ 'S', 'T', 'Q', 'A', 'r', '1', '6', 0,
  /* 4134 */ 'S', 'E', 'L', 'B', 'r', '1', '6', 0,
  /* 4142 */ 'A', 'N', 'D', 'C', 'r', '1', '6', 0,
  /* 4150 */ 'O', 'R', 'C', 'r', '1', '6', 0,
  /* 4157 */ 'N', 'A', 'N', 'D', 'r', '1', '6', 0,
  /* 4165 */ 'L', 'Q', 'D', 'r', '1', '6', 0,
  /* 4172 */ 'S', 'T', 'Q', 'D', 'r', '1', '6', 0,
  /* 4180 */ 'R', 'O', 'T', 'M', 'A', 'H', 'r', '1', '6', 0,
  /* 4190 */ 'X', 'S', 'B', 'H', 'r', '1', '6', 0,
  /* 4198 */ 'S', 'F', 'H', 'r', '1', '6', 0,
  /* 4205 */ 'S', 'H', 'L', 'H', 'r', '1', '6', 0,
  /* 4213 */ 'I', 'L', 'H', 'r', '1', '6', 0,
  /* 4220 */ 'C', 'E', 'Q', 'H', 'r', '1', '6', 0,
  /* 4228 */ 'C', 'G', 'T', 'H', 'r', '1', '6', 0,
  /* 4236 */ 'C', 'L', 'G', 'T', 'H', 'r', '1', '6', 0,
  /* 4245 */ 'R', 'O', 'T', 'H', 'r', '1', '6', 0,
  /* 4253 */ 'R', 'O', 'T', 'M', 'A', 'H', 'I', 'r', '1', '6', 0,
  /* 4264 */ 'A', 'N', 'D', 'H', 'I', 'r', '1', '6', 0,
  /* 4273 */ 'S', 'F', 'H', 'I', 'r', '1', '6', 0,
  /* 4281 */ 'S', 'H', 'L', 'H', 'I', 'r', '1', '6', 0,
  /* 4290 */ 'C', 'E', 'Q', 'H', 'I', 'r', '1', '6', 0,
  /* 4299 */ 'X', 'O', 'R', 'H', 'I', 'r', '1', '6', 0,
  /* 4308 */ 'C', 'G', 'T', 'H', 'I', 'r', '1', '6', 0,
  /* 4317 */ 'C', 'L', 'G', 'T', 'H', 'I', 'r', '1', '6', 0,
  /* 4327 */ 'R', 'O', 'T', 'H', 'I', 'r', '1', '6', 0,
  /* 4336 */ 'R', 'O', 'T', 'H', 'M', 'I', 'r', '1', '6', 0,
  /* 4346 */ 'M', 'P', 'Y', 'U', 'I', 'r', '1', '6', 0,
  /* 4355 */ 'M', 'P', 'Y', 'I', 'r', '1', '6', 0,
  /* 4363 */ 'R', 'O', 'T', 'H', 'M', 'r', '1', '6', 0,
  /* 4372 */ 'F', 'S', 'M', 'r', '1', '6', 0,
  /* 4379 */ 'L', 'R', 'r', '1', '6', 0,
  /* 4385 */ 'N', 'O', 'R', 'r', '1', '6', 0,
  /* 4392 */ 'X', 'O', 'R', 'r', '1', '6', 0,
  /* 4399 */ 'M', 'P', 'Y', 'S', 'r', '1', '6', 0,
  /* 4407 */ 'M', 'P', 'Y', 'U', 'r', '1', '6', 0,
  /* 4415 */ 'E', 'Q', 'V', 'r', '1', '6', 0,
  /* 4422 */ 'X', 'S', 'H', 'W', 'r', '1', '6', 0,
  /* 4430 */ 'L', 'Q', 'X', 'r', '1', '6', 0,
  /* 4437 */ 'S', 'T', 'Q', 'X', 'r', '1', '6', 0,
  /* 4445 */ 'M', 'P', 'Y', 'r', '1', '6', 0,
  /* 4452 */ 'B', 'R', 'H', 'Z', 'r', '1', '6', 0,
  /* 4460 */ 'B', 'R', 'H', 'N', 'Z', 'r', '1', '6', 0,
  /* 4469 */ 'G', 'B', 'v', '4', 'i', '3', '2', '_', 'r', '1', '6', 0,
  /* 4481 */ 'G', 'B', 'H', 'v', '8', 'i', '1', '6', '_', 'r', '1', '6', 0,
  /* 4494 */ 'F', 'S', 'M', 'H', 'v', '8', 'i', '1', '6', '_', 'r', '1', '6', 0,
  /* 4508 */ 'G', 'B', 'B', 'v', '1', '6', 'i', '8', '_', 'r', '1', '6', 0,
  /* 4521 */ 'F', 'S', 'M', 'B', 'v', '1', '6', 'i', '8', '_', 'r', '1', '6', 0,
  /* 4535 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'r', '1', '2', '8', '_', 'z', 'e', 'x', 't', '_', 'r', '1', '6', 0,
  /* 4557 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'I', 'i', '1', '2', '8', 0,
  /* 4569 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'i', '1', '2', '8', 0,
  /* 4580 */ 'L', 'Q', 'A', 'r', '1', '2', '8', 0,
  /* 4588 */ 'S', 'T', 'Q', 'A', 'r', '1', '2', '8', 0,
  /* 4597 */ 'S', 'E', 'L', 'B', 'r', '1', '2', '8', 0,
  /* 4606 */ 'A', 'N', 'D', 'C', 'r', '1', '2', '8', 0,
  /* 4615 */ 'O', 'R', 'C', 'r', '1', '2', '8', 0,
  /* 4623 */ 'N', 'A', 'N', 'D', 'r', '1', '2', '8', 0,
  /* 4632 */ 'L', 'Q', 'D', 'r', '1', '2', '8', 0,
  /* 4640 */ 'S', 'T', 'Q', 'D', 'r', '1', '2', '8', 0,
  /* 4649 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'r', '1', '2', '8', 0,
  /* 4661 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'r', '1', '2', '8', 0,
  /* 4672 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'r', '1', '2', '8', 0,
  /* 4683 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'B', 'I', 'r', '1', '2', '8', 0,
  /* 4697 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'B', 'I', 'r', '1', '2', '8', 0,
  /* 4710 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'I', 'r', '1', '2', '8', 0,
  /* 4723 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'I', 'r', '1', '2', '8', 0,
  /* 4735 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'r', '1', '2', '8', 0,
  /* 4748 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'I', 'r', '1', '2', '8', 0,
  /* 4760 */ 'L', 'R', 'r', '1', '2', '8', 0,
  /* 4767 */ 'N', 'O', 'R', 'r', '1', '2', '8', 0,
  /* 4775 */ 'X', 'O', 'R', 'r', '1', '2', '8', 0,
  /* 4783 */ 'E', 'Q', 'V', 'r', '1', '2', '8', 0,
  /* 4791 */ 'L', 'Q', 'X', 'r', '1', '2', '8', 0,
  /* 4799 */ 'S', 'T', 'Q', 'X', 'r', '1', '2', '8', 0,
  /* 4808 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'r', '1', '2', '8', 0,
  /* 4820 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'r', '1', '2', '8', 0,
  /* 4831 */ 'L', 'Q', 'A', 'v', '1', '6', 'i', '8', 0,
  /* 4840 */ 'S', 'T', 'Q', 'A', 'v', '1', '6', 'i', '8', 0,
  /* 4850 */ 'G', 'B', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4859 */ 'S', 'H', 'U', 'F', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4870 */ 'S', 'E', 'L', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4880 */ 'F', 'S', 'M', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4890 */ 'C', 'E', 'Q', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4900 */ 'C', 'G', 'T', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4910 */ 'C', 'L', 'G', 'T', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4921 */ 'C', 'N', 'T', 'B', 'v', '1', '6', 'i', '8', 0,
  /* 4931 */ 'A', 'N', 'D', 'C', 'v', '1', '6', 'i', '8', 0,
  /* 4941 */ 'O', 'R', 'C', 'v', '1', '6', 'i', '8', 0,
  /* 4950 */ 'N', 'A', 'N', 'D', 'v', '1', '6', 'i', '8', 0,
  /* 4960 */ 'L', 'Q', 'D', 'v', '1', '6', 'i', '8', 0,
  /* 4969 */ 'S', 'T', 'Q', 'D', 'v', '1', '6', 'i', '8', 0,
  /* 4979 */ 'X', 'S', 'B', 'H', 'v', '1', '6', 'i', '8', 0,
  /* 4989 */ 'A', 'N', 'D', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5000 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5013 */ 'F', 'S', 'M', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5024 */ 'C', 'E', 'Q', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5035 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5047 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5059 */ 'X', 'O', 'R', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5070 */ 'C', 'G', 'T', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5081 */ 'C', 'L', 'G', 'T', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5093 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5108 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'B', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5122 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'I', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5136 */ 'S', 'H', 'L', 'Q', 'B', 'I', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5149 */ 'R', 'O', 'T', 'Q', 'B', 'I', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5162 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5176 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5189 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'I', 'v', '1', '6', 'i', '8', 0,
  /* 5202 */ 'L', 'R', 'v', '1', '6', 'i', '8', 0,
  /* 5210 */ 'N', 'O', 'R', 'v', '1', '6', 'i', '8', 0,
  /* 5219 */ 'X', 'O', 'R', 'v', '1', '6', 'i', '8', 0,
  /* 5228 */ 'E', 'Q', 'V', 'v', '1', '6', 'i', '8', 0,
  /* 5237 */ 'L', 'Q', 'X', 'v', '1', '6', 'i', '8', 0,
  /* 5246 */ 'S', 'T', 'Q', 'X', 'v', '1', '6', 'i', '8', 0,
  /* 5256 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'v', '1', '6', 'i', '8', 0,
  /* 5269 */ 'S', 'H', 'L', 'Q', 'B', 'Y', 'v', '1', '6', 'i', '8', 0,
  /* 5281 */ 'R', 'O', 'T', 'Q', 'B', 'Y', 'v', '1', '6', 'i', '8', 0,
  /* 5293 */ 'R', 'O', 'T', 'I', 'v', '4', 'i', '3', '2', '_', 'i', '8', 0,
  /* 5306 */ 'R', 'O', 'T', 'I', 'r', '3', '2', '_', 'i', '8', 0,
  /* 5317 */ 'L', 'Q', 'A', 'r', '8', 0,
  /* 5323 */ 'S', 'T', 'Q', 'A', 'r', '8', 0,
  /* 5330 */ 'S', 'E', 'L', 'B', 'r', '8', 0,
  /* 5337 */ 'C', 'E', 'Q', 'B', 'r', '8', 0,
  /* 5344 */ 'C', 'G', 'T', 'B', 'r', '8', 0,
  /* 5351 */ 'C', 'L', 'G', 'T', 'B', 'r', '8', 0,
  /* 5359 */ 'A', 'N', 'D', 'C', 'r', '8', 0,
  /* 5366 */ 'O', 'R', 'C', 'r', '8', 0,
  /* 5372 */ 'N', 'A', 'N', 'D', 'r', '8', 0,
  /* 5379 */ 'L', 'Q', 'D', 'r', '8', 0,
  /* 5385 */ 'S', 'T', 'Q', 'D', 'r', '8', 0,
  /* 5392 */ 'X', 'S', 'B', 'H', 'r', '8', 0,
  /* 5399 */ 'I', 'L', 'H', 'r', '8', 0,
  /* 5405 */ 'A', 'N', 'D', 'B', 'I', 'r', '8', 0,
  /* 5413 */ 'C', 'E', 'Q', 'B', 'I', 'r', '8', 0,
  /* 5421 */ 'X', 'O', 'R', 'B', 'I', 'r', '8', 0,
  /* 5429 */ 'C', 'G', 'T', 'B', 'I', 'r', '8', 0,
  /* 5437 */ 'C', 'L', 'G', 'T', 'B', 'I', 'r', '8', 0,
  /* 5446 */ 'L', 'R', 'r', '8', 0,
  /* 5451 */ 'N', 'O', 'R', 'r', '8', 0,
  /* 5457 */ 'X', 'O', 'R', 'r', '8', 0,
  /* 5463 */ 'E', 'Q', 'V', 'r', '8', 0,
  /* 5469 */ 'L', 'Q', 'X', 'r', '8', 0,
  /* 5475 */ 'S', 'T', 'Q', 'X', 'r', '8', 0,
  /* 5482 */ 'R', 'O', 'T', 'Q', 'M', 'B', 'Y', 'I', 'r', '1', '2', '8', '_', 'z', 'e', 'x', 't', '_', 'r', '8', 0,
  /* 5503 */ 'H', 'B', 'R', 'A', 0,
  /* 5508 */ 'A', 'B', 'S', 'D', 'B', 0,
  /* 5514 */ 'A', 'V', 'G', 'B', 0,
  /* 5519 */ 'S', 'U', 'M', 'B', 0,
  /* 5524 */ 'B', 'I', 'S', 'L', 'E', 'D', '_', '0', 'D', 0,
  /* 5534 */ 'C', 'B', 'D', 0,
  /* 5538 */ 'C', 'D', 'D', 0,
  /* 5542 */ 'B', 'I', 'S', 'L', 'E', 'D', '_', 'E', 'D', 0,
  /* 5552 */ 'C', 'H', 'D', 0,
  /* 5556 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 5569 */ 'C', 'W', 'D', 0,
  /* 5573 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 5586 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 5593 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 5603 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 5616 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 5631 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 5645 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 5659 */ 'B', 'I', 0,
  /* 5662 */ 'P', 'H', 'I', 0,
  /* 5666 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5675 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5688 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5697 */ 'H', 'B', 'R', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 5707 */ 'K', 'I', 'L', 'L', 0,
  /* 5712 */ 'B', 'R', 'A', 'S', 'L', 0,
  /* 5718 */ 'B', 'I', 'S', 'L', 0,
  /* 5723 */ 'B', 'R', 'S', 'L', 0,
  /* 5728 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 5738 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', 0,
  /* 5755 */ 'E', 'N', 'O', 'P', 0,
  /* 5760 */ 'L', 'N', 'O', 'P', 0,
  /* 5765 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', 0,
  /* 5780 */ 'B', 'R', 0,
  /* 5783 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 5800 */ 'R', 'E', 'T', 0,
  /* 5804 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 5819 */ 'C', 'B', 'X', 0,
  /* 5823 */ 'C', 'D', 'X', 0,
  /* 5827 */ 'C', 'H', 'X', 0,
  /* 5831 */ 'C', 'W', 'X', 0,
  /* 5835 */ 'C', 'O', 'P', 'Y', 0,
  /* 5840 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 0,
  /* 5849 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'a', 0,
  /* 5859 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'd', 'f', 'a', 0,
  /* 5870 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'h', 'h', 'a', 0,
  /* 5884 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'm', 'a', 0,
  /* 5895 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'd', 'f', 'm', 'a', 0,
  /* 5907 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'd', 'f', 'n', 'm', 'a', 0,
  /* 5920 */ 'I', 'L', 'A', 'l', 's', 'a', 0,
  /* 5927 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'a', 0,
  /* 5939 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'e', 'q', 'b', 0,
  /* 5951 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 't', 'b', 0,
  /* 5963 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'l', 'g', 't', 'b', 0,
  /* 5976 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'n', 'd', 'c', 0,
  /* 5988 */ 'M', 'P', 'Y', 'H', 'H', 'A', 'v', 'e', 'c', 0,
  /* 5998 */ 'F', 'E', 'S', 'D', 'v', 'e', 'c', 0,
  /* 6006 */ 'S', 'F', 'v', 'e', 'c', 0,
  /* 6012 */ 'S', 'F', 'H', 'v', 'e', 'c', 0,
  /* 6019 */ 'S', 'F', 'I', 'v', 'e', 'c', 0,
  /* 6026 */ 'A', 'H', 'I', 'v', 'e', 'c', 0,
  /* 6033 */ 'S', 'F', 'H', 'I', 'v', 'e', 'c', 0,
  /* 6041 */ 'M', 'P', 'Y', 'U', 'I', 'v', 'e', 'c', 0,
  /* 6050 */ 'M', 'P', 'Y', 'I', 'v', 'e', 'c', 0,
  /* 6058 */ 'M', 'P', 'Y', 'H', 'H', 'A', 'U', 'v', 'e', 'c', 0,
  /* 6069 */ 'B', 'G', 'X', 'v', 'e', 'c', 0,
  /* 6076 */ 'X', 'O', 'R', 'f', 'n', 'e', 'g', 'v', 'e', 'c', 0,
  /* 6087 */ 'A', 'N', 'D', 'f', 'a', 'b', 's', 'v', 'e', 'c', 0,
  /* 6098 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'o', 'r', 'c', 0,
  /* 6109 */ 'S', 'H', 'U', 'F', 'B', 'g', 'p', 'r', 'c', 0,
  /* 6119 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'n', 'd', 0,
  /* 6130 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'n', 'a', 'n', 'd', 0,
  /* 6142 */ 'S', 'E', 'L', 'B', 'v', '4', 'f', '3', '2', '_', 'c', 'o', 'n', 'd', 0,
  /* 6157 */ 'S', 'E', 'L', 'B', 'f', '3', '2', '_', 'c', 'o', 'n', 'd', 0,
  /* 6170 */ 'S', 'E', 'L', 'B', 'v', '4', 'i', '3', '2', '_', 'c', 'o', 'n', 'd', 0,
  /* 6185 */ 'S', 'E', 'L', 'B', 'r', '3', '2', '_', 'c', 'o', 'n', 'd', 0,
  /* 6198 */ 'S', 'E', 'L', 'B', 'f', '6', '4', '_', 'c', 'o', 'n', 'd', 0,
  /* 6211 */ 'S', 'E', 'L', 'B', 'v', '2', 'i', '6', '4', '_', 'c', 'o', 'n', 'd', 0,
  /* 6226 */ 'S', 'E', 'L', 'B', 'r', '6', '4', '_', 'c', 'o', 'n', 'd', 0,
  /* 6239 */ 'S', 'E', 'L', 'B', 'v', '8', 'i', '1', '6', '_', 'c', 'o', 'n', 'd', 0,
  /* 6254 */ 'S', 'E', 'L', 'B', 'r', '1', '6', '_', 'c', 'o', 'n', 'd', 0,
  /* 6267 */ 'S', 'E', 'L', 'B', 'v', '1', '6', 'i', '8', '_', 'c', 'o', 'n', 'd', 0,
  /* 6282 */ 'S', 'E', 'L', 'B', 'r', '8', '_', 'c', 'o', 'n', 'd', 0,
  /* 6294 */ 'S', 'E', 'L', 'B', 'v', '4', 'i', '3', '2', '_', 'v', 'c', 'o', 'n', 'd', 0,
  /* 6310 */ 'S', 'E', 'L', 'B', 'v', '2', 'i', '6', '4', '_', 'v', 'c', 'o', 'n', 'd', 0,
  /* 6326 */ 'S', 'E', 'L', 'B', 'v', '8', 'i', '1', '6', '_', 'v', 'c', 'o', 'n', 'd', 0,
  /* 6342 */ 'S', 'E', 'L', 'B', 'v', '1', '6', 'i', '8', '_', 'v', 'c', 'o', 'n', 'd', 0,
  /* 6358 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 's', 'f', 0,
  /* 6368 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'b', 'g', 0,
  /* 6378 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 0,
  /* 6388 */ 'X', 'S', 'W', 'D', 'r', '6', '4', '_', 'i', 'n', 'r', 'e', 'g', 0,
  /* 6402 */ 'M', 'P', 'Y', 'A', 'r', '3', '2', '_', 's', 'e', 'x', 't', 'i', 'n', 'r', 'e', 'g', 0,
  /* 6420 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'h', 0,
  /* 6430 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 's', 'f', 'h', 0,
  /* 6441 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'h', 'h', 0,
  /* 6454 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'e', 'q', 'h', 0,
  /* 6466 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 't', 'h', 0,
  /* 6478 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'l', 'g', 't', 'h', 0,
  /* 6491 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'h', 0,
  /* 6503 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'i', 0,
  /* 6513 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'n', 'd', 'b', 'i', 0,
  /* 6526 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'e', 'q', 'b', 'i', 0,
  /* 6539 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'o', 'r', 'b', 'i', 0,
  /* 6551 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'x', 'o', 'r', 'b', 'i', 0,
  /* 6564 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 't', 'b', 'i', 0,
  /* 6577 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'l', 'g', 't', 'b', 'i', 0,
  /* 6591 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'n', 'd', 'i', 0,
  /* 6603 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 's', 'f', 'i', 0,
  /* 6614 */ 'I', 'L', 'A', 'h', 'i', 0,
  /* 6620 */ 'I', 'L', 'H', 'U', 'h', 'i', 0,
  /* 6627 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'h', 'i', 0,
  /* 6638 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'n', 'd', 'h', 'i', 0,
  /* 6651 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 's', 'f', 'h', 'i', 0,
  /* 6663 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'e', 'q', 'h', 'i', 0,
  /* 6676 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'o', 'r', 'h', 'i', 0,
  /* 6688 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'x', 'o', 'r', 'h', 'i', 0,
  /* 6701 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 't', 'h', 'i', 0,
  /* 6714 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'l', 'g', 't', 'h', 'i', 0,
  /* 6728 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'e', 'q', 'i', 0,
  /* 6740 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'o', 'r', 'i', 0,
  /* 6751 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'x', 'o', 'r', 'i', 0,
  /* 6763 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 't', 'i', 0,
  /* 6775 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'l', 'g', 't', 'i', 0,
  /* 6788 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'u', 'i', 0,
  /* 6801 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'i', 0,
  /* 6813 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'm', 0,
  /* 6823 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'd', 'f', 'm', 0,
  /* 6834 */ 'I', 'L', 'A', 'l', 'o', 0,
  /* 6840 */ 'I', 'O', 'H', 'L', 'l', 'o', 0,
  /* 6847 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'e', 'q', 0,
  /* 6858 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'c', 'e', 'q', 0,
  /* 6870 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'c', 'm', 'e', 'q', 0,
  /* 6883 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'o', 'r', 0,
  /* 6893 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'n', 'o', 'r', 0,
  /* 6904 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'x', 'o', 'r', 0,
  /* 6915 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 's', 0,
  /* 6925 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'd', 'f', 's', 0,
  /* 6936 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'm', 's', 0,
  /* 6947 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'd', 'f', 'm', 's', 0,
  /* 6959 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'n', 'm', 's', 0,
  /* 6971 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'd', 'f', 'n', 'm', 's', 0,
  /* 6984 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 's', 0,
  /* 6996 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 't', 0,
  /* 7007 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'c', 'g', 't', 0,
  /* 7019 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'l', 'g', 't', 0,
  /* 7031 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'f', 'c', 'm', 'g', 't', 0,
  /* 7044 */ 'M', 'P', 'Y', 'A', 'r', '3', '2', '_', 's', 'e', 'x', 't', 0,
  /* 7057 */ 'R', 'O', 'T', 'r', '3', '2', '_', 'r', '1', '6', '_', 'a', 'n', 'y', 'e', 'x', 't', 0,
  /* 7075 */ 'R', 'O', 'T', 'r', '3', '2', '_', 'r', '8', '_', 'a', 'n', 'y', 'e', 'x', 't', 0,
  /* 7092 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'h', 'h', 'a', 'u', 0,
  /* 7107 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'h', 'h', 'u', 0,
  /* 7121 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 'u', 0,
  /* 7133 */ 'A', 'N', 'D', 'C', 'v', '1', '6', 'i', '8', '_', 'c', 'o', 'n', 'v', 0,
  /* 7148 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'a', 'd', 'd', 'x', 0,
  /* 7160 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 's', 'f', 'x', 0,
  /* 7171 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'b', 'g', 'x', 0,
  /* 7182 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'c', 'g', 'x', 0,
  /* 7193 */ 'C', 'e', 'l', 'l', 'S', 'D', 'K', 'm', 'p', 'y', 0,
};

extern const unsigned SPUInstrNameIndices[] = {
    5662U, 5728U, 5675U, 5688U, 5666U, 5707U, 5616U, 5631U, 
    5603U, 5645U, 5783U, 5593U, 5573U, 5835U, 5586U, 5804U, 
    5556U, 5508U, 1983U, 3398U, 3109U, 1261U, 5738U, 5765U, 
    4257U, 6026U, 4184U, 3594U, 492U, 1720U, 195U, 844U, 
    5405U, 4989U, 4606U, 4142U, 1639U, 3227U, 5359U, 4931U, 
    7133U, 2815U, 770U, 3542U, 3471U, 4264U, 3782U, 1383U, 
    1404U, 1726U, 929U, 2204U, 3461U, 6087U, 1373U, 4624U, 
    4158U, 1655U, 3243U, 5373U, 4951U, 2835U, 790U, 3562U, 
    5514U, 1587U, 4833U, 684U, 6069U, 1683U, 3273U, 2873U, 
    818U, 5659U, 5718U, 0U, 5524U, 10U, 5542U, 5780U, 
    5504U, 5712U, 4460U, 4073U, 4452U, 4063U, 2020U, 1354U, 
    5723U, 2028U, 1364U, 5534U, 5819U, 5538U, 2658U, 5823U, 
    2734U, 5413U, 5024U, 5337U, 4890U, 4290U, 3804U, 4220U, 
    3651U, 1758U, 1000U, 1860U, 1137U, 656U, 391U, 664U, 
    401U, 5429U, 5070U, 5344U, 4900U, 4308U, 3826U, 4228U, 
    3661U, 504U, 1782U, 250U, 1020U, 1894U, 1182U, 1689U, 
    3279U, 2881U, 826U, 5552U, 5827U, 5437U, 5081U, 5351U, 
    4910U, 4317U, 3837U, 4236U, 3671U, 1798U, 1030U, 1908U, 
    1191U, 2013U, 1345U, 4921U, 760U, 3532U, 476U, 175U, 
    484U, 185U, 5569U, 469U, 5831U, 649U, 5840U, 7148U, 
    6420U, 6627U, 6503U, 6119U, 6513U, 5976U, 6638U, 6591U, 
    6368U, 7171U, 6847U, 5939U, 6526U, 6454U, 6663U, 6728U, 
    6378U, 6996U, 5951U, 6564U, 6466U, 6701U, 6763U, 7182U, 
    7019U, 5963U, 6577U, 6478U, 6714U, 6775U, 5859U, 6823U, 
    5895U, 6947U, 5907U, 6971U, 6925U, 5849U, 6858U, 7007U, 
    6870U, 7031U, 6813U, 5884U, 6936U, 6959U, 6915U, 7193U, 
    5927U, 6491U, 6441U, 5870U, 7092U, 7107U, 6801U, 6984U, 
    7121U, 6788U, 6130U, 6893U, 6883U, 6539U, 6098U, 6676U, 
    6740U, 6358U, 6430U, 6651U, 6603U, 7160U, 6904U, 6551U, 
    6688U, 6751U, 2725U, 2561U, 5755U, 4783U, 80U, 2274U, 
    2363U, 4415U, 71U, 2265U, 2354U, 1968U, 31U, 2225U, 
    2314U, 3383U, 51U, 2245U, 2334U, 5463U, 101U, 2295U, 
    2384U, 5228U, 90U, 2284U, 2373U, 3100U, 40U, 2234U, 
    2323U, 1242U, 20U, 2214U, 2303U, 3989U, 60U, 2254U, 
    2343U, 411U, 2615U, 2392U, 109U, 532U, 591U, 540U, 
    599U, 461U, 5998U, 498U, 229U, 424U, 2628U, 2400U, 
    117U, 576U, 2718U, 2552U, 318U, 526U, 2686U, 2520U, 
    286U, 2635U, 2409U, 583U, 327U, 2704U, 608U, 337U, 
    561U, 625U, 4110U, 1573U, 5013U, 2902U, 865U, 3705U, 
    4880U, 4521U, 3641U, 4494U, 4372U, 1845U, 1118U, 570U, 
    2712U, 2544U, 310U, 4850U, 4508U, 2151U, 3602U, 4481U, 
    2083U, 742U, 4469U, 2035U, 5503U, 5697U, 1766U, 1867U, 
    1790U, 1901U, 1807U, 1916U, 417U, 2621U, 6614U, 6834U, 
    5920U, 1592U, 3197U, 2766U, 682U, 617U, 6620U, 1952U, 
    3375U, 3090U, 1222U, 4213U, 5399U, 3632U, 520U, 2680U, 
    1839U, 3349U, 3056U, 1110U, 512U, 6840U, 1824U, 3046U, 
    1091U, 5760U, 431U, 2643U, 4580U, 4119U, 1608U, 3204U, 
    5317U, 4831U, 2419U, 2775U, 126U, 702U, 3492U, 446U, 
    2665U, 4632U, 4165U, 1662U, 3250U, 5379U, 4960U, 2449U, 
    2844U, 156U, 799U, 3571U, 634U, 2741U, 4791U, 4430U, 
    1998U, 3413U, 5469U, 5237U, 2572U, 3128U, 348U, 1280U, 
    3998U, 549U, 2692U, 4760U, 4379U, 1874U, 3355U, 5446U, 
    5202U, 2528U, 3064U, 294U, 1146U, 3963U, 1623U, 7044U, 
    6402U, 721U, 1931U, 6058U, 1582U, 5988U, 1942U, 1210U, 
    1703U, 3611U, 1712U, 834U, 4355U, 6050U, 4399U, 1172U, 
    4346U, 6041U, 4407U, 1960U, 1232U, 4445U, 4054U, 4623U, 
    4157U, 1654U, 3242U, 5372U, 4950U, 2834U, 789U, 3561U, 
    4767U, 4385U, 1880U, 3361U, 5451U, 5210U, 3072U, 1154U, 
    3971U, 5422U, 5060U, 4615U, 4150U, 1647U, 3235U, 5366U, 
    4941U, 2825U, 780U, 3552U, 3482U, 4300U, 3816U, 1394U, 
    1414U, 1775U, 1011U, 1299U, 555U, 2698U, 4768U, 4386U, 
    1881U, 3362U, 5452U, 5211U, 2536U, 3073U, 302U, 1155U, 
    3972U, 5800U, 4327U, 2138U, 3849U, 4336U, 3900U, 4363U, 
    3952U, 4245U, 2126U, 3682U, 1816U, 4098U, 5306U, 1041U, 
    4084U, 5293U, 4253U, 3769U, 4180U, 3590U, 1439U, 1469U, 
    1453U, 1423U, 1599U, 691U, 1749U, 989U, 1852U, 1127U, 
    4723U, 3326U, 5149U, 2993U, 966U, 3887U, 4672U, 3304U, 
    5047U, 2925U, 888U, 3728U, 2164U, 2065U, 2047U, 2096U, 
    4557U, 5189U, 3033U, 273U, 1078U, 3939U, 3184U, 4569U, 
    5281U, 2603U, 3172U, 379U, 1333U, 4042U, 4710U, 3314U, 
    5122U, 2966U, 939U, 3860U, 4649U, 3293U, 5000U, 2889U, 
    852U, 3692U, 4683U, 5093U, 2937U, 900U, 3740U, 4735U, 
    4535U, 2182U, 3439U, 5482U, 3337U, 5162U, 3006U, 1051U, 
    3912U, 4808U, 3428U, 5256U, 3147U, 1308U, 4017U, 1924U, 
    7057U, 7075U, 1201U, 6157U, 6198U, 4597U, 4134U, 6254U, 
    1631U, 6185U, 3219U, 6226U, 5330U, 6282U, 4870U, 6267U, 
    6342U, 2805U, 6211U, 6310U, 6142U, 750U, 6170U, 6294U, 
    3522U, 6239U, 6326U, 4273U, 6033U, 4198U, 6012U, 1734U, 
    6019U, 1991U, 3406U, 3119U, 1271U, 1677U, 6006U, 4281U, 
    3793U, 4205U, 2114U, 3622U, 1741U, 979U, 5136U, 2494U, 
    2980U, 237U, 953U, 3874U, 4661U, 5035U, 2468U, 2913U, 
    203U, 876U, 3716U, 4697U, 5108U, 2480U, 2952U, 215U, 
    915U, 3755U, 4748U, 5176U, 2507U, 3020U, 260U, 1065U, 
    3926U, 4820U, 5269U, 2591U, 3160U, 367U, 1321U, 4030U, 
    1832U, 1101U, 6109U, 4859U, 1558U, 2438U, 1513U, 2794U, 
    1528U, 145U, 1483U, 731U, 1498U, 3511U, 1543U, 438U, 
    2650U, 4588U, 4126U, 1615U, 3211U, 5323U, 4840U, 2428U, 
    2784U, 135U, 711U, 3501U, 453U, 2672U, 4640U, 4172U, 
    1669U, 3257U, 5385U, 4969U, 2458U, 2853U, 165U, 808U, 
    3580U, 641U, 2748U, 4799U, 4437U, 2005U, 3420U, 5475U, 
    5246U, 2581U, 3137U, 357U, 1289U, 4007U, 5519U, 5421U, 
    5059U, 4299U, 3815U, 1774U, 1010U, 672U, 2756U, 6076U, 
    4775U, 4392U, 1887U, 3368U, 5457U, 5219U, 3081U, 1163U, 
    3980U, 4190U, 1695U, 3285U, 5392U, 4979U, 4422U, 1975U, 
    3390U, 1251U, 3265U, 6388U, 2863U, 
};

static inline void InitSPUMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(SPUInsts, SPUInstrNameIndices, SPUInstrNameData, 757);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct SPUGenInstrInfo : public TargetInstrInfoImpl {
  explicit SPUGenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc SPUInsts[];
extern const unsigned SPUInstrNameIndices[];
extern const char SPUInstrNameData[];
SPUGenInstrInfo::SPUGenInstrInfo(int SO, int DO)
  : TargetInstrInfoImpl(SO, DO) {
  InitMCInstrInfo(SPUInsts, SPUInstrNameIndices, SPUInstrNameData, 757);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

