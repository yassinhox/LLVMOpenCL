
LSR on loop %bb221:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp225 = icmp slt i32 %tmp224, %tmp220) IV={0,+,1}<%bb221>
IV Chain#1 Head: (  %tmp229 = load i8* %tmp228, align 1) IV={{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>
IV Chain#0  Inc: (  %tmp222 = phi i64 [ %tmp231, %bb230 ], [ 0, %bb219 ]) IV+1
Chain:   %tmp225 = icmp slt i32 %tmp224, %tmp220 Cost: 0
LSR has identified the following interesting factors and types: *1, *-1, (i64), (i32)
LSR is examining the following fixup sites:
  UserInst=%tmp229, OperandValToReplace=%tmp228, LUIdx=0
  UserInst=%tmp225, OperandValToReplace=%tmp224, LUIdx=1
  UserInst=%tmp243, OperandValToReplace=%tmp242, LUIdx=2
LSR found 3 uses:
LSR is examining the following uses:
  LSR Use: Kind=Address of i8, Offsets={0}, widest fixup type: i8*
    reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb221>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>,+,-1}<%bb221>)
Generating cross-use offsets for {{(undef + @global3),+,1}<%bb194>,+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {{(undef + @global3),+,1}<%bb194>,+,1}<%bb221>
Skipping cross-use reuse for {{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>
Generating cross-use offsets for {{@global3,+,1}<%bb194>,+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {{@global3,+,1}<%bb194>,+,1}<%bb221>
Skipping cross-use reuse for {{(5129 + @global3),+,1}<%bb194>,+,1}<%bb221>
Generating cross-use offsets for undef: 0 5129
Skipping cross-use reuse for undef
Skipping cross-use reuse for (5129 + undef)
Generating cross-use offsets for {{0,+,1}<%bb194>,+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {{0,+,1}<%bb194>,+,1}<%bb221>
Skipping cross-use reuse for {{5129,+,1}<%bb194>,+,1}<%bb221>
Generating cross-use offsets for @global3: 0 5129
Skipping cross-use reuse for @global3
Skipping cross-use reuse for (5129 + @global3)
Generating cross-use offsets for {@global3,+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {@global3,+,1}<%bb221>
Skipping cross-use reuse for {(5129 + @global3),+,1}<%bb221>
Generating cross-use offsets for {0,+,1}<%bb194>: 0 5129
Skipping cross-use reuse for {0,+,1}<%bb194>
Skipping cross-use reuse for {5129,+,1}<%bb194>
Generating cross-use offsets for {@global3,+,1}<%bb194>: 0 5129
Skipping cross-use reuse for {@global3,+,1}<%bb194>
Skipping cross-use reuse for {(5129 + @global3),+,1}<%bb194>
Generating cross-use offsets for {0,+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {0,+,1}<%bb221>
Skipping cross-use reuse for {5129,+,1}<%bb221>
Generating cross-use offsets for {{undef,+,1}<%bb194>,+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {{undef,+,1}<%bb194>,+,1}<%bb221>
Skipping cross-use reuse for {{(5129 + undef),+,1}<nw><%bb194>,+,1}<%bb221>
Generating cross-use offsets for {undef,+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {undef,+,1}<%bb221>
Skipping cross-use reuse for {(5129 + undef),+,1}<%bb221>
Generating cross-use offsets for {undef,+,1}<%bb194>: 0 5129
Skipping cross-use reuse for {undef,+,1}<%bb194>
Skipping cross-use reuse for {(5129 + undef),+,1}<nw><%bb194>
Generating cross-use offsets for {(undef + @global3),+,1}<%bb221>: 0 5129
Skipping cross-use reuse for {(undef + @global3),+,1}<%bb221>
Skipping cross-use reuse for {(5129 + undef + @global3),+,1}<%bb221>
Generating cross-use offsets for (undef + @global3): 0 5129
Skipping cross-use reuse for (undef + @global3)
Skipping cross-use reuse for (5129 + undef + @global3)
Generating cross-use offsets for {(undef + @global3),+,1}<%bb194>: 0 5129
Skipping cross-use reuse for {(undef + @global3),+,1}<%bb194>
Skipping cross-use reuse for {(5129 + undef + @global3),+,1}<nw><%bb194>
Generating cross-use offsets for {{(-1 * @global3),+,-1}<%bb194>,+,-1}<%bb221>: -5129 0
Skipping cross-use reuse for {{(-5129 + (-1 * @global3)),+,-1}<%bb194>,+,-1}<%bb221>
Skipping cross-use reuse for {{(-1 * @global3),+,-1}<%bb194>,+,-1}<%bb221>
Generating cross-use offsets for {{0,+,-1}<%bb194>,+,-1}<%bb221>: -5129 0
Skipping cross-use reuse for {{-5129,+,-1}<%bb194>,+,-1}<%bb221>
Skipping cross-use reuse for {{0,+,-1}<%bb194>,+,-1}<%bb221>
Generating cross-use offsets for {(-1 * @global3),+,-1}<%bb221>: -5129 0
Skipping cross-use reuse for {(-5129 + (-1 * @global3)),+,-1}<%bb221>
Skipping cross-use reuse for {(-1 * @global3),+,-1}<%bb221>
Generating cross-use offsets for {0,+,-1}<%bb194>: -5129 0
Skipping cross-use reuse for {-5129,+,-1}<%bb194>
Skipping cross-use reuse for {0,+,-1}<%bb194>
Generating cross-use offsets for {(-1 * @global3),+,-1}<%bb194>: -5129 0
Skipping cross-use reuse for {(-5129 + (-1 * @global3)),+,-1}<%bb194>
Skipping cross-use reuse for {(-1 * @global3),+,-1}<%bb194>
Generating cross-use offsets for {0,+,-1}<%bb221>: -5129 0
Skipping cross-use reuse for {-5129,+,-1}<%bb221>
Skipping cross-use reuse for {0,+,-1}<%bb221>
Generating cross-use offsets for {{(-1 * undef),+,-1}<%bb194>,+,-1}<%bb221>: -5129 0
Skipping cross-use reuse for {{(-5129 + (-1 * undef)),+,-1}<nw><%bb194>,+,-1}<%bb221>
Skipping cross-use reuse for {{(-1 * undef),+,-1}<%bb194>,+,-1}<%bb221>
Generating cross-use offsets for {(-1 * undef),+,-1}<%bb221>: -5129 0
Skipping cross-use reuse for {(-5129 + (-1 * undef)),+,-1}<%bb221>
Skipping cross-use reuse for {(-1 * undef),+,-1}<%bb221>
Generating cross-use offsets for {(-1 * undef),+,-1}<%bb194>: -5129 0
Skipping cross-use reuse for {(-5129 + (-1 * undef)),+,-1}<nw><%bb194>
Skipping cross-use reuse for {(-1 * undef),+,-1}<%bb194>

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Address of i8, Offsets={0}, widest fixup type: i8*
    reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
    reg({{(undef + @global3),+,1}<%bb194>,+,1}<%bb221>) + reg(5129)
    reg({{@global3,+,1}<%bb194>,+,1}<%bb221>) + reg(5129) + reg(undef)
    reg({{0,+,1}<%bb194>,+,1}<%bb221>) + reg(5129) + reg(undef) + reg(@global3)
    reg({@global3,+,1}<%bb221>) + reg(5129) + reg(undef) + reg({0,+,1}<%bb194>)
    reg({@global3,+,1}<%bb194>) + reg(5129) + reg(undef) + reg({0,+,1}<%bb221>)
    reg({{undef,+,1}<%bb194>,+,1}<%bb221>) + reg(5129) + reg(@global3)
    reg({undef,+,1}<%bb221>) + reg(5129) + reg(@global3) + reg({0,+,1}<%bb194>)
    reg({undef,+,1}<%bb194>) + reg(5129) + reg(@global3) + reg({0,+,1}<%bb221>)
    reg({(undef + @global3),+,1}<%bb221>) + reg(5129) + reg({0,+,1}<%bb194>)
    reg((undef + @global3)) + reg(5129) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    reg({(undef + @global3),+,1}<%bb194>) + reg(5129) + reg({0,+,1}<%bb221>)
    reg({{(5129 + @global3),+,1}<%bb194>,+,1}<%bb221>) + reg(undef)
    reg({{5129,+,1}<%bb194>,+,1}<%bb221>) + reg(undef) + reg(@global3)
    reg({5129,+,1}<%bb221>) + reg(undef) + reg(@global3) + reg({0,+,1}<%bb194>)
    reg({5129,+,1}<%bb194>) + reg(undef) + reg(@global3) + reg({0,+,1}<%bb221>)
    reg({(5129 + @global3),+,1}<%bb221>) + reg(undef) + reg({0,+,1}<%bb194>)
    reg((5129 + @global3)) + reg(undef) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    reg({(5129 + @global3),+,1}<%bb194>) + reg(undef) + reg({0,+,1}<%bb221>)
    reg({{(5129 + undef),+,1}<nw><%bb194>,+,1}<%bb221>) + reg(@global3)
    reg({(5129 + undef),+,1}<%bb221>) + reg(@global3) + reg({0,+,1}<%bb194>)
    reg((5129 + undef)) + reg(@global3) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    reg({(5129 + undef),+,1}<nw><%bb194>) + reg(@global3) + reg({0,+,1}<%bb221>)
    reg({(5129 + undef + @global3),+,1}<%bb221>) + reg({0,+,1}<%bb194>)
    reg((5129 + undef + @global3)) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    reg({(5129 + undef + @global3),+,1}<nw><%bb194>) + reg({0,+,1}<%bb221>)
    reg({{@global3,+,1}<%bb194>,+,1}<%bb221>) + reg((5129 + undef))
    reg({{0,+,1}<%bb194>,+,1}<%bb221>) + reg((5129 + undef + @global3))
    reg({@global3,+,1}<%bb221>) + reg({(5129 + undef),+,1}<nw><%bb194>)
    reg({{undef,+,1}<%bb194>,+,1}<%bb221>) + reg((5129 + @global3))
    reg({undef,+,1}<%bb221>) + reg({(5129 + @global3),+,1}<%bb194>)
    reg({(undef + @global3),+,1}<%bb221>) + reg({5129,+,1}<%bb194>)
    reg({{5129,+,1}<%bb194>,+,1}<%bb221>) + reg((undef + @global3))
    reg({5129,+,1}<%bb221>) + reg({(undef + @global3),+,1}<%bb194>)
    reg({(5129 + @global3),+,1}<%bb221>) + reg({undef,+,1}<%bb194>)
    reg({(5129 + undef),+,1}<%bb221>) + reg({@global3,+,1}<%bb194>)
    -1*reg({{(-5129 + (-1 * undef) + (-1 * @global3)),+,-1}<nw><%bb194>,+,-1}<%bb221>)
    reg(5129) + -1*reg({{(-1 * (undef + @global3)),+,-1}<%bb194>,+,-1}<%bb221>)
    reg(undef) + reg(5129) + -1*reg({{(-1 * @global3),+,-1}<%bb194>,+,-1}<%bb221>)
    reg(@global3) + reg(5129) + reg(undef) + -1*reg({{0,+,-1}<%bb194>,+,-1}<%bb221>)
    reg({0,+,1}<%bb194>) + reg(5129) + reg(undef) + -1*reg({(-1 * @global3),+,-1}<%bb221>)
    reg({@global3,+,1}<%bb221>) + reg(5129) + reg(undef) + -1*reg({0,+,-1}<%bb194>)
    reg({0,+,1}<%bb221>) + reg(5129) + reg(undef) + -1*reg({(-1 * @global3),+,-1}<%bb194>)
    reg({@global3,+,1}<%bb194>) + reg(5129) + reg(undef) + -1*reg({0,+,-1}<%bb221>)
    reg(@global3) + reg(5129) + -1*reg({{(-1 * undef),+,-1}<%bb194>,+,-1}<%bb221>)
    reg({0,+,1}<%bb194>) + reg(5129) + reg(@global3) + -1*reg({(-1 * undef),+,-1}<%bb221>)
    reg({undef,+,1}<%bb221>) + reg(5129) + reg(@global3) + -1*reg({0,+,-1}<%bb194>)
    reg({0,+,1}<%bb221>) + reg(5129) + reg(@global3) + -1*reg({(-1 * undef),+,-1}<%bb194>)
    reg({undef,+,1}<%bb194>) + reg(5129) + reg(@global3) + -1*reg({0,+,-1}<%bb221>)
    reg({0,+,1}<%bb194>) + reg(5129) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb221>)
    reg({(undef + @global3),+,1}<%bb221>) + reg(5129) + -1*reg({0,+,-1}<%bb194>)
    reg((undef + @global3)) + reg(5129) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
    reg((undef + @global3)) + reg(5129) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    reg({0,+,1}<%bb221>) + reg(5129) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb194>)
    reg({(undef + @global3),+,1}<%bb194>) + reg(5129) + -1*reg({0,+,-1}<%bb221>)
    reg(undef) + -1*reg({{(-5129 + (-1 * @global3)),+,-1}<%bb194>,+,-1}<%bb221>)
    reg(@global3) + reg(undef) + -1*reg({{-5129,+,-1}<%bb194>,+,-1}<%bb221>)
    reg({0,+,1}<%bb194>) + reg(undef) + reg(@global3) + -1*reg({-5129,+,-1}<%bb221>)
    reg({5129,+,1}<%bb221>) + reg(undef) + reg(@global3) + -1*reg({0,+,-1}<%bb194>)
    reg({0,+,1}<%bb221>) + reg(undef) + reg(@global3) + -1*reg({-5129,+,-1}<%bb194>)
    reg({5129,+,1}<%bb194>) + reg(undef) + reg(@global3) + -1*reg({0,+,-1}<%bb221>)
    reg({0,+,1}<%bb194>) + reg(undef) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb221>)
    reg({(5129 + @global3),+,1}<%bb221>) + reg(undef) + -1*reg({0,+,-1}<%bb194>)
    reg((5129 + @global3)) + reg(undef) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
    reg((5129 + @global3)) + reg(undef) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    reg({0,+,1}<%bb221>) + reg(undef) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb194>)
    reg({(5129 + @global3),+,1}<%bb194>) + reg(undef) + -1*reg({0,+,-1}<%bb221>)
    reg(@global3) + -1*reg({{(-5129 + (-1 * undef)),+,-1}<nw><%bb194>,+,-1}<%bb221>)
    reg({0,+,1}<%bb194>) + reg(@global3) + -1*reg({(-5129 + (-1 * undef)),+,-1}<%bb221>)
    reg({(5129 + undef),+,1}<%bb221>) + reg(@global3) + -1*reg({0,+,-1}<%bb194>)
    reg((5129 + undef)) + reg(@global3) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
    reg((5129 + undef)) + reg(@global3) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    reg({0,+,1}<%bb221>) + reg(@global3) + -1*reg({(-5129 + (-1 * undef)),+,-1}<nw><%bb194>)
    reg({(5129 + undef),+,1}<nw><%bb194>) + reg(@global3) + -1*reg({0,+,-1}<%bb221>)
    reg({0,+,1}<%bb194>) + -1*reg({(-5129 + (-1 * undef) + (-1 * @global3)),+,-1}<%bb221>)
    reg({(5129 + undef + @global3),+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
    reg((5129 + undef + @global3)) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
    reg((5129 + undef + @global3)) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    reg({0,+,1}<%bb221>) + -1*reg({(-5129 + (-1 * undef) + (-1 * @global3)),+,-1}<nw><%bb194>)
    reg({(5129 + undef + @global3),+,1}<nw><%bb194>) + -1*reg({0,+,-1}<%bb221>)
    reg((5129 + undef)) + -1*reg({{(-1 * @global3),+,-1}<%bb194>,+,-1}<%bb221>)
    reg((5129 + undef + @global3)) + -1*reg({{0,+,-1}<%bb194>,+,-1}<%bb221>)
    reg({(5129 + undef),+,1}<nw><%bb194>) + -1*reg({(-1 * @global3),+,-1}<%bb221>)
    reg({@global3,+,1}<%bb221>) + -1*reg({(-5129 + (-1 * undef)),+,-1}<nw><%bb194>)
    reg((5129 + @global3)) + -1*reg({{(-1 * undef),+,-1}<%bb194>,+,-1}<%bb221>)
    reg({(5129 + @global3),+,1}<%bb194>) + -1*reg({(-1 * undef),+,-1}<%bb221>)
    reg({undef,+,1}<%bb221>) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb194>)
    reg({5129,+,1}<%bb194>) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb221>)
    reg({(undef + @global3),+,1}<%bb221>) + -1*reg({-5129,+,-1}<%bb194>)
    reg((undef + @global3)) + -1*reg({{-5129,+,-1}<%bb194>,+,-1}<%bb221>)
    reg({(undef + @global3),+,1}<%bb194>) + -1*reg({-5129,+,-1}<%bb221>)
    reg({5129,+,1}<%bb221>) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb194>)
    reg({undef,+,1}<%bb194>) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb221>)
    reg({(5129 + @global3),+,1}<%bb221>) + -1*reg({(-1 * undef),+,-1}<%bb194>)
    reg({@global3,+,1}<%bb194>) + -1*reg({(-5129 + (-1 * undef)),+,-1}<%bb221>)
    reg({(5129 + undef),+,1}<%bb221>) + -1*reg({(-1 * @global3),+,-1}<%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb221>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>,+,-1}<%bb221>)
    reg({0,+,-1}<%bb221>) + reg({{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
    -1*reg({{{{{{{{{{(-1 * (trunc i64 (2036 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>,+,1}<%bb221>)
    reg({{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>) + -1*reg({0,+,1}<nuw><nsw><%bb221>)
    reg({0,+,-1}<%bb221>) + -1*reg({{{{{{{{{(-1 * (trunc i64 (2036 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
Filtering for use LSR Use: Kind=Address of i8, Offsets={0}, widest fixup type: i8*
  Filtering out formula reg({{(undef + @global3),+,1}<%bb194>,+,1}<%bb221>) + reg(5129)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + undef),+,1}<%bb221>) + -1*reg({(-1 * @global3),+,-1}<%bb194>)
  Filtering loser reg({@global3,+,1}<%bb194>) + -1*reg({(-5129 + (-1 * undef)),+,-1}<%bb221>)
  Filtering loser reg({(5129 + @global3),+,1}<%bb221>) + -1*reg({(-1 * undef),+,-1}<%bb194>)
  Filtering loser reg({undef,+,1}<%bb194>) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb221>)
  Filtering loser reg({5129,+,1}<%bb221>) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb194>)
  Filtering loser reg({(undef + @global3),+,1}<%bb194>) + -1*reg({-5129,+,-1}<%bb221>)
  Filtering out formula reg((undef + @global3)) + -1*reg({{-5129,+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(undef + @global3),+,1}<%bb221>) + -1*reg({-5129,+,-1}<%bb194>)
  Filtering loser reg({5129,+,1}<%bb194>) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb221>)
  Filtering loser reg({undef,+,1}<%bb221>) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb194>)
  Filtering loser reg({(5129 + @global3),+,1}<%bb194>) + -1*reg({(-1 * undef),+,-1}<%bb221>)
  Filtering out formula reg((5129 + @global3)) + -1*reg({{(-1 * undef),+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({@global3,+,1}<%bb221>) + -1*reg({(-5129 + (-1 * undef)),+,-1}<nw><%bb194>)
  Filtering loser reg({(5129 + undef),+,1}<nw><%bb194>) + -1*reg({(-1 * @global3),+,-1}<%bb221>)
  Filtering out formula reg((5129 + undef + @global3)) + -1*reg({{0,+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg((5129 + undef)) + -1*reg({{(-1 * @global3),+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + undef + @global3),+,1}<nw><%bb194>) + -1*reg({0,+,-1}<%bb221>)
  Filtering loser reg({0,+,1}<%bb221>) + -1*reg({(-5129 + (-1 * undef) + (-1 * @global3)),+,-1}<nw><%bb194>)
  Filtering out formula reg((5129 + undef + @global3)) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg((5129 + undef + @global3)) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
  Filtering loser reg({(5129 + undef + @global3),+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + -1*reg({(-5129 + (-1 * undef) + (-1 * @global3)),+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + undef),+,1}<nw><%bb194>) + reg(@global3) + -1*reg({0,+,-1}<%bb221>)
  Filtering loser reg({0,+,1}<%bb221>) + reg(@global3) + -1*reg({(-5129 + (-1 * undef)),+,-1}<nw><%bb194>)
  Filtering out formula reg((5129 + undef)) + reg(@global3) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg((5129 + undef)) + reg(@global3) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
  Filtering loser reg({(5129 + undef),+,1}<%bb221>) + reg(@global3) + -1*reg({0,+,-1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + reg(@global3) + -1*reg({(-5129 + (-1 * undef)),+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg(@global3) + -1*reg({{(-5129 + (-1 * undef)),+,-1}<nw><%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + @global3),+,1}<%bb194>) + reg(undef) + -1*reg({0,+,-1}<%bb221>)
  Filtering loser reg({0,+,1}<%bb221>) + reg(undef) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb194>)
  Filtering out formula reg((5129 + @global3)) + reg(undef) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg((5129 + @global3)) + reg(undef) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
  Filtering loser reg({(5129 + @global3),+,1}<%bb221>) + reg(undef) + -1*reg({0,+,-1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + reg(undef) + -1*reg({(-5129 + (-1 * @global3)),+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({5129,+,1}<%bb194>) + reg(undef) + reg(@global3) + -1*reg({0,+,-1}<%bb221>)
  Filtering loser reg({0,+,1}<%bb221>) + reg(undef) + reg(@global3) + -1*reg({-5129,+,-1}<%bb194>)
  Filtering loser reg({5129,+,1}<%bb221>) + reg(undef) + reg(@global3) + -1*reg({0,+,-1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + reg(undef) + reg(@global3) + -1*reg({-5129,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg(@global3) + reg(undef) + -1*reg({{-5129,+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg(undef) + -1*reg({{(-5129 + (-1 * @global3)),+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(undef + @global3),+,1}<%bb194>) + reg(5129) + -1*reg({0,+,-1}<%bb221>)
  Filtering loser reg({0,+,1}<%bb221>) + reg(5129) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb194>)
  Filtering out formula reg((undef + @global3)) + reg(5129) + reg({0,+,1}<%bb194>) + -1*reg({0,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg((undef + @global3)) + reg(5129) + reg({0,+,1}<%bb221>) + -1*reg({0,+,-1}<%bb194>)
  Filtering loser reg({(undef + @global3),+,1}<%bb221>) + reg(5129) + -1*reg({0,+,-1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + reg(5129) + -1*reg({(-1 * (undef + @global3)),+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({undef,+,1}<%bb194>) + reg(5129) + reg(@global3) + -1*reg({0,+,-1}<%bb221>)
  Filtering loser reg({0,+,1}<%bb221>) + reg(5129) + reg(@global3) + -1*reg({(-1 * undef),+,-1}<%bb194>)
  Filtering loser reg({undef,+,1}<%bb221>) + reg(5129) + reg(@global3) + -1*reg({0,+,-1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + reg(5129) + reg(@global3) + -1*reg({(-1 * undef),+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg(@global3) + reg(5129) + -1*reg({{(-1 * undef),+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({@global3,+,1}<%bb194>) + reg(5129) + reg(undef) + -1*reg({0,+,-1}<%bb221>)
  Filtering loser reg({0,+,1}<%bb221>) + reg(5129) + reg(undef) + -1*reg({(-1 * @global3),+,-1}<%bb194>)
  Filtering loser reg({@global3,+,1}<%bb221>) + reg(5129) + reg(undef) + -1*reg({0,+,-1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + reg(5129) + reg(undef) + -1*reg({(-1 * @global3),+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg(@global3) + reg(5129) + reg(undef) + -1*reg({{0,+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg(undef) + reg(5129) + -1*reg({{(-1 * @global3),+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg(5129) + -1*reg({{(-1 * (undef + @global3)),+,-1}<%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula -1*reg({{(-5129 + (-1 * undef) + (-1 * @global3)),+,-1}<nw><%bb194>,+,-1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + undef),+,1}<%bb221>) + reg({@global3,+,1}<%bb194>)
  Filtering loser reg({(5129 + @global3),+,1}<%bb221>) + reg({undef,+,1}<%bb194>)
  Filtering loser reg({5129,+,1}<%bb221>) + reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg({{5129,+,1}<%bb194>,+,1}<%bb221>) + reg((undef + @global3))
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(undef + @global3),+,1}<%bb221>) + reg({5129,+,1}<%bb194>)
  Filtering loser reg({undef,+,1}<%bb221>) + reg({(5129 + @global3),+,1}<%bb194>)
  Filtering out formula reg({{undef,+,1}<%bb194>,+,1}<%bb221>) + reg((5129 + @global3))
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({@global3,+,1}<%bb221>) + reg({(5129 + undef),+,1}<nw><%bb194>)
  Filtering out formula reg({{0,+,1}<%bb194>,+,1}<%bb221>) + reg((5129 + undef + @global3))
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({{@global3,+,1}<%bb194>,+,1}<%bb221>) + reg((5129 + undef))
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + undef + @global3),+,1}<nw><%bb194>) + reg({0,+,1}<%bb221>)
  Filtering out formula reg((5129 + undef + @global3)) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({(5129 + undef + @global3),+,1}<%bb221>) + reg({0,+,1}<%bb194>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + undef),+,1}<nw><%bb194>) + reg(@global3) + reg({0,+,1}<%bb221>)
  Filtering out formula reg((5129 + undef)) + reg(@global3) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({(5129 + undef),+,1}<%bb221>) + reg(@global3) + reg({0,+,1}<%bb194>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({{(5129 + undef),+,1}<nw><%bb194>,+,1}<%bb221>) + reg(@global3)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(5129 + @global3),+,1}<%bb194>) + reg(undef) + reg({0,+,1}<%bb221>)
  Filtering out formula reg((5129 + @global3)) + reg(undef) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({(5129 + @global3),+,1}<%bb221>) + reg(undef) + reg({0,+,1}<%bb194>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({5129,+,1}<%bb194>) + reg(undef) + reg(@global3) + reg({0,+,1}<%bb221>)
  Filtering out formula reg({5129,+,1}<%bb221>) + reg(undef) + reg(@global3) + reg({0,+,1}<%bb194>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({{5129,+,1}<%bb194>,+,1}<%bb221>) + reg(undef) + reg(@global3)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({{(5129 + @global3),+,1}<%bb194>,+,1}<%bb221>) + reg(undef)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({(undef + @global3),+,1}<%bb194>) + reg(5129) + reg({0,+,1}<%bb221>)
  Filtering out formula reg((undef + @global3)) + reg(5129) + reg({0,+,1}<%bb194>) + reg({0,+,1}<%bb221>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({(undef + @global3),+,1}<%bb221>) + reg(5129) + reg({0,+,1}<%bb194>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({undef,+,1}<%bb194>) + reg(5129) + reg(@global3) + reg({0,+,1}<%bb221>)
  Filtering out formula reg({undef,+,1}<%bb221>) + reg(5129) + reg(@global3) + reg({0,+,1}<%bb194>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({{undef,+,1}<%bb194>,+,1}<%bb221>) + reg(5129) + reg(@global3)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering loser reg({@global3,+,1}<%bb194>) + reg(5129) + reg(undef) + reg({0,+,1}<%bb221>)
  Filtering out formula reg({@global3,+,1}<%bb221>) + reg(5129) + reg(undef) + reg({0,+,1}<%bb194>)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({{0,+,1}<%bb194>,+,1}<%bb221>) + reg(5129) + reg(undef) + reg(@global3)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  Filtering out formula reg({{@global3,+,1}<%bb194>,+,1}<%bb221>) + reg(5129) + reg(undef)
    in favor of formula reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<%bb221>) + reg({{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
  Filtering loser reg({0,+,-1}<%bb221>) + -1*reg({{{{{{{{{(-1 * (trunc i64 (2036 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
  Filtering loser reg({{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>) + -1*reg({0,+,1}<nuw><nsw><%bb221>)
  Filtering out formula -1*reg({{{{{{{{{{(-1 * (trunc i64 (2036 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>,+,1}<%bb221>)
    in favor of formula reg({{{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>,+,-1}<%bb221>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Address of i8, Offsets={0}, widest fixup type: i8*
    reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb221>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>,+,-1}<%bb221>)
New best at 3 regs, with addrec cost 3, plus 2 setup cost.
 Regs: {{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221> {0,+,1}<nuw><nsw><%bb221> {{{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>,+,-1}<%bb221>

The chosen solution requires 3 regs, with addrec cost 3, plus 2 setup cost:
  LSR Use: Kind=Address of i8, Offsets={0}, widest fixup type: i8*
    reg({{(5129 + undef + @global3),+,1}<nw><%bb194>,+,1}<%bb221>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb221>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{{(trunc i64 (2036 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>,+,-1}<%bb221>)

LSR on loop %bb194:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp198 = icmp slt i32 %tmp197, %tmp193) IV={0,+,1}<%bb194>
IV Chain#0  Inc: (  %tmp195 = phi i64 [ %tmp201, %bb200 ], [ 0, %bb192 ]) IV+1
Chain:   %tmp198 = icmp slt i32 %tmp197, %tmp193 Cost: 0
LSR has identified the following interesting factors and types: *-1, *1, (i32), (i64)
LSR is examining the following fixup sites:
  UserInst=%lsr.iv22, OperandValToReplace=%lsr.iv20, LUIdx=0
  UserInst=%lsr.iv1, OperandValToReplace=%lsr.iv, LUIdx=1
  UserInst=%tmp198, OperandValToReplace=%tmp197, LUIdx=2
  UserInst=%tmp225, OperandValToReplace=%tmp220, LUIdx=3
  UserInst=%tmp213, OperandValToReplace=%tmp212, LUIdx=4
LSR found 5 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: %struct.jim*
    reg({(undef + @global3),+,1}<%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
    reg({0,+,-1}<%bb194>) + reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    -1*reg({{{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
    reg({0,+,-1}<%bb194>) + -1*reg({{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: %struct.jim*
    reg({(undef + @global3),+,1}<%bb194>)
    reg({@global3,+,1}<%bb194>) + reg(undef)
    reg({0,+,1}<%bb194>) + reg(undef) + reg(@global3)
    reg({undef,+,1}<%bb194>) + reg(@global3)
    reg((undef + @global3)) + reg({0,+,1}<%bb194>)
    -1*reg({(-1 * (undef + @global3)),+,-1}<%bb194>)
    reg(undef) + -1*reg({(-1 * @global3),+,-1}<%bb194>)
    reg(@global3) + reg(undef) + -1*reg({0,+,-1}<%bb194>)
    reg(@global3) + -1*reg({(-1 * undef),+,-1}<%bb194>)
    reg((undef + @global3)) + -1*reg({0,+,-1}<%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
    reg({0,+,-1}<%bb194>) + reg({{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    -1*reg({{{{{{{{{(-1 * (trunc i64 (2037 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
    reg({{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
    reg({0,+,-1}<%bb194>) + -1*reg({{{{{{{{(-1 * (trunc i64 (2037 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
    reg({0,+,-1}<%bb194>) + reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    -1*reg({{{{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
    reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
    reg({0,+,-1}<%bb194>) + -1*reg({{{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
    in favor of formula reg({{{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
  Filtering loser reg({0,+,-1}<%bb194>) + -1*reg({{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: %struct.jim*
  Filtering out formula reg({@global3,+,1}<%bb194>) + reg(undef)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg((undef + @global3)) + -1*reg({0,+,-1}<%bb194>)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg(@global3) + -1*reg({(-1 * undef),+,-1}<%bb194>)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg(@global3) + reg(undef) + -1*reg({0,+,-1}<%bb194>)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg(undef) + -1*reg({(-1 * @global3),+,-1}<%bb194>)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula -1*reg({(-1 * (undef + @global3)),+,-1}<%bb194>)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg((undef + @global3)) + reg({0,+,1}<%bb194>)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg({undef,+,1}<%bb194>) + reg(@global3)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
  Filtering out formula reg({0,+,1}<%bb194>) + reg(undef) + reg(@global3)
    in favor of formula reg({(undef + @global3),+,1}<%bb194>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<%bb194>) + reg({{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
  Filtering loser reg({0,+,-1}<%bb194>) + -1*reg({{{{{{{{(-1 * (trunc i64 (2037 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
  Filtering loser reg({{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
  Filtering out formula -1*reg({{{{{{{{{(-1 * (trunc i64 (2037 + (-1 * undef)) to i32)),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
    in favor of formula reg({{{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<%bb194>) + reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
  Filtering loser reg({0,+,-1}<%bb194>) + -1*reg({{{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
  Filtering loser reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
  Filtering out formula -1*reg({{{{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>,+,1}<%bb194>)
    in favor of formula reg({{{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
    reg({0,+,-1}<%bb194>) + reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: %struct.jim*
    reg({(undef + @global3),+,1}<%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
New best at 5 regs, with addrec cost 5, plus 4 setup cost.
 Regs: {{{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194> {(undef + @global3),+,1}<%bb194> {0,+,1}<nuw><nsw><%bb194> {{{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194> {{{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>
New best at 4 regs, with addrec cost 4, plus 3 setup cost.
 Regs: {0,+,1}<nuw><nsw><%bb194> {{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175> {(undef + @global3),+,1}<%bb194> {{{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194> {{{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>

The chosen solution requires 4 regs, with addrec cost 4, plus 3 setup cost:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: %struct.jim*
    reg({(undef + @global3),+,1}<%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{(trunc i64 (2037 + (-1 * undef)) to i32),+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>,+,-1}<%bb194>)

LSR on loop %bb175:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp179 = icmp slt i32 %tmp178, %tmp174) IV={0,+,1}<%bb175>
IV Chain#0  Inc: (  %tmp176 = phi i64 [ %tmp183, %bb181 ], [ 0, %bb173 ]) IV+1
Chain:   %tmp179 = icmp slt i32 %tmp178, %tmp174 Cost: 0
LSR has identified the following interesting factors and types: *-1
LSR is examining the following fixup sites:
  UserInst=%lsr.iv58, OperandValToReplace=%lsr.iv56, LUIdx=0
  UserInst=%lsr.iv40, OperandValToReplace=%lsr.iv38, LUIdx=1
  UserInst=%lsr.iv22, OperandValToReplace=%1, LUIdx=2
  UserInst=%tmp179, OperandValToReplace=%tmp178, LUIdx=3
  UserInst=%tmp198, OperandValToReplace=%tmp193, LUIdx=4
LSR found 5 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + reg({0,+,-1}<nw><%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
Generating cross-use offsets for {{{{{{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>: 2037 2038
Generating cross-use offsets for {{{{{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>: 2037 2038
Generating cross-use offsets for {{{{{{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>: -2038 -2037
Generating cross-use offsets for {{{{{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>: -2038 -2037

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    -1*reg({{{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
    reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    -1*reg({{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + reg({0,+,-1}<nw><%bb194>)
    reg({0,+,-1}<nw><%bb175>) + reg({0,+,-1}<nw><%bb194>) + reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    reg({0,+,-1}<nw><%bb194>) + -1*reg({{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb194>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
    reg({0,+,-1}<nw><%bb175>) + reg({0,+,-1}<nw><%bb194>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    -1*reg({{{{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
    reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
    in favor of formula reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
  Filtering loser reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + reg({0,+,-1}<nw><%bb194>)
  Filtering loser reg({0,+,-1}<nw><%bb175>) + reg({0,+,-1}<nw><%bb194>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
  Filtering loser reg({0,+,-1}<nw><%bb175>) + reg({0,+,-1}<nw><%bb194>) + reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
  Filtering loser reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb194>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
  Filtering loser reg({0,+,-1}<nw><%bb194>) + -1*reg({{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
  Filtering loser reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
  Filtering loser reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
  Filtering out formula -1*reg({{{{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
    in favor of formula reg({{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    -1*reg({{{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>,+,1}<%bb175>)
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
    reg({{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)
New best at 4 regs, with addrec cost 4, plus 3 setup cost.
 Regs: {{{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175> {{{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175> {0,+,1}<nuw><nsw><%bb194> {0,+,1}<nuw><nsw><%bb175> {{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>
New best at 3 regs, with addrec cost 3, plus 3 base adds, plus 1 setup cost.
 Regs: {0,+,-1}<nw><%bb175> {{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153> {{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153> {0,+,1}<nuw><nsw><%bb194> {0,+,1}<nuw><nsw><%bb175> {{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>
New best at 3 regs, with addrec cost 3, plus 1 base add, plus 1 setup cost.
 Regs: {0,+,1}<nuw><nsw><%bb175> {{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153> {{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153> {0,+,1}<nuw><nsw><%bb194> {0,+,-1}<nw><%bb175> {{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>

The chosen solution requires 3 regs, with addrec cost 3, plus 1 base add, plus 1 setup cost:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb175>) + reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>,+,-1}<%bb175>)

LSR on loop %bb153:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp157 = icmp slt i32 %tmp156, %tmp151) IV={0,+,1}<%bb153>
IV Chain#0  Inc: (  %tmp154 = phi i64 [ %tmp161, %bb160 ], [ 0, %bb150 ]) IV+1
Chain:   %tmp157 = icmp slt i32 %tmp156, %tmp151 Cost: 0
LSR has identified the following interesting factors and types: *-1
LSR is examining the following fixup sites:
  UserInst=%lsr.iv76, OperandValToReplace=%lsr.iv74, LUIdx=0
  UserInst=%lsr.iv58, OperandValToReplace=%0, LUIdx=1
  UserInst=%lsr.iv22, OperandValToReplace=%4, LUIdx=2
  UserInst=%lsr.iv40, OperandValToReplace=%1, LUIdx=3
  UserInst=%tmp157, OperandValToReplace=%tmp156, LUIdx=4
  UserInst=%tmp179, OperandValToReplace=%tmp174, LUIdx=5
  UserInst=%tmp165, OperandValToReplace=%tmp164, LUIdx=6
LSR found 7 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb175>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb175>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb153>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb153>)
Generating cross-use offsets for {{{{{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>: 2037 2038 2039
Generating cross-use offsets for {0,+,1}<nuw><nsw><%bb153>: -1 0
Generating cross-use offsets for {0,+,-1}<nw><%bb153>: 0 1
Generating cross-use offsets for {{{{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>: 2037 2038 2039
Generating cross-use offsets for {{{{{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>: -2039 -2038 -2037
Generating cross-use offsets for {{{{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>: -2039 -2038 -2037

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    -1*reg({{{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb175>)
    reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>)
    reg({0,+,-1}<nw><%bb153>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({{0,+,1}<nuw><nsw><%bb175>,+,1}<nw><%bb194>)
    reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({{0,+,1}<nuw><nsw><%bb175>,+,1}<nw><%bb194>)
    reg({0,+,-1}<nw><%bb153>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + -1*reg({{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb175>)
    reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    -1*reg({{{{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb153>)
    reg({0,+,1}<nuw><nsw><%bb153>) + reg(-1)
    -1*reg({1,+,-1}<nw><%bb153>)
    reg(-1) + -1*reg({0,+,-1}<nw><%bb153>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    in favor of formula reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
  Filtering loser reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb175>)
    in favor of formula reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
  Filtering loser reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>)
  Filtering loser reg({0,+,-1}<nw><%bb153>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + -1*reg({{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb153>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({{0,+,1}<nuw><nsw><%bb175>,+,1}<nw><%bb194>)
  Filtering loser reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
  Filtering loser reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({{0,+,1}<nuw><nsw><%bb175>,+,1}<nw><%bb194>)
  Filtering loser reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
  Filtering loser reg({0,+,-1}<nw><%bb153>) + reg({{0,+,-1}<nw><%bb175>,+,-1}<nw><%bb194>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb153>) + reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
  Filtering loser reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
  Filtering out formula -1*reg({{{{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    in favor of formula reg({{{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({1,+,-1}<nw><%bb153>)
    in favor of formula reg({-1,+,1}<nw><%bb153>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({{{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + reg({0,+,-1}<nw><%bb175>)
    reg({0,+,-1}<nw><%bb153>) + reg({0,+,-1}<nw><%bb175>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<nw><%bb175>) + -1*reg({{{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>,+,1}<%bb153>)
    reg({{{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
    reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb175>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({0,+,-1}<nw><%bb153>) + reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb175>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>,+,-1}<%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb153>)
    reg({0,+,1}<nuw><nsw><%bb153>) + reg(-1)
    reg(-1) + -1*reg({0,+,-1}<nw><%bb153>)

No Satisfactory Solution

LSR on loop %bb134:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp138 = icmp slt i32 %tmp137, %tmp133) IV={0,+,1}<%bb134>
IV Chain#0  Inc: (  %tmp135 = phi i64 [ %tmp141, %bb140 ], [ 0, %bb132 ]) IV+1
Chain:   %tmp138 = icmp slt i32 %tmp137, %tmp133 Cost: 0
LSR has identified the following interesting factors and types: *-1
LSR is examining the following fixup sites:
  UserInst=%lsr.iv74, OperandValToReplace=%lsr.iv72, LUIdx=0
  UserInst=%lsr.iv54, OperandValToReplace=%lsr.iv52, LUIdx=1
  UserInst=%lsr.iv36, OperandValToReplace=%lsr.iv34, LUIdx=2
  UserInst=%tmp138, OperandValToReplace=%tmp137, LUIdx=3
  UserInst=%tmp179, OperandValToReplace=%tmp174, LUIdx=4
  UserInst=%tmp157, OperandValToReplace=%tmp151, LUIdx=5
LSR found 6 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb153>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
Generating cross-use offsets for {{{{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>: 2037 2038 2039 2040
Generating cross-use offsets for {{{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>: 2037 2038 2039 2040
Generating cross-use offsets for {{{{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>: -2040 -2039 -2038 -2037
Generating cross-use offsets for {{{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>: -2040 -2039 -2038 -2037

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    -1*reg({{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<%bb134>) + -1*reg({{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    -1*reg({{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<%bb134>) + -1*reg({{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    -1*reg({{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<%bb134>) + -1*reg({{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb153>)
    reg({0,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb153>) + reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
    reg({0,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    -1*reg({{{{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<%bb134>) + -1*reg({{{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    in favor of formula reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
  Filtering loser reg({0,+,-1}<%bb134>) + -1*reg({{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    in favor of formula reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
  Filtering loser reg({0,+,-1}<%bb134>) + -1*reg({{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    in favor of formula reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
  Filtering loser reg({0,+,-1}<%bb134>) + -1*reg({{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb153>)
  Filtering loser reg({0,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
  Filtering loser reg({0,+,-1}<%bb134>) + reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
  Filtering loser reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb153>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  Filtering loser reg({0,+,-1}<%bb134>) + reg({0,+,-1}<nw><%bb153>) + reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
  Filtering loser reg({0,+,-1}<nw><%bb153>) + -1*reg({{{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<%bb134>) + reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
  Filtering loser reg({0,+,-1}<%bb134>) + -1*reg({{{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
  Filtering loser reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  Filtering out formula -1*reg({{{{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>,+,1}<%bb134>)
    in favor of formula reg({{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
    reg({0,+,-1}<%bb134>) + reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)
New best at 6 regs, with addrec cost 6, plus 5 setup cost.
 Regs: {{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {{{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {0,+,1}<nuw><nsw><%bb134> {0,+,1}<nuw><nsw><%bb153> {{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>
New best at 5 regs, with addrec cost 5, plus 4 setup cost.
 Regs: {{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {{{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {0,+,1}<nuw><nsw><%bb134> {{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {0,+,1}<nuw><nsw><%bb153> {{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>
New best at 4 regs, with addrec cost 4, plus 3 setup cost.
 Regs: {{{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {0,+,1}<nuw><nsw><%bb134> {{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {0,+,1}<nuw><nsw><%bb153> {{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>
New best at 3 regs, with addrec cost 3, plus 2 setup cost.
 Regs: {0,+,1}<nuw><nsw><%bb134> {{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {0,+,1}<nuw><nsw><%bb153> {{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134> {{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>

The chosen solution requires 3 regs, with addrec cost 3, plus 2 setup cost:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb153>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>,+,-1}<%bb134>)

LSR on loop %bb115:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp119 = icmp slt i32 %tmp118, %tmp114) IV={0,+,1}<%bb115>
IV Chain#0  Inc: (  %tmp116 = phi i64 [ %tmp122, %bb121 ], [ 0, %bb113 ]) IV+1
Chain:   %tmp119 = icmp slt i32 %tmp118, %tmp114 Cost: 0
LSR has identified the following interesting factors and types: *-1
LSR is examining the following fixup sites:
  UserInst=%lsr.iv100, OperandValToReplace=%lsr.iv98, LUIdx=0
  UserInst=%lsr.iv88, OperandValToReplace=%lsr.iv86, LUIdx=1
  UserInst=%lsr.iv74, OperandValToReplace=%0, LUIdx=2
  UserInst=%lsr.iv54, OperandValToReplace=%1, LUIdx=3
  UserInst=%lsr.iv36, OperandValToReplace=%2, LUIdx=4
  UserInst=%tmp119, OperandValToReplace=%tmp118, LUIdx=5
  UserInst=%tmp138, OperandValToReplace=%tmp133, LUIdx=6
LSR found 7 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
Generating cross-use offsets for {{{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>: 2037 2038 2039 2040 2041
Generating cross-use offsets for {{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>: 2037 2038 2039 2040 2041
Generating cross-use offsets for {{{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>: -2041 -2040 -2039 -2038 -2037
Generating cross-use offsets for {{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>: -2041 -2040 -2039 -2038 -2037

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    -1*reg({{{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    -1*reg({{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    -1*reg({{{{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    in favor of formula reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({{{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    in favor of formula reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
  Filtering loser reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  Filtering loser reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
  Filtering loser reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  Filtering loser reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + reg({0,+,-1}<nw><%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + reg({0,+,-1}<nw><%bb134>) + reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
  Filtering loser reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  Filtering loser reg({0,+,-1}<nw><%bb134>) + -1*reg({{{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb115>) + reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  Filtering loser reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  Filtering out formula -1*reg({{{{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>,+,1}<%bb115>)
    in favor of formula reg({{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({{{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({{{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
    reg({{{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)
New best at 5 regs, with addrec cost 5, plus 3 base adds, plus 3 setup cost.
 Regs: {{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {{{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {0,+,1}<nuw><nsw><%bb134> {0,+,-1}<nw><%bb115> {{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {0,+,1}<nuw><nsw><%bb115> {{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>
New best at 4 regs, with addrec cost 4, plus 4 base adds, plus 2 setup cost.
 Regs: {{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {0,+,-1}<nw><%bb115> {{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {0,+,1}<nuw><nsw><%bb134> {{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {0,+,1}<nuw><nsw><%bb115> {{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>
New best at 4 regs, with addrec cost 4, plus 3 base adds, plus 2 setup cost.
 Regs: {{{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115> {0,+,1}<nuw><nsw><%bb115> {{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {0,+,1}<nuw><nsw><%bb134> {0,+,-1}<nw><%bb115> {{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>
New best at 3 regs, with addrec cost 3, plus 5 base adds, plus 1 setup cost.
 Regs: {0,+,-1}<nw><%bb115> {{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {0,+,1}<nuw><nsw><%bb134> {{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {0,+,1}<nuw><nsw><%bb115> {{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>
New best at 3 regs, with addrec cost 3, plus 3 base adds, plus 1 setup cost.
 Regs: {0,+,1}<nuw><nsw><%bb115> {{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {0,+,1}<nuw><nsw><%bb134> {0,+,-1}<nw><%bb115> {{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96> {{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>

The chosen solution requires 3 regs, with addrec cost 3, plus 3 base adds, plus 1 setup cost:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>,+,-1}<%bb115>)

LSR on loop %bb96:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp100 = icmp slt i32 %tmp99, %tmp95) IV={0,+,1}<%bb96>
IV Chain#0  Inc: (  %tmp97 = phi i64 [ %tmp103, %bb102 ], [ 0, %bb94 ]) IV+1
Chain:   %tmp100 = icmp slt i32 %tmp99, %tmp95 Cost: 0
LSR has identified the following interesting factors and types: *-1
LSR is examining the following fixup sites:
  UserInst=%lsr.iv112, OperandValToReplace=%lsr.iv110, LUIdx=0
  UserInst=%lsr.iv100, OperandValToReplace=%0, LUIdx=1
  UserInst=%lsr.iv88, OperandValToReplace=%1, LUIdx=2
  UserInst=%lsr.iv74, OperandValToReplace=%3, LUIdx=3
  UserInst=%lsr.iv54, OperandValToReplace=%5, LUIdx=4
  UserInst=%lsr.iv36, OperandValToReplace=%7, LUIdx=5
  UserInst=%tmp100, OperandValToReplace=%tmp99, LUIdx=6
  UserInst=%tmp119, OperandValToReplace=%tmp114, LUIdx=7
LSR found 8 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb115>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb115>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
Generating cross-use offsets for {{{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>: 2037 2038 2039 2040 2041 2042
Generating cross-use offsets for {{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>: 0 2037 2038 2039 2040 2041 2042
Generating cross-use offsets for 0: 2037 2038 2039 2040 2041 2042
Generating cross-use offsets for {{{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>: -2042 -2041 -2040 -2039 -2038 -2037
Generating cross-use offsets for {{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>: -2042 -2041 -2040 -2039 -2038 -2037 0

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2041)
    -1*reg({{{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + -1*reg({{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2041) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb115>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2040)
    reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2040) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg(2040) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb115>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2039)
    reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2039) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg(2039) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2038)
    reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2038) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg(2038) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2037)
    reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2037) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg(2037) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(undef)
    reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(undef) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg(undef) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
    reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2042)
    -1*reg({{{{-2042,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + -1*reg({{{-2042,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2042) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg(2042) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2041)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg(2041) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + -1*reg({{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering out formula -1*reg({{{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    in favor of formula reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2040)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg(2040) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  Filtering loser reg(2040) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering out formula reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb115>)
    in favor of formula reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2039)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg(2039) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  Filtering loser reg(2039) + reg({0,+,-1}<nw><%bb115>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering out formula reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({0,+,-1}<nw><%bb115>)
    in favor of formula reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg(2038) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg(2038) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({{{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2038)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg(2037) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg(2037) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({{{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2037)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg(undef) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg(undef) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({{{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb115>,+,1}<nw><%bb134>)
  Filtering loser reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + -1*reg({{{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(undef)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<nw><%bb115>,+,-1}<nw><%bb134>) + reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg(2042) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg(2042) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + -1*reg({{{-2042,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering out formula -1*reg({{{{-2042,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    in favor of formula reg({{{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg(2042)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb115>) + -1*reg({{{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>,+,1}<%bb96>)
    reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb115>) + reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({0,+,-1}<nw><%bb96>) + reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({0,+,-1}<nw><%bb115>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb115>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>,+,-1}<%bb96>)

No Satisfactory Solution

LSR on loop %bb76:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp80 = icmp slt i32 %tmp79, %tmp75) IV={0,+,1}<%bb76>
IV Chain#0  Inc: (  %tmp77 = phi i64 [ %tmp84, %bb82 ], [ 0, %bb74 ]) IV+1
Chain:   %tmp80 = icmp slt i32 %tmp79, %tmp75 Cost: 0
LSR has identified the following interesting factors and types: *-1
LSR is examining the following fixup sites:
  UserInst=%lsr.iv110, OperandValToReplace=%lsr.iv108, LUIdx=0
  UserInst=%lsr.iv96, OperandValToReplace=%lsr.iv94, LUIdx=1
  UserInst=%lsr.iv84, OperandValToReplace=%lsr.iv82, LUIdx=2
  UserInst=%lsr.iv68, OperandValToReplace=%lsr.iv66, LUIdx=3
  UserInst=%lsr.iv48, OperandValToReplace=%lsr.iv46, LUIdx=4
  UserInst=%lsr.iv30, OperandValToReplace=%lsr.iv28, LUIdx=5
  UserInst=%tmp80, OperandValToReplace=%tmp79, LUIdx=6
  UserInst=%tmp119, OperandValToReplace=%tmp114, LUIdx=7
  UserInst=%tmp100, OperandValToReplace=%tmp95, LUIdx=8
LSR found 9 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({0,+,-1}<nw><%bb96>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Generating cross-use offsets for {{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>: 0 2037 2038 2039 2040 2041 2042 2043
Generating cross-use offsets for {0,+,1}<nuw><nsw><%bb76>: -2043 -2042 -2041 -2040 -2039 -2038 -2037 0
Generating cross-use offsets for 0: 2037 2038 2039 2040 2041 2042 2043
Generating cross-use offsets for {0,+,-1}<nw><%bb76>: 0 2037 2038 2039 2040 2041 2042 2043
Generating cross-use offsets for {{0,+,-1}<%bb17>,+,-1}<%bb43>: 0 2037 2038 2039 2040 2041 2042 2043
Generating cross-use offsets for {{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>: -2043 -2042 -2041 -2040 -2039 -2038 -2037 0
Generating cross-use offsets for {{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>: -2043 -2042 -2041 -2040 -2039 -2038 -2037 0

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2041)
    reg({0,+,-1}<nw><%bb76>) + reg(2041) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({2041,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    -1*reg({{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg(2041) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2041,+,1}<nw><%bb76>)
    reg({2041,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2041,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2040)
    reg({0,+,-1}<nw><%bb76>) + reg(2040) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({2040,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    -1*reg({{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg(2040) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2040,+,1}<nw><%bb76>)
    reg({2040,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2040,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2039)
    reg({0,+,-1}<nw><%bb76>) + reg(2039) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({2039,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    -1*reg({{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg(2039) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2039,+,1}<nw><%bb76>)
    reg({2039,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2039,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2038)
    reg({0,+,-1}<nw><%bb76>) + reg(2038) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({2038,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    -1*reg({{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg(2038) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2038,+,1}<nw><%bb76>)
    reg({2038,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2038,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2037)
    reg({0,+,-1}<nw><%bb76>) + reg(2037) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({2037,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    -1*reg({{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg(2037) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2037,+,1}<nw><%bb76>)
    reg({2037,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2037,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(undef)
    reg({0,+,-1}<nw><%bb76>) + reg(undef) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({undef,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    -1*reg({{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg(undef) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({(-1 * undef),+,1}<nw><%bb76>)
    reg({undef,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({0,+,-1}<nw><%bb96>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg(2042)
    reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg(2042) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({2042,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb76>)
    reg({0,+,-1}<nw><%bb96>) + -1*reg({{{-2042,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg(2042) + reg({0,+,-1}<nw><%bb96>) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({-2042,+,1}<nw><%bb76>)
    reg({2042,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({2042,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({{-2042,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2043)
    reg({0,+,-1}<nw><%bb76>) + reg(2043) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({2043,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    -1*reg({{{-2043,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    reg(2043) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb76>) + reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2043,+,1}<nw><%bb76>)
    reg({2043,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2043,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2041) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({2041,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2041,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2041,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2041,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2041) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering out formula -1*reg({{{-2041,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    in favor of formula reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2040) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({2040,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2040,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2040,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2040,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2040) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering out formula -1*reg({{{-2040,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    in favor of formula reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2039) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({2039,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2039,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2039,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2039,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2039) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering out formula -1*reg({{{-2039,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    in favor of formula reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2038) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({2038,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2038,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2038,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2038,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2038) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering out formula -1*reg({{{-2038,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    in favor of formula reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2037) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({2037,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2037,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2037,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2037,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2037) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering out formula -1*reg({{{-2037,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    in favor of formula reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(undef) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({undef,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({undef,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({(-1 * undef),+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(undef) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering out formula -1*reg({{{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    in favor of formula reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + reg({0,+,-1}<nw><%bb96>)
  Filtering loser reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({{-2042,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2042,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({2042,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + -1*reg({-2042,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg(2042)
  Filtering loser reg(2042) + reg({0,+,-1}<nw><%bb96>) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg(2042) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb96>) + -1*reg({{{-2042,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
  Filtering loser reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb96>) + reg({0,+,-1}<nw><%bb76>)
  Filtering loser reg({2042,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb96>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2043) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2043,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2043,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({-2043,+,1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({2043,+,-1}<nw><%bb76>) + reg({{0,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering out formula -1*reg({{{-2043,+,1}<%bb17>,+,1}<%bb43>,+,1}<%bb76>)
    in favor of formula reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Filtering loser reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2041)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2040)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2039)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2038)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2037)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(undef)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2043)
    reg(2043) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
The search space is too complex.
Narrowing the search space by eliminating formulae which use a superset of registers used by other formulae.
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2041)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2040)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2039)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2038)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2037)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(undef)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2043)
    reg(2043) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
The search space is too complex.
Narrowing the search space by assuming that uses separated by a constant offset will use the same registers.
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2041)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2040)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2039)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2038)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2037)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(undef)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2043)
    reg(2043) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
The search space is too complex.
Narrowing the search space by re-filtering out undesirable dedicated registers.
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2041)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2040)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2039)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2038)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2037)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(undef)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2043)
    reg(2043) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
The search space is too complex.
Narrowing the search space by assuming {0,+,1}<nuw><nsw><%bb76> will yield profitable reuse.
  Deleting reg({{{2041,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Deleting reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Deleting reg(2041) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
  Deleting reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2041)
  Deleting reg({{{2040,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Deleting reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Deleting reg(2040) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
  Deleting reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2040)
  Deleting reg({{{2039,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Deleting reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Deleting reg(2039) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
  Deleting reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2039)
  Deleting reg({{{2038,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Deleting reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Deleting reg(2038) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
  Deleting reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2038)
  Deleting reg({{{2037,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Deleting reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Deleting reg(2037) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
  Deleting reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2037)
  Deleting reg({{{undef,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
  Deleting reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Deleting reg(undef) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
  Deleting reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(undef)
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)
    reg({{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76>) + reg(2043)
    reg(2043) + -1*reg({{{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>,+,1}<nw><%bb76>)
New best at 4 regs, with addrec cost 2, plus 2 base adds, plus 1 setup cost.
 Regs: {0,+,1}<nuw><nsw><%bb76> {{2041,+,-1}<%bb17>,+,-1}<%bb43> {{2040,+,-1}<%bb17>,+,-1}<%bb43> {{2039,+,-1}<%bb17>,+,-1}<%bb43> {{2038,+,-1}<%bb17>,+,-1}<%bb43> {{2037,+,-1}<%bb17>,+,-1}<%bb43> {{undef,+,-1}<%bb17>,+,-1}<%bb43> {0,+,1}<nuw><nsw><%bb96> {{{0,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<nw><%bb76> 2042 2043
New best at 3 regs, with addrec cost 3, plus 2 setup cost.
 Regs: {0,+,1}<nuw><nsw><%bb76> {{2041,+,-1}<%bb17>,+,-1}<%bb43> {{2040,+,-1}<%bb17>,+,-1}<%bb43> {{2039,+,-1}<%bb17>,+,-1}<%bb43> {{2038,+,-1}<%bb17>,+,-1}<%bb43> {{2037,+,-1}<%bb17>,+,-1}<%bb43> {{undef,+,-1}<%bb17>,+,-1}<%bb43> {0,+,1}<nuw><nsw><%bb96> {{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76> {{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>

The chosen solution requires 3 regs, with addrec cost 3, plus 2 setup cost:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2042,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb96>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{{2043,+,-1}<%bb17>,+,-1}<%bb43>,+,-1}<%bb76>)

LSR on loop %bb43:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp47 = icmp slt i32 %tmp46, %tmp42) IV={0,+,1}<nuw><nsw><%bb43>
IV Chain#0  Inc: (  %tmp44 = phi i64 [ %tmp53, %bb52 ], [ 0, %bb41 ]) IV+1
Chain:   %tmp47 = icmp slt i32 %tmp46, %tmp42 Cost: 0
LSR has identified the following interesting factors and types: *-1, *1, (i32), (i64)
LSR is examining the following fixup sites:
  UserInst=%lsr.iv124, OperandValToReplace=%lsr.iv122, LUIdx=0
  UserInst=%lsr.iv118, OperandValToReplace=%lsr.iv116, LUIdx=1
  UserInst=%lsr.iv110, OperandValToReplace=%0, LUIdx=2
  UserInst=%lsr.iv96, OperandValToReplace=%1, LUIdx=3
  UserInst=%lsr.iv84, OperandValToReplace=%2, LUIdx=4
  UserInst=%lsr.iv68, OperandValToReplace=%3, LUIdx=5
  UserInst=%lsr.iv48, OperandValToReplace=%4, LUIdx=6
  UserInst=%lsr.iv30, OperandValToReplace=%5, LUIdx=7
  UserInst=%tmp47, OperandValToReplace=%tmp46, LUIdx=8
  UserInst=%tmp80, OperandValToReplace=%tmp75, LUIdx=9
  UserInst=store 0, OperandValToReplace=%tmp61, LUIdx=10
  UserInst=call, OperandValToReplace=%tmp60, LUIdx=11
  UserInst=%tmp57, OperandValToReplace=%tmp56, LUIdx=12
LSR found 13 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(7180 + @global3),+,1}<nw><%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb43>)
Generating cross-use offsets for {{0,+,-1}<%bb17>,+,-1}<%bb43>: 0 2037 2038 2039 2040 2041 2042 2043 2044
Generating cross-use offsets for {0,+,1}<nuw><nsw><%bb43>: -2044 -2043 -2042 -2041 -2040 -2039 -2038 -2037 -1 0
Generating cross-use offsets for {@global3,+,1}<nw><%bb43>: 0 7180
Skipping cross-use reuse for {@global3,+,1}<nw><%bb43>
Skipping cross-use reuse for {(7180 + @global3),+,1}<nw><%bb43>
Generating cross-use offsets for {0,+,1}<nuw><nsw><%bb43>: 0 7180
Generating cross-use offsets for 0: -1 2037 2038 2039 2040 2041 2042 2043 2044
Generating cross-use offsets for {0,+,-1}<nw><%bb43>: 0 1 2037 2038 2039 2040 2041 2042 2043 2044
Generating cross-use offsets for {0,+,-1}<%bb17>: 0 2037 2038 2039 2040 2041 2042 2043 2044
Generating cross-use offsets for @global3: 0 7180
Skipping cross-use reuse for @global3
Skipping cross-use reuse for (7180 + @global3)
Generating cross-use offsets for {{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>: -2044 -2043 -2042 -2041 -2040 -2039 -2038 -2037 0
Generating cross-use offsets for {0,+,1}<nuw><nsw><%bb17>: -2044 -2043 -2042 -2041 -2040 -2039 -2038 -2037 0
Generating cross-use offsets for {(-1 * @global3),+,-1}<nw><%bb43>: -7180 0
Skipping cross-use reuse for {(-7180 + (-1 * @global3)),+,-1}<nw><%bb43>
Skipping cross-use reuse for {(-1 * @global3),+,-1}<nw><%bb43>
Generating cross-use offsets for {0,+,-1}<nw><%bb43>: -7180 0

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043)
    reg({0,+,-1}<nw><%bb43>) + reg(2043) + reg({0,+,-1}<%bb17>)
    reg({2043,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>)
    reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    -1*reg({{-2043,+,1}<%bb17>,+,1}<%bb43>)
    reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<%bb17>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + -1*reg({-2043,+,1}<%bb43>)
    reg({2043,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2043,+,1}<%bb17>)
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042)
    reg({0,+,-1}<nw><%bb43>) + reg(2042) + reg({0,+,-1}<%bb17>)
    reg({2042,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>)
    reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    -1*reg({{-2042,+,1}<%bb17>,+,1}<%bb43>)
    reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<%bb17>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + -1*reg({-2042,+,1}<%bb43>)
    reg({2042,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2042,+,1}<%bb17>)
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2041)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2041) + reg({0,+,-1}<%bb17>)
    reg({2041,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2041,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2041) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2041,+,1}<%bb43>)
    reg({2041,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2041,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2041,+,1}<%bb17>)
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2040)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2040) + reg({0,+,-1}<%bb17>)
    reg({2040,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2040,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2040) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2040,+,1}<%bb43>)
    reg({2040,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2040,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2040,+,1}<%bb17>)
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2039)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2039) + reg({0,+,-1}<%bb17>)
    reg({2039,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2039,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2039) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2039,+,1}<%bb43>)
    reg({2039,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2039,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2039,+,1}<%bb17>)
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2038)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2038) + reg({0,+,-1}<%bb17>)
    reg({2038,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2038,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2038) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2038,+,1}<%bb43>)
    reg({2038,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2038,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2038,+,1}<%bb17>)
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2037)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2037) + reg({0,+,-1}<%bb17>)
    reg({2037,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2037,+,1}<%bb17>,+,1}<%bb43>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(2037) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2037,+,1}<%bb43>)
    reg({2037,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2037,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2037,+,1}<%bb17>)
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(undef)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(undef) + reg({0,+,-1}<%bb17>)
    reg({undef,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb76>) + -1*reg({{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg(undef) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({(-1 * undef),+,1}<%bb43>)
    reg({undef,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({undef,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({(-1 * undef),+,1}<%bb17>)
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2044)
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + reg({0,+,-1}<%bb17>)
    reg({2044,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>)
    reg({2044,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    -1*reg({{-2044,+,1}<%bb17>,+,1}<%bb43>)
    reg(2044) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
    reg({0,+,-1}<%bb17>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<%bb17>) + -1*reg({-2044,+,1}<%bb43>)
    reg({2044,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2044,+,1}<%bb17>)
    reg({2044,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(7180 + @global3),+,1}<nw><%bb43>)
    reg({@global3,+,1}<nw><%bb43>) + reg(7180)
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(7180) + reg(@global3)
    reg({7180,+,1}<nw><%bb43>) + reg(@global3)
    reg((7180 + @global3)) + reg({0,+,1}<nuw><nsw><%bb43>)
    -1*reg({(-7180 + (-1 * @global3)),+,-1}<nw><%bb43>)
    reg(7180) + -1*reg({(-1 * @global3),+,-1}<nw><%bb43>)
    reg(@global3) + reg(7180) + -1*reg({0,+,-1}<nw><%bb43>)
    reg(@global3) + -1*reg({-7180,+,-1}<nw><%bb43>)
    reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    reg({0,+,1}<nuw><nsw><%bb43>)
    -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb43>)
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(-1)
    -1*reg({1,+,-1}<nw><%bb43>)
    reg(-1) + -1*reg({0,+,-1}<nw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg(2043) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({2043,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + -1*reg({-2043,+,1}<%bb17>)
  Filtering out formula -1*reg({{-2043,+,1}<%bb17>,+,1}<%bb43>)
    in favor of formula reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<%bb17>) + -1*reg({-2043,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg(2042) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({2042,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + -1*reg({-2042,+,1}<%bb17>)
  Filtering out formula -1*reg({{-2042,+,1}<%bb17>,+,1}<%bb43>)
    in favor of formula reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
  Filtering loser reg({0,+,-1}<%bb17>) + -1*reg({-2042,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Filtering loser reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2041)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2041,+,1}<%bb17>)
  Filtering loser reg({2041,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2041,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2041,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2041) + reg({0,+,-1}<%bb17>)
  Filtering loser reg(2041) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({2041,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2041,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Filtering loser reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2040)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2040,+,1}<%bb17>)
  Filtering loser reg({2040,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2040,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2040,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2040) + reg({0,+,-1}<%bb17>)
  Filtering loser reg(2040) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({2040,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2040,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Filtering loser reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2039)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2039,+,1}<%bb17>)
  Filtering loser reg({2039,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2039,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2039,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2039) + reg({0,+,-1}<%bb17>)
  Filtering loser reg(2039) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({2039,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2039,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Filtering loser reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2038)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2038,+,1}<%bb17>)
  Filtering loser reg({2038,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2038,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2038,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2038) + reg({0,+,-1}<%bb17>)
  Filtering loser reg(2038) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({2038,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2038,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Filtering loser reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2037)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2037,+,1}<%bb17>)
  Filtering loser reg({2037,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2037,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({-2037,+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(2037) + reg({0,+,-1}<%bb17>)
  Filtering loser reg(2037) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({2037,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{-2037,+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>)
  Filtering loser reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(undef)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({(-1 * undef),+,1}<%bb17>)
  Filtering loser reg({undef,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({undef,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + -1*reg({(-1 * undef),+,1}<%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<%bb17>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg(undef) + reg({0,+,-1}<%bb17>)
  Filtering loser reg(undef) + reg({0,+,-1}<nw><%bb76>) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Filtering loser reg({undef,+,-1}<%bb43>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb76>) + -1*reg({{(-1 * undef),+,1}<%bb17>,+,1}<%bb43>)
  Filtering loser reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb76>) + reg({0,+,-1}<nw><%bb43>)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({0,+,-1}<nw><%bb43>) + reg(2044) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({2044,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering loser reg({0,+,-1}<nw><%bb43>) + -1*reg({-2044,+,1}<%bb17>)
  Filtering loser reg({2044,+,-1}<%bb43>) + reg({0,+,-1}<%bb17>)
  Filtering loser reg({0,+,-1}<%bb17>) + -1*reg({-2044,+,1}<%bb43>)
  Filtering loser reg({2044,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
  Filtering loser reg({0,+,-1}<%bb17>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  Filtering out formula -1*reg({{-2044,+,1}<%bb17>,+,1}<%bb43>)
    in favor of formula reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
Filtering for use LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
  Filtering out formula reg({@global3,+,1}<nw><%bb43>) + reg(7180)
    in favor of formula reg({(7180 + @global3),+,1}<nw><%bb43>)
  Filtering out formula reg({7180,+,1}<nw><%bb43>) + reg(@global3)
    in favor of formula reg({(7180 + @global3),+,1}<nw><%bb43>)
  Filtering out formula reg(@global3) + -1*reg({-7180,+,-1}<nw><%bb43>)
    in favor of formula reg({(7180 + @global3),+,1}<nw><%bb43>)
  Filtering out formula reg(@global3) + reg(7180) + -1*reg({0,+,-1}<nw><%bb43>)
    in favor of formula reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
  Filtering out formula reg(7180) + -1*reg({(-1 * @global3),+,-1}<nw><%bb43>)
    in favor of formula reg({(7180 + @global3),+,1}<nw><%bb43>)
  Filtering out formula -1*reg({(-7180 + (-1 * @global3)),+,-1}<nw><%bb43>)
    in favor of formula reg({(7180 + @global3),+,1}<nw><%bb43>)
  Filtering out formula reg({0,+,1}<nuw><nsw><%bb43>) + reg(7180) + reg(@global3)
    in favor of formula reg((7180 + @global3)) + reg({0,+,1}<nuw><nsw><%bb43>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({1,+,-1}<nw><%bb43>)
    in favor of formula reg({-1,+,1}<nw><%bb43>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043)
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2043,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042)
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2042,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2044)
    reg({2044,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2044) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(7180 + @global3),+,1}<nw><%bb43>)
    reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
    reg((7180 + @global3)) + reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    reg({0,+,1}<nuw><nsw><%bb43>)
    -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb43>)
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(-1)
    reg(-1) + -1*reg({0,+,-1}<nw><%bb43>)
The search space is too complex.
Narrowing the search space by eliminating formulae which use a superset of registers used by other formulae.
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043)
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2043,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042)
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2042,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2044)
    reg({2044,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2044) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(7180 + @global3),+,1}<nw><%bb43>)
    reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
    reg((7180 + @global3)) + reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    reg({0,+,1}<nuw><nsw><%bb43>)
    -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb43>)
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(-1)
    reg(-1) + -1*reg({0,+,-1}<nw><%bb43>)
The search space is too complex.
Narrowing the search space by assuming that uses separated by a constant offset will use the same registers.
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043)
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2043,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042)
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2042,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2044)
    reg({2044,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2044) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(7180 + @global3),+,1}<nw><%bb43>)
    reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
    reg((7180 + @global3)) + reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    reg({0,+,1}<nuw><nsw><%bb43>)
    -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb43>)
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(-1)
    reg(-1) + -1*reg({0,+,-1}<nw><%bb43>)
The search space is too complex.
Narrowing the search space by re-filtering out undesirable dedicated registers.
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
Filtering for use LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043)
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2043,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042)
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2042,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2044)
    reg({2044,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2044) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(7180 + @global3),+,1}<nw><%bb43>)
    reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
    reg((7180 + @global3)) + reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    reg({0,+,1}<nuw><nsw><%bb43>)
    -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({-1,+,1}<nw><%bb43>)
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(-1)
    reg(-1) + -1*reg({0,+,-1}<nw><%bb43>)
The search space is too complex.
Narrowing the search space by assuming {0,+,1}<nuw><nsw><%bb43> will yield profitable reuse.
  Deleting reg({{2043,+,-1}<%bb17>,+,-1}<%bb43>)
  Deleting reg(2043) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Deleting reg({0,+,-1}<nw><%bb43>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Deleting reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
  Deleting reg({2043,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Deleting reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2043)
  Deleting reg({{2042,+,-1}<%bb17>,+,-1}<%bb43>)
  Deleting reg(2042) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  Deleting reg({0,+,-1}<nw><%bb43>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Deleting reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
  Deleting reg({2042,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Deleting reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2042)
  Deleting reg({-1,+,1}<nw><%bb43>)
  Deleting reg(-1) + -1*reg({0,+,-1}<nw><%bb43>)
After pre-selection:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2041) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2041,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2040) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2040,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2039) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2039,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2038) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2038,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2037) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{2037,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(undef) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
    reg({{undef,+,-1}<%bb17>,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({{2044,+,-1}<%bb17>,+,-1}<%bb43>)
    reg({{0,+,-1}<%bb17>,+,-1}<%bb43>) + reg(2044)
    reg({2044,+,-1}<%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg(2044) + -1*reg({{0,+,1}<nuw><nsw><%bb17>,+,1}<%bb43>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(7180 + @global3),+,1}<nw><%bb43>)
    reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
    reg((7180 + @global3)) + reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    reg({0,+,1}<nuw><nsw><%bb43>)
    -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(-1)
New best at 6 regs, with addrec cost 4, plus 8 base adds, plus 1 setup cost.
 Regs: {2042,+,-1}<%bb17> {2041,+,-1}<%bb17> {undef,+,-1}<%bb17> -1 {2038,+,-1}<%bb17> 2044 {2037,+,-1}<%bb17> {2040,+,-1}<%bb17> {0,+,1}<nuw><nsw><%bb76> {2043,+,-1}<%bb17> {2039,+,-1}<%bb17> {0,+,-1}<nw><%bb43> {0,+,1}<nuw><nsw><%bb17> {0,+,1}<nuw><nsw><%bb43> {(7180 + @global3),+,1}<nw><%bb43> {0,+,1}<nuw><nsw><%bb43>
New best at 6 regs, with addrec cost 3, plus 8 base adds, plus 1 setup cost.
 Regs: {2042,+,-1}<%bb17> {2041,+,-1}<%bb17> {undef,+,-1}<%bb17> -1 {2038,+,-1}<%bb17> 2044 {2037,+,-1}<%bb17> {2040,+,-1}<%bb17> {0,+,1}<nuw><nsw><%bb76> {2043,+,-1}<%bb17> {2039,+,-1}<%bb17> {0,+,-1}<nw><%bb43> {0,+,1}<nuw><nsw><%bb17> {0,+,-1}<nw><%bb43> (7180 + @global3) {0,+,1}<nuw><nsw><%bb43>

The chosen solution requires 6 regs, with addrec cost 3, plus 8 base adds, plus 1 setup cost:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb43>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Address of i8, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg((7180 + @global3)) + -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i64
    -1*reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb43>) + reg(-1)

LSR on loop %bb17:
Collecting IV Chains.
IV Chain#0 Head: (  %tmp21 = icmp slt i32 %tmp20, %tmp16) IV={0,+,1}<%bb17>
IV Chain#0  Inc: (  %tmp18 = phi i64 [ %tmp28, %bb26 ], [ 0, %bb15 ]) IV+1
Chain:   %tmp21 = icmp slt i32 %tmp20, %tmp16 Cost: 0
LSR has identified the following interesting factors and types: *-1, *1, (i32), (i64)
LSR is examining the following fixup sites:
  UserInst=%lsr.iv124, OperandValToReplace=%0, LUIdx=0
  UserInst=%lsr.iv118, OperandValToReplace=%1, LUIdx=1
  UserInst=%lsr.iv110, OperandValToReplace=%7, LUIdx=2
  UserInst=%lsr.iv96, OperandValToReplace=%9, LUIdx=3
  UserInst=%lsr.iv84, OperandValToReplace=%11, LUIdx=4
  UserInst=%lsr.iv68, OperandValToReplace=%13, LUIdx=5
  UserInst=%lsr.iv48, OperandValToReplace=%15, LUIdx=6
  UserInst=%lsr.iv30, OperandValToReplace=%17, LUIdx=7
  UserInst=%tmp21, OperandValToReplace=%tmp20, LUIdx=8
  UserInst=%tmp80, OperandValToReplace=%5, LUIdx=9
  UserInst=%tmp47, OperandValToReplace=%tmp42, LUIdx=10
  UserInst=call, OperandValToReplace=%tmp38, LUIdx=11
  UserInst=call, OperandValToReplace=%tmp38, LUIdx=11
LSR found 12 uses:
LSR is examining the following uses:
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2044,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2045,+,-1}<%bb17>)
  LSR Use: Kind=Basic, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(5131 + @global3),+,1}<nw><%bb17>)
Generating cross-use offsets for {0,+,-1}<nw><%bb17>: 0 2037 2038 2039 2040 2041 2042 2043 2044 2045
Generating cross-use offsets for {0,+,1}<nuw><nsw><%bb17>: -2045 -2044 -2043 -2042 -2041 -2040 -2039 -2038 -2037 0
Generating cross-use offsets for {@global3,+,1}<%bb17>: 0 5131
Skipping cross-use reuse for {@global3,+,1}<%bb17>
Skipping cross-use reuse for {(5131 + @global3),+,1}<nw><%bb17>
Generating cross-use offsets for 0: 2037 2038 2039 2040 2041 2042 2043 2044 2045
Generating cross-use offsets for {0,+,1}<%bb17>: 0 5131
Skipping cross-use reuse for {0,+,1}<%bb17>
Skipping cross-use reuse for {5131,+,1}<nw><%bb17>
Generating cross-use offsets for @global3: 0 5131
Skipping cross-use reuse for @global3
Skipping cross-use reuse for (5131 + @global3)
Generating cross-use offsets for {(-1 * @global3),+,-1}<%bb17>: -5131 0
Skipping cross-use reuse for {(-5131 + (-1 * @global3)),+,-1}<nw><%bb17>
Skipping cross-use reuse for {(-1 * @global3),+,-1}<%bb17>
Generating cross-use offsets for {0,+,-1}<%bb17>: -5131 0
Skipping cross-use reuse for {-5131,+,-1}<nw><%bb17>
Skipping cross-use reuse for {0,+,-1}<%bb17>

After generating reuse formulae:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>) + reg(2043)
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2043,+,1}<%bb17>)
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg(2043) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>) + reg(2042)
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2042,+,1}<%bb17>)
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg(2042) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2041,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
    reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2041)
    reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2041,+,1}<%bb17>)
    reg({2041,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
    reg(2041) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2041) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2040,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
    reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2040)
    reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2040,+,1}<%bb17>)
    reg({2040,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
    reg(2040) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2040) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2039,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
    reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2039)
    reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2039,+,1}<%bb17>)
    reg({2039,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
    reg(2039) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2039) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2038,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
    reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2038)
    reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2038,+,1}<%bb17>)
    reg({2038,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
    reg(2038) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2038) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2037,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
    reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2037)
    reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2037,+,1}<%bb17>)
    reg({2037,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
    reg(2037) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2037) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({undef,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
    reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(undef)
    reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({(-1 * undef),+,1}<%bb17>)
    reg({undef,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
    reg(undef) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(undef) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2044,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>)
    reg({0,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>) + reg(2044)
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2044,+,1}<nw><%bb17>)
    reg({2044,+,-1}<nw><%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg(2044) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2045,+,-1}<%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2045)
    -1*reg({-2045,+,1}<%bb17>)
    reg(2045) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(5131 + @global3),+,1}<nw><%bb17>)
    reg({@global3,+,1}<%bb17>) + reg(5131)
    reg({0,+,1}<%bb17>) + reg(5131) + reg(@global3)
    reg({5131,+,1}<nw><%bb17>) + reg(@global3)
    reg((5131 + @global3)) + reg({0,+,1}<%bb17>)
    -1*reg({(-5131 + (-1 * @global3)),+,-1}<nw><%bb17>)
    reg(5131) + -1*reg({(-1 * @global3),+,-1}<%bb17>)
    reg(@global3) + reg(5131) + -1*reg({0,+,-1}<%bb17>)
    reg(@global3) + -1*reg({-5131,+,-1}<nw><%bb17>)
    reg((5131 + @global3)) + -1*reg({0,+,-1}<%bb17>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula reg({2043,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    in favor of formula reg({0,+,-1}<nw><%bb43>) + -1*reg({-2043,+,1}<%bb17>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula reg({2042,+,-1}<%bb17>) + reg({0,+,-1}<nw><%bb43>)
    in favor of formula reg({0,+,-1}<nw><%bb43>) + -1*reg({-2042,+,1}<%bb17>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({2041,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg(2041) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg(2041) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2041,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2041,+,1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2041)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({2040,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg(2040) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg(2040) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2040,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2040,+,1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2040)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({2039,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg(2039) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg(2039) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2039,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2039,+,1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2039)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({2038,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg(2038) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg(2038) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2038,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2038,+,1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2038)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({2037,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg(2037) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg(2037) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({2037,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({-2037,+,1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(2037)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering loser reg({undef,+,-1}<%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg(undef) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg(undef) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  Filtering loser reg({undef,+,-1}<%bb17>) + -1*reg({{0,+,1}<nuw><nsw><%bb43>,+,1}<nw><%bb76>)
  Filtering loser reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + -1*reg({(-1 * undef),+,1}<%bb17>)
  Filtering loser reg({0,+,-1}<nw><%bb17>) + reg({{0,+,-1}<nw><%bb43>,+,-1}<nw><%bb76>) + reg(undef)
Filtering for use LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula reg({2044,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>)
    in favor of formula reg({0,+,-1}<nw><%bb43>) + -1*reg({-2044,+,1}<nw><%bb17>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  Filtering out formula -1*reg({-2045,+,1}<%bb17>)
    in favor of formula reg({2045,+,-1}<%bb17>)
Filtering for use LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
  Filtering out formula reg({@global3,+,1}<%bb17>) + reg(5131)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula reg((5131 + @global3)) + -1*reg({0,+,-1}<%bb17>)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula reg(@global3) + -1*reg({-5131,+,-1}<nw><%bb17>)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula reg(@global3) + reg(5131) + -1*reg({0,+,-1}<%bb17>)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula reg(5131) + -1*reg({(-1 * @global3),+,-1}<%bb17>)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula -1*reg({(-5131 + (-1 * @global3)),+,-1}<nw><%bb17>)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula reg((5131 + @global3)) + reg({0,+,1}<%bb17>)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula reg({5131,+,1}<nw><%bb17>) + reg(@global3)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)
  Filtering out formula reg({0,+,1}<%bb17>) + reg(5131) + reg(@global3)
    in favor of formula reg({(5131 + @global3),+,1}<nw><%bb17>)

After filtering out undesirable candidates:
LSR is examining the following uses:
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2043,+,1}<%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>) + reg(2043)
    reg({0,+,-1}<nw><%bb17>) + reg(2043) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2043,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg(2043) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2042,+,1}<%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>) + reg(2042)
    reg({0,+,-1}<nw><%bb17>) + reg(2042) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2042,+,-1}<%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg(2042) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
  LSR Use: Kind=Basic, Offsets={0}, widest fixup type: i32
    reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({0,+,-1}<nw><%bb43>) + -1*reg({-2044,+,1}<nw><%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg({0,+,-1}<nw><%bb43>) + reg(2044)
    reg({0,+,-1}<nw><%bb17>) + reg(2044) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg({2044,+,-1}<nw><%bb17>) + -1*reg({0,+,1}<nuw><nsw><%bb43>)
    reg(2044) + reg({0,+,-1}<nw><%bb43>) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i32
    reg({2045,+,-1}<%bb17>)
    reg({0,+,-1}<nw><%bb17>) + reg(2045)
    reg(2045) + -1*reg({0,+,1}<nuw><nsw><%bb17>)
  LSR Use: Kind=Special, Offsets={0}, all-fixups-outside-loop, widest fixup type: i8*
    reg({(5131 + @global3),+,1}<nw><%bb17>)

No Satisfactory Solution
