; ModuleID = '<stdin>'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128"
target triple = "i386-apple-darwin9.6"

%struct.Key = type { { i32, i32 } }

define i32 @bar(i64 %key_token2) nounwind {
entry:
  %iospec = alloca %struct.Key, align 8
  %ret = alloca i32, align 4
  %0 = getelementptr %struct.Key* %iospec, i32 0, i32 0, i32 0
  store i32 0, i32* %0, align 8
  %1 = getelementptr %struct.Key* %iospec, i32 0, i32 0, i32 1
  store i32 0, i32* %1, align 4
  %2 = bitcast %struct.Key* %iospec to i64*
  store i64 %key_token2, i64* %2, align 8
  %3 = call i32 (...)* @foo(%struct.Key* byval align 4 %iospec, i32* %ret) nounwind
  %4 = load i32* %ret, align 4
  ret i32 %4
}

declare i32 @foo(...)
