; ModuleID = '<stdin>'

define internal i32* @incdec(i1 %C, i32* %V) {
  %X = load i32* %V
  br i1 %C, label %T, label %F

T:                                                ; preds = %0
  %X1 = add i32 %X, 1
  store i32 %X1, i32* %V
  ret i32* %V

F:                                                ; preds = %0
  %X2 = sub i32 %X, 1
  store i32 %X2, i32* %V
  ret i32* %V
}

define internal { i32, i32 } @foo(i32 %A, i32 %B) {
  %X = add i32 %A, %B
  %Y = insertvalue { i32, i32 } undef, i32 %A, 0
  %Z = insertvalue { i32, i32 } %Y, i32 %X, 1
  ret { i32, i32 } %Z
}

define void @caller(i1 %C) {
  %Q = alloca i32
  %W = call i32* @incdec(i1 %C, i32* %Q)
  %S1 = call { i32, i32 } @foo(i32 1, i32 2)
  %S2 = invoke { i32, i32 } @foo(i32 3, i32 4)
          to label %OK unwind label %LPAD

OK:                                               ; preds = %0
  %Z = add i32 1, 3
  store i32 %Z, i32* %Q
  br label %RET

LPAD:                                             ; preds = %0
  %exn = landingpad { i8*, i32 } personality i32 (...)* @__gxx_personality_v0
          cleanup
  br label %RET

RET:                                              ; preds = %LPAD, %OK
  ret void
}

declare i32 @__gxx_personality_v0(...)
