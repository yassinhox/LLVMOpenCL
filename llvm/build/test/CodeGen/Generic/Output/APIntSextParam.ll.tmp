	.file	"<stdin>"
	.text
	.globl	i1_ls
	.align	16, 0x90
	.type	i1_ls,@function
i1_ls:                                  # @i1_ls
# BB#0:
	andb	$1, %dil
	movb	%dil, i1_s(%rip)
	ret
.Ltmp0:
	.size	i1_ls, .Ltmp0-i1_ls

	.globl	i2_ls
	.align	16, 0x90
	.type	i2_ls,@function
i2_ls:                                  # @i2_ls
# BB#0:
	andb	$3, %dil
	movb	%dil, i2_s(%rip)
	ret
.Ltmp1:
	.size	i2_ls, .Ltmp1-i2_ls

	.globl	i3_ls
	.align	16, 0x90
	.type	i3_ls,@function
i3_ls:                                  # @i3_ls
# BB#0:
	andb	$7, %dil
	movb	%dil, i3_s(%rip)
	ret
.Ltmp2:
	.size	i3_ls, .Ltmp2-i3_ls

	.globl	i4_ls
	.align	16, 0x90
	.type	i4_ls,@function
i4_ls:                                  # @i4_ls
# BB#0:
	andb	$15, %dil
	movb	%dil, i4_s(%rip)
	ret
.Ltmp3:
	.size	i4_ls, .Ltmp3-i4_ls

	.globl	i5_ls
	.align	16, 0x90
	.type	i5_ls,@function
i5_ls:                                  # @i5_ls
# BB#0:
	andb	$31, %dil
	movb	%dil, i5_s(%rip)
	ret
.Ltmp4:
	.size	i5_ls, .Ltmp4-i5_ls

	.globl	i6_ls
	.align	16, 0x90
	.type	i6_ls,@function
i6_ls:                                  # @i6_ls
# BB#0:
	andb	$63, %dil
	movb	%dil, i6_s(%rip)
	ret
.Ltmp5:
	.size	i6_ls, .Ltmp5-i6_ls

	.globl	i7_ls
	.align	16, 0x90
	.type	i7_ls,@function
i7_ls:                                  # @i7_ls
# BB#0:
	andb	$127, %dil
	movb	%dil, i7_s(%rip)
	ret
.Ltmp6:
	.size	i7_ls, .Ltmp6-i7_ls

	.globl	i8_ls
	.align	16, 0x90
	.type	i8_ls,@function
i8_ls:                                  # @i8_ls
# BB#0:
	movb	%dil, i8_s(%rip)
	ret
.Ltmp7:
	.size	i8_ls, .Ltmp7-i8_ls

	.globl	i9_ls
	.align	16, 0x90
	.type	i9_ls,@function
i9_ls:                                  # @i9_ls
# BB#0:
	movswl	%di, %eax
	andl	$511, %eax              # imm = 0x1FF
	movw	%ax, i9_s(%rip)
	ret
.Ltmp8:
	.size	i9_ls, .Ltmp8-i9_ls

	.globl	i10_ls
	.align	16, 0x90
	.type	i10_ls,@function
i10_ls:                                 # @i10_ls
# BB#0:
	movswl	%di, %eax
	andl	$1023, %eax             # imm = 0x3FF
	movw	%ax, i10_s(%rip)
	ret
.Ltmp9:
	.size	i10_ls, .Ltmp9-i10_ls

	.globl	i11_ls
	.align	16, 0x90
	.type	i11_ls,@function
i11_ls:                                 # @i11_ls
# BB#0:
	movswl	%di, %eax
	andl	$2047, %eax             # imm = 0x7FF
	movw	%ax, i11_s(%rip)
	ret
.Ltmp10:
	.size	i11_ls, .Ltmp10-i11_ls

	.globl	i12_ls
	.align	16, 0x90
	.type	i12_ls,@function
i12_ls:                                 # @i12_ls
# BB#0:
	movswl	%di, %eax
	andl	$4095, %eax             # imm = 0xFFF
	movw	%ax, i12_s(%rip)
	ret
.Ltmp11:
	.size	i12_ls, .Ltmp11-i12_ls

	.globl	i13_ls
	.align	16, 0x90
	.type	i13_ls,@function
i13_ls:                                 # @i13_ls
# BB#0:
	movswl	%di, %eax
	andl	$8191, %eax             # imm = 0x1FFF
	movw	%ax, i13_s(%rip)
	ret
.Ltmp12:
	.size	i13_ls, .Ltmp12-i13_ls

	.globl	i14_ls
	.align	16, 0x90
	.type	i14_ls,@function
i14_ls:                                 # @i14_ls
# BB#0:
	movswl	%di, %eax
	andl	$16383, %eax            # imm = 0x3FFF
	movw	%ax, i14_s(%rip)
	ret
.Ltmp13:
	.size	i14_ls, .Ltmp13-i14_ls

	.globl	i15_ls
	.align	16, 0x90
	.type	i15_ls,@function
i15_ls:                                 # @i15_ls
# BB#0:
	movswl	%di, %eax
	andl	$32767, %eax            # imm = 0x7FFF
	movw	%ax, i15_s(%rip)
	ret
.Ltmp14:
	.size	i15_ls, .Ltmp14-i15_ls

	.globl	i16_ls
	.align	16, 0x90
	.type	i16_ls,@function
i16_ls:                                 # @i16_ls
# BB#0:
	movw	%di, i16_s(%rip)
	ret
.Ltmp15:
	.size	i16_ls, .Ltmp15-i16_ls

	.globl	i17_ls
	.align	16, 0x90
	.type	i17_ls,@function
i17_ls:                                 # @i17_ls
# BB#0:
	andl	$131071, %edi           # imm = 0x1FFFF
	movw	%di, i17_s(%rip)
	shrl	$16, %edi
	movb	%dil, i17_s+2(%rip)
	ret
.Ltmp16:
	.size	i17_ls, .Ltmp16-i17_ls

	.globl	i18_ls
	.align	16, 0x90
	.type	i18_ls,@function
i18_ls:                                 # @i18_ls
# BB#0:
	andl	$262143, %edi           # imm = 0x3FFFF
	movw	%di, i18_s(%rip)
	shrl	$16, %edi
	movb	%dil, i18_s+2(%rip)
	ret
.Ltmp17:
	.size	i18_ls, .Ltmp17-i18_ls

	.globl	i19_ls
	.align	16, 0x90
	.type	i19_ls,@function
i19_ls:                                 # @i19_ls
# BB#0:
	andl	$524287, %edi           # imm = 0x7FFFF
	movw	%di, i19_s(%rip)
	shrl	$16, %edi
	movb	%dil, i19_s+2(%rip)
	ret
.Ltmp18:
	.size	i19_ls, .Ltmp18-i19_ls

	.globl	i20_ls
	.align	16, 0x90
	.type	i20_ls,@function
i20_ls:                                 # @i20_ls
# BB#0:
	andl	$1048575, %edi          # imm = 0xFFFFF
	movw	%di, i20_s(%rip)
	shrl	$16, %edi
	movb	%dil, i20_s+2(%rip)
	ret
.Ltmp19:
	.size	i20_ls, .Ltmp19-i20_ls

	.globl	i21_ls
	.align	16, 0x90
	.type	i21_ls,@function
i21_ls:                                 # @i21_ls
# BB#0:
	andl	$2097151, %edi          # imm = 0x1FFFFF
	movw	%di, i21_s(%rip)
	shrl	$16, %edi
	movb	%dil, i21_s+2(%rip)
	ret
.Ltmp20:
	.size	i21_ls, .Ltmp20-i21_ls

	.globl	i22_ls
	.align	16, 0x90
	.type	i22_ls,@function
i22_ls:                                 # @i22_ls
# BB#0:
	andl	$4194303, %edi          # imm = 0x3FFFFF
	movw	%di, i22_s(%rip)
	shrl	$16, %edi
	movb	%dil, i22_s+2(%rip)
	ret
.Ltmp21:
	.size	i22_ls, .Ltmp21-i22_ls

	.globl	i23_ls
	.align	16, 0x90
	.type	i23_ls,@function
i23_ls:                                 # @i23_ls
# BB#0:
	andl	$8388607, %edi          # imm = 0x7FFFFF
	movw	%di, i23_s(%rip)
	shrl	$16, %edi
	movb	%dil, i23_s+2(%rip)
	ret
.Ltmp22:
	.size	i23_ls, .Ltmp22-i23_ls

	.globl	i24_ls
	.align	16, 0x90
	.type	i24_ls,@function
i24_ls:                                 # @i24_ls
# BB#0:
	movw	%di, i24_s(%rip)
	shrl	$16, %edi
	movb	%dil, i24_s+2(%rip)
	ret
.Ltmp23:
	.size	i24_ls, .Ltmp23-i24_ls

	.globl	i25_ls
	.align	16, 0x90
	.type	i25_ls,@function
i25_ls:                                 # @i25_ls
# BB#0:
	andl	$33554431, %edi         # imm = 0x1FFFFFF
	movl	%edi, i25_s(%rip)
	ret
.Ltmp24:
	.size	i25_ls, .Ltmp24-i25_ls

	.globl	i26_ls
	.align	16, 0x90
	.type	i26_ls,@function
i26_ls:                                 # @i26_ls
# BB#0:
	andl	$67108863, %edi         # imm = 0x3FFFFFF
	movl	%edi, i26_s(%rip)
	ret
.Ltmp25:
	.size	i26_ls, .Ltmp25-i26_ls

	.globl	i27_ls
	.align	16, 0x90
	.type	i27_ls,@function
i27_ls:                                 # @i27_ls
# BB#0:
	andl	$134217727, %edi        # imm = 0x7FFFFFF
	movl	%edi, i27_s(%rip)
	ret
.Ltmp26:
	.size	i27_ls, .Ltmp26-i27_ls

	.globl	i28_ls
	.align	16, 0x90
	.type	i28_ls,@function
i28_ls:                                 # @i28_ls
# BB#0:
	andl	$268435455, %edi        # imm = 0xFFFFFFF
	movl	%edi, i28_s(%rip)
	ret
.Ltmp27:
	.size	i28_ls, .Ltmp27-i28_ls

	.globl	i29_ls
	.align	16, 0x90
	.type	i29_ls,@function
i29_ls:                                 # @i29_ls
# BB#0:
	andl	$536870911, %edi        # imm = 0x1FFFFFFF
	movl	%edi, i29_s(%rip)
	ret
.Ltmp28:
	.size	i29_ls, .Ltmp28-i29_ls

	.globl	i30_ls
	.align	16, 0x90
	.type	i30_ls,@function
i30_ls:                                 # @i30_ls
# BB#0:
	andl	$1073741823, %edi       # imm = 0x3FFFFFFF
	movl	%edi, i30_s(%rip)
	ret
.Ltmp29:
	.size	i30_ls, .Ltmp29-i30_ls

	.globl	i31_ls
	.align	16, 0x90
	.type	i31_ls,@function
i31_ls:                                 # @i31_ls
# BB#0:
	andl	$2147483647, %edi       # imm = 0x7FFFFFFF
	movl	%edi, i31_s(%rip)
	ret
.Ltmp30:
	.size	i31_ls, .Ltmp30-i31_ls

	.globl	i32_ls
	.align	16, 0x90
	.type	i32_ls,@function
i32_ls:                                 # @i32_ls
# BB#0:
	movl	%edi, i32_s(%rip)
	ret
.Ltmp31:
	.size	i32_ls, .Ltmp31-i32_ls

	.globl	i33_ls
	.align	16, 0x90
	.type	i33_ls,@function
i33_ls:                                 # @i33_ls
# BB#0:
	movabsq	$8589934591, %rax       # imm = 0x1FFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i33_s(%rip)
	shrq	$32, %rax
	movb	%al, i33_s+4(%rip)
	ret
.Ltmp32:
	.size	i33_ls, .Ltmp32-i33_ls

	.globl	i34_ls
	.align	16, 0x90
	.type	i34_ls,@function
i34_ls:                                 # @i34_ls
# BB#0:
	movabsq	$17179869183, %rax      # imm = 0x3FFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i34_s(%rip)
	shrq	$32, %rax
	movb	%al, i34_s+4(%rip)
	ret
.Ltmp33:
	.size	i34_ls, .Ltmp33-i34_ls

	.globl	i35_ls
	.align	16, 0x90
	.type	i35_ls,@function
i35_ls:                                 # @i35_ls
# BB#0:
	movabsq	$34359738367, %rax      # imm = 0x7FFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i35_s(%rip)
	shrq	$32, %rax
	movb	%al, i35_s+4(%rip)
	ret
.Ltmp34:
	.size	i35_ls, .Ltmp34-i35_ls

	.globl	i36_ls
	.align	16, 0x90
	.type	i36_ls,@function
i36_ls:                                 # @i36_ls
# BB#0:
	movabsq	$68719476735, %rax      # imm = 0xFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i36_s(%rip)
	shrq	$32, %rax
	movb	%al, i36_s+4(%rip)
	ret
.Ltmp35:
	.size	i36_ls, .Ltmp35-i36_ls

	.globl	i37_ls
	.align	16, 0x90
	.type	i37_ls,@function
i37_ls:                                 # @i37_ls
# BB#0:
	movabsq	$137438953471, %rax     # imm = 0x1FFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i37_s(%rip)
	shrq	$32, %rax
	movb	%al, i37_s+4(%rip)
	ret
.Ltmp36:
	.size	i37_ls, .Ltmp36-i37_ls

	.globl	i38_ls
	.align	16, 0x90
	.type	i38_ls,@function
i38_ls:                                 # @i38_ls
# BB#0:
	movabsq	$274877906943, %rax     # imm = 0x3FFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i38_s(%rip)
	shrq	$32, %rax
	movb	%al, i38_s+4(%rip)
	ret
.Ltmp37:
	.size	i38_ls, .Ltmp37-i38_ls

	.globl	i39_ls
	.align	16, 0x90
	.type	i39_ls,@function
i39_ls:                                 # @i39_ls
# BB#0:
	movabsq	$549755813887, %rax     # imm = 0x7FFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i39_s(%rip)
	shrq	$32, %rax
	movb	%al, i39_s+4(%rip)
	ret
.Ltmp38:
	.size	i39_ls, .Ltmp38-i39_ls

	.globl	i40_ls
	.align	16, 0x90
	.type	i40_ls,@function
i40_ls:                                 # @i40_ls
# BB#0:
	movl	%edi, i40_s(%rip)
	shrq	$32, %rdi
	movb	%dil, i40_s+4(%rip)
	ret
.Ltmp39:
	.size	i40_ls, .Ltmp39-i40_ls

	.globl	i41_ls
	.align	16, 0x90
	.type	i41_ls,@function
i41_ls:                                 # @i41_ls
# BB#0:
	movabsq	$2199023255551, %rax    # imm = 0x1FFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i41_s(%rip)
	shrq	$32, %rax
	movw	%ax, i41_s+4(%rip)
	ret
.Ltmp40:
	.size	i41_ls, .Ltmp40-i41_ls

	.globl	i42_ls
	.align	16, 0x90
	.type	i42_ls,@function
i42_ls:                                 # @i42_ls
# BB#0:
	movabsq	$4398046511103, %rax    # imm = 0x3FFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i42_s(%rip)
	shrq	$32, %rax
	movw	%ax, i42_s+4(%rip)
	ret
.Ltmp41:
	.size	i42_ls, .Ltmp41-i42_ls

	.globl	i43_ls
	.align	16, 0x90
	.type	i43_ls,@function
i43_ls:                                 # @i43_ls
# BB#0:
	movabsq	$8796093022207, %rax    # imm = 0x7FFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i43_s(%rip)
	shrq	$32, %rax
	movw	%ax, i43_s+4(%rip)
	ret
.Ltmp42:
	.size	i43_ls, .Ltmp42-i43_ls

	.globl	i44_ls
	.align	16, 0x90
	.type	i44_ls,@function
i44_ls:                                 # @i44_ls
# BB#0:
	movabsq	$17592186044415, %rax   # imm = 0xFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i44_s(%rip)
	shrq	$32, %rax
	movw	%ax, i44_s+4(%rip)
	ret
.Ltmp43:
	.size	i44_ls, .Ltmp43-i44_ls

	.globl	i45_ls
	.align	16, 0x90
	.type	i45_ls,@function
i45_ls:                                 # @i45_ls
# BB#0:
	movabsq	$35184372088831, %rax   # imm = 0x1FFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i45_s(%rip)
	shrq	$32, %rax
	movw	%ax, i45_s+4(%rip)
	ret
.Ltmp44:
	.size	i45_ls, .Ltmp44-i45_ls

	.globl	i46_ls
	.align	16, 0x90
	.type	i46_ls,@function
i46_ls:                                 # @i46_ls
# BB#0:
	movabsq	$70368744177663, %rax   # imm = 0x3FFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i46_s(%rip)
	shrq	$32, %rax
	movw	%ax, i46_s+4(%rip)
	ret
.Ltmp45:
	.size	i46_ls, .Ltmp45-i46_ls

	.globl	i47_ls
	.align	16, 0x90
	.type	i47_ls,@function
i47_ls:                                 # @i47_ls
# BB#0:
	movabsq	$140737488355327, %rax  # imm = 0x7FFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i47_s(%rip)
	shrq	$32, %rax
	movw	%ax, i47_s+4(%rip)
	ret
.Ltmp46:
	.size	i47_ls, .Ltmp46-i47_ls

	.globl	i48_ls
	.align	16, 0x90
	.type	i48_ls,@function
i48_ls:                                 # @i48_ls
# BB#0:
	movl	%edi, i48_s(%rip)
	shrq	$32, %rdi
	movw	%di, i48_s+4(%rip)
	ret
.Ltmp47:
	.size	i48_ls, .Ltmp47-i48_ls

	.globl	i49_ls
	.align	16, 0x90
	.type	i49_ls,@function
i49_ls:                                 # @i49_ls
# BB#0:
	movabsq	$562949953421311, %rax  # imm = 0x1FFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i49_s(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i49_s+6(%rip)
	shrq	$32, %rax
	movw	%ax, i49_s+4(%rip)
	ret
.Ltmp48:
	.size	i49_ls, .Ltmp48-i49_ls

	.globl	i50_ls
	.align	16, 0x90
	.type	i50_ls,@function
i50_ls:                                 # @i50_ls
# BB#0:
	movabsq	$1125899906842623, %rax # imm = 0x3FFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i50_s(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i50_s+6(%rip)
	shrq	$32, %rax
	movw	%ax, i50_s+4(%rip)
	ret
.Ltmp49:
	.size	i50_ls, .Ltmp49-i50_ls

	.globl	i51_ls
	.align	16, 0x90
	.type	i51_ls,@function
i51_ls:                                 # @i51_ls
# BB#0:
	movabsq	$2251799813685247, %rax # imm = 0x7FFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i51_s(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i51_s+6(%rip)
	shrq	$32, %rax
	movw	%ax, i51_s+4(%rip)
	ret
.Ltmp50:
	.size	i51_ls, .Ltmp50-i51_ls

	.globl	i52_ls
	.align	16, 0x90
	.type	i52_ls,@function
i52_ls:                                 # @i52_ls
# BB#0:
	movabsq	$4503599627370495, %rax # imm = 0xFFFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i52_s(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i52_s+6(%rip)
	shrq	$32, %rax
	movw	%ax, i52_s+4(%rip)
	ret
.Ltmp51:
	.size	i52_ls, .Ltmp51-i52_ls

	.globl	i53_ls
	.align	16, 0x90
	.type	i53_ls,@function
i53_ls:                                 # @i53_ls
# BB#0:
	movabsq	$9007199254740991, %rax # imm = 0x1FFFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i53_s(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i53_s+6(%rip)
	shrq	$32, %rax
	movw	%ax, i53_s+4(%rip)
	ret
.Ltmp52:
	.size	i53_ls, .Ltmp52-i53_ls

	.globl	i54_ls
	.align	16, 0x90
	.type	i54_ls,@function
i54_ls:                                 # @i54_ls
# BB#0:
	movabsq	$18014398509481983, %rax # imm = 0x3FFFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i54_s(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i54_s+6(%rip)
	shrq	$32, %rax
	movw	%ax, i54_s+4(%rip)
	ret
.Ltmp53:
	.size	i54_ls, .Ltmp53-i54_ls

	.globl	i55_ls
	.align	16, 0x90
	.type	i55_ls,@function
i55_ls:                                 # @i55_ls
# BB#0:
	movabsq	$36028797018963967, %rax # imm = 0x7FFFFFFFFFFFFF
	andq	%rdi, %rax
	movl	%eax, i55_s(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i55_s+6(%rip)
	shrq	$32, %rax
	movw	%ax, i55_s+4(%rip)
	ret
.Ltmp54:
	.size	i55_ls, .Ltmp54-i55_ls

	.globl	i56_ls
	.align	16, 0x90
	.type	i56_ls,@function
i56_ls:                                 # @i56_ls
# BB#0:
	movl	%edi, i56_s(%rip)
	movq	%rdi, %rax
	shrq	$48, %rax
	movb	%al, i56_s+6(%rip)
	shrq	$32, %rdi
	movw	%di, i56_s+4(%rip)
	ret
.Ltmp55:
	.size	i56_ls, .Ltmp55-i56_ls

	.globl	i57_ls
	.align	16, 0x90
	.type	i57_ls,@function
i57_ls:                                 # @i57_ls
# BB#0:
	movabsq	$144115188075855871, %rax # imm = 0x1FFFFFFFFFFFFFF
	andq	%rdi, %rax
	movq	%rax, i57_s(%rip)
	ret
.Ltmp56:
	.size	i57_ls, .Ltmp56-i57_ls

	.globl	i58_ls
	.align	16, 0x90
	.type	i58_ls,@function
i58_ls:                                 # @i58_ls
# BB#0:
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	andq	%rdi, %rax
	movq	%rax, i58_s(%rip)
	ret
.Ltmp57:
	.size	i58_ls, .Ltmp57-i58_ls

	.globl	i59_ls
	.align	16, 0x90
	.type	i59_ls,@function
i59_ls:                                 # @i59_ls
# BB#0:
	movabsq	$576460752303423487, %rax # imm = 0x7FFFFFFFFFFFFFF
	andq	%rdi, %rax
	movq	%rax, i59_s(%rip)
	ret
.Ltmp58:
	.size	i59_ls, .Ltmp58-i59_ls

	.globl	i60_ls
	.align	16, 0x90
	.type	i60_ls,@function
i60_ls:                                 # @i60_ls
# BB#0:
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	andq	%rdi, %rax
	movq	%rax, i60_s(%rip)
	ret
.Ltmp59:
	.size	i60_ls, .Ltmp59-i60_ls

	.globl	i61_ls
	.align	16, 0x90
	.type	i61_ls,@function
i61_ls:                                 # @i61_ls
# BB#0:
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	andq	%rdi, %rax
	movq	%rax, i61_s(%rip)
	ret
.Ltmp60:
	.size	i61_ls, .Ltmp60-i61_ls

	.globl	i62_ls
	.align	16, 0x90
	.type	i62_ls,@function
i62_ls:                                 # @i62_ls
# BB#0:
	movabsq	$4611686018427387903, %rax # imm = 0x3FFFFFFFFFFFFFFF
	andq	%rdi, %rax
	movq	%rax, i62_s(%rip)
	ret
.Ltmp61:
	.size	i62_ls, .Ltmp61-i62_ls

	.globl	i63_ls
	.align	16, 0x90
	.type	i63_ls,@function
i63_ls:                                 # @i63_ls
# BB#0:
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rdi, %rax
	movq	%rax, i63_s(%rip)
	ret
.Ltmp62:
	.size	i63_ls, .Ltmp62-i63_ls

	.globl	i64_ls
	.align	16, 0x90
	.type	i64_ls,@function
i64_ls:                                 # @i64_ls
# BB#0:
	movq	%rdi, i64_s(%rip)
	ret
.Ltmp63:
	.size	i64_ls, .Ltmp63-i64_ls

	.globl	i65_ls
	.align	16, 0x90
	.type	i65_ls,@function
i65_ls:                                 # @i65_ls
# BB#0:
	movq	%rdi, i65_s(%rip)
	andl	$1, %esi
	movb	%sil, i65_s+8(%rip)
	ret
.Ltmp64:
	.size	i65_ls, .Ltmp64-i65_ls

	.globl	i66_ls
	.align	16, 0x90
	.type	i66_ls,@function
i66_ls:                                 # @i66_ls
# BB#0:
	movq	%rdi, i66_s(%rip)
	andl	$3, %esi
	movb	%sil, i66_s+8(%rip)
	ret
.Ltmp65:
	.size	i66_ls, .Ltmp65-i66_ls

	.globl	i67_ls
	.align	16, 0x90
	.type	i67_ls,@function
i67_ls:                                 # @i67_ls
# BB#0:
	movq	%rdi, i67_s(%rip)
	andl	$7, %esi
	movb	%sil, i67_s+8(%rip)
	ret
.Ltmp66:
	.size	i67_ls, .Ltmp66-i67_ls

	.globl	i68_ls
	.align	16, 0x90
	.type	i68_ls,@function
i68_ls:                                 # @i68_ls
# BB#0:
	movq	%rdi, i68_s(%rip)
	andl	$15, %esi
	movb	%sil, i68_s+8(%rip)
	ret
.Ltmp67:
	.size	i68_ls, .Ltmp67-i68_ls

	.globl	i69_ls
	.align	16, 0x90
	.type	i69_ls,@function
i69_ls:                                 # @i69_ls
# BB#0:
	movq	%rdi, i69_s(%rip)
	andl	$31, %esi
	movb	%sil, i69_s+8(%rip)
	ret
.Ltmp68:
	.size	i69_ls, .Ltmp68-i69_ls

	.globl	i70_ls
	.align	16, 0x90
	.type	i70_ls,@function
i70_ls:                                 # @i70_ls
# BB#0:
	movq	%rdi, i70_s(%rip)
	andl	$63, %esi
	movb	%sil, i70_s+8(%rip)
	ret
.Ltmp69:
	.size	i70_ls, .Ltmp69-i70_ls

	.globl	i71_ls
	.align	16, 0x90
	.type	i71_ls,@function
i71_ls:                                 # @i71_ls
# BB#0:
	movq	%rdi, i71_s(%rip)
	andl	$127, %esi
	movb	%sil, i71_s+8(%rip)
	ret
.Ltmp70:
	.size	i71_ls, .Ltmp70-i71_ls

	.globl	i72_ls
	.align	16, 0x90
	.type	i72_ls,@function
i72_ls:                                 # @i72_ls
# BB#0:
	movq	%rdi, i72_s(%rip)
	movb	%sil, i72_s+8(%rip)
	ret
.Ltmp71:
	.size	i72_ls, .Ltmp71-i72_ls

	.globl	i73_ls
	.align	16, 0x90
	.type	i73_ls,@function
i73_ls:                                 # @i73_ls
# BB#0:
	movq	%rdi, i73_s(%rip)
	andl	$511, %esi              # imm = 0x1FF
	movw	%si, i73_s+8(%rip)
	ret
.Ltmp72:
	.size	i73_ls, .Ltmp72-i73_ls

	.globl	i74_ls
	.align	16, 0x90
	.type	i74_ls,@function
i74_ls:                                 # @i74_ls
# BB#0:
	movq	%rdi, i74_s(%rip)
	andl	$1023, %esi             # imm = 0x3FF
	movw	%si, i74_s+8(%rip)
	ret
.Ltmp73:
	.size	i74_ls, .Ltmp73-i74_ls

	.globl	i75_ls
	.align	16, 0x90
	.type	i75_ls,@function
i75_ls:                                 # @i75_ls
# BB#0:
	movq	%rdi, i75_s(%rip)
	andl	$2047, %esi             # imm = 0x7FF
	movw	%si, i75_s+8(%rip)
	ret
.Ltmp74:
	.size	i75_ls, .Ltmp74-i75_ls

	.globl	i76_ls
	.align	16, 0x90
	.type	i76_ls,@function
i76_ls:                                 # @i76_ls
# BB#0:
	movq	%rdi, i76_s(%rip)
	andl	$4095, %esi             # imm = 0xFFF
	movw	%si, i76_s+8(%rip)
	ret
.Ltmp75:
	.size	i76_ls, .Ltmp75-i76_ls

	.globl	i77_ls
	.align	16, 0x90
	.type	i77_ls,@function
i77_ls:                                 # @i77_ls
# BB#0:
	movq	%rdi, i77_s(%rip)
	andl	$8191, %esi             # imm = 0x1FFF
	movw	%si, i77_s+8(%rip)
	ret
.Ltmp76:
	.size	i77_ls, .Ltmp76-i77_ls

	.globl	i78_ls
	.align	16, 0x90
	.type	i78_ls,@function
i78_ls:                                 # @i78_ls
# BB#0:
	movq	%rdi, i78_s(%rip)
	andl	$16383, %esi            # imm = 0x3FFF
	movw	%si, i78_s+8(%rip)
	ret
.Ltmp77:
	.size	i78_ls, .Ltmp77-i78_ls

	.globl	i79_ls
	.align	16, 0x90
	.type	i79_ls,@function
i79_ls:                                 # @i79_ls
# BB#0:
	movq	%rdi, i79_s(%rip)
	andl	$32767, %esi            # imm = 0x7FFF
	movw	%si, i79_s+8(%rip)
	ret
.Ltmp78:
	.size	i79_ls, .Ltmp78-i79_ls

	.globl	i80_ls
	.align	16, 0x90
	.type	i80_ls,@function
i80_ls:                                 # @i80_ls
# BB#0:
	movq	%rdi, i80_s(%rip)
	movw	%si, i80_s+8(%rip)
	ret
.Ltmp79:
	.size	i80_ls, .Ltmp79-i80_ls

	.globl	i81_ls
	.align	16, 0x90
	.type	i81_ls,@function
i81_ls:                                 # @i81_ls
# BB#0:
	movq	%rdi, i81_s(%rip)
	andq	$131071, %rsi           # imm = 0x1FFFF
	movw	%si, i81_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i81_s+10(%rip)
	ret
.Ltmp80:
	.size	i81_ls, .Ltmp80-i81_ls

	.globl	i82_ls
	.align	16, 0x90
	.type	i82_ls,@function
i82_ls:                                 # @i82_ls
# BB#0:
	movq	%rdi, i82_s(%rip)
	andq	$262143, %rsi           # imm = 0x3FFFF
	movw	%si, i82_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i82_s+10(%rip)
	ret
.Ltmp81:
	.size	i82_ls, .Ltmp81-i82_ls

	.globl	i83_ls
	.align	16, 0x90
	.type	i83_ls,@function
i83_ls:                                 # @i83_ls
# BB#0:
	movq	%rdi, i83_s(%rip)
	andq	$524287, %rsi           # imm = 0x7FFFF
	movw	%si, i83_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i83_s+10(%rip)
	ret
.Ltmp82:
	.size	i83_ls, .Ltmp82-i83_ls

	.globl	i84_ls
	.align	16, 0x90
	.type	i84_ls,@function
i84_ls:                                 # @i84_ls
# BB#0:
	movq	%rdi, i84_s(%rip)
	andq	$1048575, %rsi          # imm = 0xFFFFF
	movw	%si, i84_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i84_s+10(%rip)
	ret
.Ltmp83:
	.size	i84_ls, .Ltmp83-i84_ls

	.globl	i85_ls
	.align	16, 0x90
	.type	i85_ls,@function
i85_ls:                                 # @i85_ls
# BB#0:
	movq	%rdi, i85_s(%rip)
	andq	$2097151, %rsi          # imm = 0x1FFFFF
	movw	%si, i85_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i85_s+10(%rip)
	ret
.Ltmp84:
	.size	i85_ls, .Ltmp84-i85_ls

	.globl	i86_ls
	.align	16, 0x90
	.type	i86_ls,@function
i86_ls:                                 # @i86_ls
# BB#0:
	movq	%rdi, i86_s(%rip)
	andq	$4194303, %rsi          # imm = 0x3FFFFF
	movw	%si, i86_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i86_s+10(%rip)
	ret
.Ltmp85:
	.size	i86_ls, .Ltmp85-i86_ls

	.globl	i87_ls
	.align	16, 0x90
	.type	i87_ls,@function
i87_ls:                                 # @i87_ls
# BB#0:
	movq	%rdi, i87_s(%rip)
	andq	$8388607, %rsi          # imm = 0x7FFFFF
	movw	%si, i87_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i87_s+10(%rip)
	ret
.Ltmp86:
	.size	i87_ls, .Ltmp86-i87_ls

	.globl	i88_ls
	.align	16, 0x90
	.type	i88_ls,@function
i88_ls:                                 # @i88_ls
# BB#0:
	movq	%rdi, i88_s(%rip)
	movw	%si, i88_s+8(%rip)
	shrq	$16, %rsi
	movb	%sil, i88_s+10(%rip)
	ret
.Ltmp87:
	.size	i88_ls, .Ltmp87-i88_ls

	.globl	i89_ls
	.align	16, 0x90
	.type	i89_ls,@function
i89_ls:                                 # @i89_ls
# BB#0:
	movq	%rdi, i89_s(%rip)
	andl	$33554431, %esi         # imm = 0x1FFFFFF
	movl	%esi, i89_s+8(%rip)
	ret
.Ltmp88:
	.size	i89_ls, .Ltmp88-i89_ls

	.globl	i90_ls
	.align	16, 0x90
	.type	i90_ls,@function
i90_ls:                                 # @i90_ls
# BB#0:
	movq	%rdi, i90_s(%rip)
	andl	$67108863, %esi         # imm = 0x3FFFFFF
	movl	%esi, i90_s+8(%rip)
	ret
.Ltmp89:
	.size	i90_ls, .Ltmp89-i90_ls

	.globl	i91_ls
	.align	16, 0x90
	.type	i91_ls,@function
i91_ls:                                 # @i91_ls
# BB#0:
	movq	%rdi, i91_s(%rip)
	andl	$134217727, %esi        # imm = 0x7FFFFFF
	movl	%esi, i91_s+8(%rip)
	ret
.Ltmp90:
	.size	i91_ls, .Ltmp90-i91_ls

	.globl	i92_ls
	.align	16, 0x90
	.type	i92_ls,@function
i92_ls:                                 # @i92_ls
# BB#0:
	movq	%rdi, i92_s(%rip)
	andl	$268435455, %esi        # imm = 0xFFFFFFF
	movl	%esi, i92_s+8(%rip)
	ret
.Ltmp91:
	.size	i92_ls, .Ltmp91-i92_ls

	.globl	i93_ls
	.align	16, 0x90
	.type	i93_ls,@function
i93_ls:                                 # @i93_ls
# BB#0:
	movq	%rdi, i93_s(%rip)
	andl	$536870911, %esi        # imm = 0x1FFFFFFF
	movl	%esi, i93_s+8(%rip)
	ret
.Ltmp92:
	.size	i93_ls, .Ltmp92-i93_ls

	.globl	i94_ls
	.align	16, 0x90
	.type	i94_ls,@function
i94_ls:                                 # @i94_ls
# BB#0:
	movq	%rdi, i94_s(%rip)
	andl	$1073741823, %esi       # imm = 0x3FFFFFFF
	movl	%esi, i94_s+8(%rip)
	ret
.Ltmp93:
	.size	i94_ls, .Ltmp93-i94_ls

	.globl	i95_ls
	.align	16, 0x90
	.type	i95_ls,@function
i95_ls:                                 # @i95_ls
# BB#0:
	movq	%rdi, i95_s(%rip)
	andl	$2147483647, %esi       # imm = 0x7FFFFFFF
	movl	%esi, i95_s+8(%rip)
	ret
.Ltmp94:
	.size	i95_ls, .Ltmp94-i95_ls

	.globl	i96_ls
	.align	16, 0x90
	.type	i96_ls,@function
i96_ls:                                 # @i96_ls
# BB#0:
	movq	%rdi, i96_s(%rip)
	movl	%esi, i96_s+8(%rip)
	ret
.Ltmp95:
	.size	i96_ls, .Ltmp95-i96_ls

	.globl	i97_ls
	.align	16, 0x90
	.type	i97_ls,@function
i97_ls:                                 # @i97_ls
# BB#0:
	movq	%rdi, i97_s(%rip)
	movabsq	$8589934591, %rax       # imm = 0x1FFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i97_s+8(%rip)
	shrq	$32, %rax
	movb	%al, i97_s+12(%rip)
	ret
.Ltmp96:
	.size	i97_ls, .Ltmp96-i97_ls

	.globl	i98_ls
	.align	16, 0x90
	.type	i98_ls,@function
i98_ls:                                 # @i98_ls
# BB#0:
	movq	%rdi, i98_s(%rip)
	movabsq	$17179869183, %rax      # imm = 0x3FFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i98_s+8(%rip)
	shrq	$32, %rax
	movb	%al, i98_s+12(%rip)
	ret
.Ltmp97:
	.size	i98_ls, .Ltmp97-i98_ls

	.globl	i99_ls
	.align	16, 0x90
	.type	i99_ls,@function
i99_ls:                                 # @i99_ls
# BB#0:
	movq	%rdi, i99_s(%rip)
	movabsq	$34359738367, %rax      # imm = 0x7FFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i99_s+8(%rip)
	shrq	$32, %rax
	movb	%al, i99_s+12(%rip)
	ret
.Ltmp98:
	.size	i99_ls, .Ltmp98-i99_ls

	.globl	i100_ls
	.align	16, 0x90
	.type	i100_ls,@function
i100_ls:                                # @i100_ls
# BB#0:
	movq	%rdi, i100_s(%rip)
	movabsq	$68719476735, %rax      # imm = 0xFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i100_s+8(%rip)
	shrq	$32, %rax
	movb	%al, i100_s+12(%rip)
	ret
.Ltmp99:
	.size	i100_ls, .Ltmp99-i100_ls

	.globl	i101_ls
	.align	16, 0x90
	.type	i101_ls,@function
i101_ls:                                # @i101_ls
# BB#0:
	movq	%rdi, i101_s(%rip)
	movabsq	$137438953471, %rax     # imm = 0x1FFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i101_s+8(%rip)
	shrq	$32, %rax
	movb	%al, i101_s+12(%rip)
	ret
.Ltmp100:
	.size	i101_ls, .Ltmp100-i101_ls

	.globl	i102_ls
	.align	16, 0x90
	.type	i102_ls,@function
i102_ls:                                # @i102_ls
# BB#0:
	movq	%rdi, i102_s(%rip)
	movabsq	$274877906943, %rax     # imm = 0x3FFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i102_s+8(%rip)
	shrq	$32, %rax
	movb	%al, i102_s+12(%rip)
	ret
.Ltmp101:
	.size	i102_ls, .Ltmp101-i102_ls

	.globl	i103_ls
	.align	16, 0x90
	.type	i103_ls,@function
i103_ls:                                # @i103_ls
# BB#0:
	movq	%rdi, i103_s(%rip)
	movabsq	$549755813887, %rax     # imm = 0x7FFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i103_s+8(%rip)
	shrq	$32, %rax
	movb	%al, i103_s+12(%rip)
	ret
.Ltmp102:
	.size	i103_ls, .Ltmp102-i103_ls

	.globl	i104_ls
	.align	16, 0x90
	.type	i104_ls,@function
i104_ls:                                # @i104_ls
# BB#0:
	movq	%rdi, i104_s(%rip)
	movl	%esi, i104_s+8(%rip)
	shrq	$32, %rsi
	movb	%sil, i104_s+12(%rip)
	ret
.Ltmp103:
	.size	i104_ls, .Ltmp103-i104_ls

	.globl	i105_ls
	.align	16, 0x90
	.type	i105_ls,@function
i105_ls:                                # @i105_ls
# BB#0:
	movq	%rdi, i105_s(%rip)
	movabsq	$2199023255551, %rax    # imm = 0x1FFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i105_s+8(%rip)
	shrq	$32, %rax
	movw	%ax, i105_s+12(%rip)
	ret
.Ltmp104:
	.size	i105_ls, .Ltmp104-i105_ls

	.globl	i106_ls
	.align	16, 0x90
	.type	i106_ls,@function
i106_ls:                                # @i106_ls
# BB#0:
	movq	%rdi, i106_s(%rip)
	movabsq	$4398046511103, %rax    # imm = 0x3FFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i106_s+8(%rip)
	shrq	$32, %rax
	movw	%ax, i106_s+12(%rip)
	ret
.Ltmp105:
	.size	i106_ls, .Ltmp105-i106_ls

	.globl	i107_ls
	.align	16, 0x90
	.type	i107_ls,@function
i107_ls:                                # @i107_ls
# BB#0:
	movq	%rdi, i107_s(%rip)
	movabsq	$8796093022207, %rax    # imm = 0x7FFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i107_s+8(%rip)
	shrq	$32, %rax
	movw	%ax, i107_s+12(%rip)
	ret
.Ltmp106:
	.size	i107_ls, .Ltmp106-i107_ls

	.globl	i108_ls
	.align	16, 0x90
	.type	i108_ls,@function
i108_ls:                                # @i108_ls
# BB#0:
	movq	%rdi, i108_s(%rip)
	movabsq	$17592186044415, %rax   # imm = 0xFFFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i108_s+8(%rip)
	shrq	$32, %rax
	movw	%ax, i108_s+12(%rip)
	ret
.Ltmp107:
	.size	i108_ls, .Ltmp107-i108_ls

	.globl	i109_ls
	.align	16, 0x90
	.type	i109_ls,@function
i109_ls:                                # @i109_ls
# BB#0:
	movq	%rdi, i109_s(%rip)
	movabsq	$35184372088831, %rax   # imm = 0x1FFFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i109_s+8(%rip)
	shrq	$32, %rax
	movw	%ax, i109_s+12(%rip)
	ret
.Ltmp108:
	.size	i109_ls, .Ltmp108-i109_ls

	.globl	i110_ls
	.align	16, 0x90
	.type	i110_ls,@function
i110_ls:                                # @i110_ls
# BB#0:
	movq	%rdi, i110_s(%rip)
	movabsq	$70368744177663, %rax   # imm = 0x3FFFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i110_s+8(%rip)
	shrq	$32, %rax
	movw	%ax, i110_s+12(%rip)
	ret
.Ltmp109:
	.size	i110_ls, .Ltmp109-i110_ls

	.globl	i111_ls
	.align	16, 0x90
	.type	i111_ls,@function
i111_ls:                                # @i111_ls
# BB#0:
	movq	%rdi, i111_s(%rip)
	movabsq	$140737488355327, %rax  # imm = 0x7FFFFFFFFFFF
	andq	%rsi, %rax
	movl	%eax, i111_s+8(%rip)
	shrq	$32, %rax
	movw	%ax, i111_s+12(%rip)
	ret
.Ltmp110:
	.size	i111_ls, .Ltmp110-i111_ls

	.globl	i112_ls
	.align	16, 0x90
	.type	i112_ls,@function
i112_ls:                                # @i112_ls
# BB#0:
	movq	%rdi, i112_s(%rip)
	movl	%esi, i112_s+8(%rip)
	shrq	$32, %rsi
	movw	%si, i112_s+12(%rip)
	ret
.Ltmp111:
	.size	i112_ls, .Ltmp111-i112_ls

	.globl	i113_ls
	.align	16, 0x90
	.type	i113_ls,@function
i113_ls:                                # @i113_ls
# BB#0:
	movabsq	$562949953421311, %rax  # imm = 0x1FFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rdi, i113_s(%rip)
	movl	%eax, i113_s+8(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i113_s+14(%rip)
	shrq	$32, %rax
	movw	%ax, i113_s+12(%rip)
	ret
.Ltmp112:
	.size	i113_ls, .Ltmp112-i113_ls

	.globl	i114_ls
	.align	16, 0x90
	.type	i114_ls,@function
i114_ls:                                # @i114_ls
# BB#0:
	movabsq	$1125899906842623, %rax # imm = 0x3FFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rdi, i114_s(%rip)
	movl	%eax, i114_s+8(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i114_s+14(%rip)
	shrq	$32, %rax
	movw	%ax, i114_s+12(%rip)
	ret
.Ltmp113:
	.size	i114_ls, .Ltmp113-i114_ls

	.globl	i115_ls
	.align	16, 0x90
	.type	i115_ls,@function
i115_ls:                                # @i115_ls
# BB#0:
	movabsq	$2251799813685247, %rax # imm = 0x7FFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rdi, i115_s(%rip)
	movl	%eax, i115_s+8(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i115_s+14(%rip)
	shrq	$32, %rax
	movw	%ax, i115_s+12(%rip)
	ret
.Ltmp114:
	.size	i115_ls, .Ltmp114-i115_ls

	.globl	i116_ls
	.align	16, 0x90
	.type	i116_ls,@function
i116_ls:                                # @i116_ls
# BB#0:
	movabsq	$4503599627370495, %rax # imm = 0xFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rdi, i116_s(%rip)
	movl	%eax, i116_s+8(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i116_s+14(%rip)
	shrq	$32, %rax
	movw	%ax, i116_s+12(%rip)
	ret
.Ltmp115:
	.size	i116_ls, .Ltmp115-i116_ls

	.globl	i117_ls
	.align	16, 0x90
	.type	i117_ls,@function
i117_ls:                                # @i117_ls
# BB#0:
	movabsq	$9007199254740991, %rax # imm = 0x1FFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rdi, i117_s(%rip)
	movl	%eax, i117_s+8(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i117_s+14(%rip)
	shrq	$32, %rax
	movw	%ax, i117_s+12(%rip)
	ret
.Ltmp116:
	.size	i117_ls, .Ltmp116-i117_ls

	.globl	i118_ls
	.align	16, 0x90
	.type	i118_ls,@function
i118_ls:                                # @i118_ls
# BB#0:
	movabsq	$18014398509481983, %rax # imm = 0x3FFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rdi, i118_s(%rip)
	movl	%eax, i118_s+8(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i118_s+14(%rip)
	shrq	$32, %rax
	movw	%ax, i118_s+12(%rip)
	ret
.Ltmp117:
	.size	i118_ls, .Ltmp117-i118_ls

	.globl	i119_ls
	.align	16, 0x90
	.type	i119_ls,@function
i119_ls:                                # @i119_ls
# BB#0:
	movabsq	$36028797018963967, %rax # imm = 0x7FFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rdi, i119_s(%rip)
	movl	%eax, i119_s+8(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i119_s+14(%rip)
	shrq	$32, %rax
	movw	%ax, i119_s+12(%rip)
	ret
.Ltmp118:
	.size	i119_ls, .Ltmp118-i119_ls

	.globl	i120_ls
	.align	16, 0x90
	.type	i120_ls,@function
i120_ls:                                # @i120_ls
# BB#0:
	movq	%rdi, i120_s(%rip)
	movl	%esi, i120_s+8(%rip)
	movq	%rsi, %rax
	shrq	$48, %rax
	movb	%al, i120_s+14(%rip)
	shrq	$32, %rsi
	movw	%si, i120_s+12(%rip)
	ret
.Ltmp119:
	.size	i120_ls, .Ltmp119-i120_ls

	.globl	i121_ls
	.align	16, 0x90
	.type	i121_ls,@function
i121_ls:                                # @i121_ls
# BB#0:
	movq	%rdi, i121_s(%rip)
	movabsq	$144115188075855871, %rax # imm = 0x1FFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rax, i121_s+8(%rip)
	ret
.Ltmp120:
	.size	i121_ls, .Ltmp120-i121_ls

	.globl	i122_ls
	.align	16, 0x90
	.type	i122_ls,@function
i122_ls:                                # @i122_ls
# BB#0:
	movq	%rdi, i122_s(%rip)
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rax, i122_s+8(%rip)
	ret
.Ltmp121:
	.size	i122_ls, .Ltmp121-i122_ls

	.globl	i123_ls
	.align	16, 0x90
	.type	i123_ls,@function
i123_ls:                                # @i123_ls
# BB#0:
	movq	%rdi, i123_s(%rip)
	movabsq	$576460752303423487, %rax # imm = 0x7FFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rax, i123_s+8(%rip)
	ret
.Ltmp122:
	.size	i123_ls, .Ltmp122-i123_ls

	.globl	i124_ls
	.align	16, 0x90
	.type	i124_ls,@function
i124_ls:                                # @i124_ls
# BB#0:
	movq	%rdi, i124_s(%rip)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rax, i124_s+8(%rip)
	ret
.Ltmp123:
	.size	i124_ls, .Ltmp123-i124_ls

	.globl	i125_ls
	.align	16, 0x90
	.type	i125_ls,@function
i125_ls:                                # @i125_ls
# BB#0:
	movq	%rdi, i125_s(%rip)
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rax, i125_s+8(%rip)
	ret
.Ltmp124:
	.size	i125_ls, .Ltmp124-i125_ls

	.globl	i126_ls
	.align	16, 0x90
	.type	i126_ls,@function
i126_ls:                                # @i126_ls
# BB#0:
	movq	%rdi, i126_s(%rip)
	movabsq	$4611686018427387903, %rax # imm = 0x3FFFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rax, i126_s+8(%rip)
	ret
.Ltmp125:
	.size	i126_ls, .Ltmp125-i126_ls

	.globl	i127_ls
	.align	16, 0x90
	.type	i127_ls,@function
i127_ls:                                # @i127_ls
# BB#0:
	movq	%rdi, i127_s(%rip)
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rsi, %rax
	movq	%rax, i127_s+8(%rip)
	ret
.Ltmp126:
	.size	i127_ls, .Ltmp126-i127_ls

	.globl	i128_ls
	.align	16, 0x90
	.type	i128_ls,@function
i128_ls:                                # @i128_ls
# BB#0:
	movq	%rsi, i128_s+8(%rip)
	movq	%rdi, i128_s(%rip)
	ret
.Ltmp127:
	.size	i128_ls, .Ltmp127-i128_ls

	.globl	i129_ls
	.align	16, 0x90
	.type	i129_ls,@function
i129_ls:                                # @i129_ls
# BB#0:
	movq	%rsi, i129_s+8(%rip)
	movq	%rdi, i129_s(%rip)
	andl	$1, %edx
	movb	%dl, i129_s+16(%rip)
	ret
.Ltmp128:
	.size	i129_ls, .Ltmp128-i129_ls

	.globl	i130_ls
	.align	16, 0x90
	.type	i130_ls,@function
i130_ls:                                # @i130_ls
# BB#0:
	movq	%rsi, i130_s+8(%rip)
	movq	%rdi, i130_s(%rip)
	andl	$3, %edx
	movb	%dl, i130_s+16(%rip)
	ret
.Ltmp129:
	.size	i130_ls, .Ltmp129-i130_ls

	.globl	i131_ls
	.align	16, 0x90
	.type	i131_ls,@function
i131_ls:                                # @i131_ls
# BB#0:
	movq	%rsi, i131_s+8(%rip)
	movq	%rdi, i131_s(%rip)
	andl	$7, %edx
	movb	%dl, i131_s+16(%rip)
	ret
.Ltmp130:
	.size	i131_ls, .Ltmp130-i131_ls

	.globl	i132_ls
	.align	16, 0x90
	.type	i132_ls,@function
i132_ls:                                # @i132_ls
# BB#0:
	movq	%rsi, i132_s+8(%rip)
	movq	%rdi, i132_s(%rip)
	andl	$15, %edx
	movb	%dl, i132_s+16(%rip)
	ret
.Ltmp131:
	.size	i132_ls, .Ltmp131-i132_ls

	.globl	i133_ls
	.align	16, 0x90
	.type	i133_ls,@function
i133_ls:                                # @i133_ls
# BB#0:
	movq	%rsi, i133_s+8(%rip)
	movq	%rdi, i133_s(%rip)
	andl	$31, %edx
	movb	%dl, i133_s+16(%rip)
	ret
.Ltmp132:
	.size	i133_ls, .Ltmp132-i133_ls

	.globl	i134_ls
	.align	16, 0x90
	.type	i134_ls,@function
i134_ls:                                # @i134_ls
# BB#0:
	movq	%rsi, i134_s+8(%rip)
	movq	%rdi, i134_s(%rip)
	andl	$63, %edx
	movb	%dl, i134_s+16(%rip)
	ret
.Ltmp133:
	.size	i134_ls, .Ltmp133-i134_ls

	.globl	i135_ls
	.align	16, 0x90
	.type	i135_ls,@function
i135_ls:                                # @i135_ls
# BB#0:
	movq	%rsi, i135_s+8(%rip)
	movq	%rdi, i135_s(%rip)
	andl	$127, %edx
	movb	%dl, i135_s+16(%rip)
	ret
.Ltmp134:
	.size	i135_ls, .Ltmp134-i135_ls

	.globl	i136_ls
	.align	16, 0x90
	.type	i136_ls,@function
i136_ls:                                # @i136_ls
# BB#0:
	movq	%rsi, i136_s+8(%rip)
	movq	%rdi, i136_s(%rip)
	movb	%dl, i136_s+16(%rip)
	ret
.Ltmp135:
	.size	i136_ls, .Ltmp135-i136_ls

	.globl	i137_ls
	.align	16, 0x90
	.type	i137_ls,@function
i137_ls:                                # @i137_ls
# BB#0:
	movq	%rsi, i137_s+8(%rip)
	movq	%rdi, i137_s(%rip)
	andl	$511, %edx              # imm = 0x1FF
	movw	%dx, i137_s+16(%rip)
	ret
.Ltmp136:
	.size	i137_ls, .Ltmp136-i137_ls

	.globl	i138_ls
	.align	16, 0x90
	.type	i138_ls,@function
i138_ls:                                # @i138_ls
# BB#0:
	movq	%rsi, i138_s+8(%rip)
	movq	%rdi, i138_s(%rip)
	andl	$1023, %edx             # imm = 0x3FF
	movw	%dx, i138_s+16(%rip)
	ret
.Ltmp137:
	.size	i138_ls, .Ltmp137-i138_ls

	.globl	i139_ls
	.align	16, 0x90
	.type	i139_ls,@function
i139_ls:                                # @i139_ls
# BB#0:
	movq	%rsi, i139_s+8(%rip)
	movq	%rdi, i139_s(%rip)
	andl	$2047, %edx             # imm = 0x7FF
	movw	%dx, i139_s+16(%rip)
	ret
.Ltmp138:
	.size	i139_ls, .Ltmp138-i139_ls

	.globl	i140_ls
	.align	16, 0x90
	.type	i140_ls,@function
i140_ls:                                # @i140_ls
# BB#0:
	movq	%rsi, i140_s+8(%rip)
	movq	%rdi, i140_s(%rip)
	andl	$4095, %edx             # imm = 0xFFF
	movw	%dx, i140_s+16(%rip)
	ret
.Ltmp139:
	.size	i140_ls, .Ltmp139-i140_ls

	.globl	i141_ls
	.align	16, 0x90
	.type	i141_ls,@function
i141_ls:                                # @i141_ls
# BB#0:
	movq	%rsi, i141_s+8(%rip)
	movq	%rdi, i141_s(%rip)
	andl	$8191, %edx             # imm = 0x1FFF
	movw	%dx, i141_s+16(%rip)
	ret
.Ltmp140:
	.size	i141_ls, .Ltmp140-i141_ls

	.globl	i142_ls
	.align	16, 0x90
	.type	i142_ls,@function
i142_ls:                                # @i142_ls
# BB#0:
	movq	%rsi, i142_s+8(%rip)
	movq	%rdi, i142_s(%rip)
	andl	$16383, %edx            # imm = 0x3FFF
	movw	%dx, i142_s+16(%rip)
	ret
.Ltmp141:
	.size	i142_ls, .Ltmp141-i142_ls

	.globl	i143_ls
	.align	16, 0x90
	.type	i143_ls,@function
i143_ls:                                # @i143_ls
# BB#0:
	movq	%rsi, i143_s+8(%rip)
	movq	%rdi, i143_s(%rip)
	andl	$32767, %edx            # imm = 0x7FFF
	movw	%dx, i143_s+16(%rip)
	ret
.Ltmp142:
	.size	i143_ls, .Ltmp142-i143_ls

	.globl	i144_ls
	.align	16, 0x90
	.type	i144_ls,@function
i144_ls:                                # @i144_ls
# BB#0:
	movq	%rsi, i144_s+8(%rip)
	movq	%rdi, i144_s(%rip)
	movw	%dx, i144_s+16(%rip)
	ret
.Ltmp143:
	.size	i144_ls, .Ltmp143-i144_ls

	.globl	i145_ls
	.align	16, 0x90
	.type	i145_ls,@function
i145_ls:                                # @i145_ls
# BB#0:
	movq	%rsi, i145_s+8(%rip)
	movq	%rdi, i145_s(%rip)
	andq	$131071, %rdx           # imm = 0x1FFFF
	movw	%dx, i145_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i145_s+18(%rip)
	ret
.Ltmp144:
	.size	i145_ls, .Ltmp144-i145_ls

	.globl	i146_ls
	.align	16, 0x90
	.type	i146_ls,@function
i146_ls:                                # @i146_ls
# BB#0:
	movq	%rsi, i146_s+8(%rip)
	movq	%rdi, i146_s(%rip)
	andq	$262143, %rdx           # imm = 0x3FFFF
	movw	%dx, i146_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i146_s+18(%rip)
	ret
.Ltmp145:
	.size	i146_ls, .Ltmp145-i146_ls

	.globl	i147_ls
	.align	16, 0x90
	.type	i147_ls,@function
i147_ls:                                # @i147_ls
# BB#0:
	movq	%rsi, i147_s+8(%rip)
	movq	%rdi, i147_s(%rip)
	andq	$524287, %rdx           # imm = 0x7FFFF
	movw	%dx, i147_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i147_s+18(%rip)
	ret
.Ltmp146:
	.size	i147_ls, .Ltmp146-i147_ls

	.globl	i148_ls
	.align	16, 0x90
	.type	i148_ls,@function
i148_ls:                                # @i148_ls
# BB#0:
	movq	%rsi, i148_s+8(%rip)
	movq	%rdi, i148_s(%rip)
	andq	$1048575, %rdx          # imm = 0xFFFFF
	movw	%dx, i148_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i148_s+18(%rip)
	ret
.Ltmp147:
	.size	i148_ls, .Ltmp147-i148_ls

	.globl	i149_ls
	.align	16, 0x90
	.type	i149_ls,@function
i149_ls:                                # @i149_ls
# BB#0:
	movq	%rsi, i149_s+8(%rip)
	movq	%rdi, i149_s(%rip)
	andq	$2097151, %rdx          # imm = 0x1FFFFF
	movw	%dx, i149_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i149_s+18(%rip)
	ret
.Ltmp148:
	.size	i149_ls, .Ltmp148-i149_ls

	.globl	i150_ls
	.align	16, 0x90
	.type	i150_ls,@function
i150_ls:                                # @i150_ls
# BB#0:
	movq	%rsi, i150_s+8(%rip)
	movq	%rdi, i150_s(%rip)
	andq	$4194303, %rdx          # imm = 0x3FFFFF
	movw	%dx, i150_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i150_s+18(%rip)
	ret
.Ltmp149:
	.size	i150_ls, .Ltmp149-i150_ls

	.globl	i151_ls
	.align	16, 0x90
	.type	i151_ls,@function
i151_ls:                                # @i151_ls
# BB#0:
	movq	%rsi, i151_s+8(%rip)
	movq	%rdi, i151_s(%rip)
	andq	$8388607, %rdx          # imm = 0x7FFFFF
	movw	%dx, i151_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i151_s+18(%rip)
	ret
.Ltmp150:
	.size	i151_ls, .Ltmp150-i151_ls

	.globl	i152_ls
	.align	16, 0x90
	.type	i152_ls,@function
i152_ls:                                # @i152_ls
# BB#0:
	movq	%rsi, i152_s+8(%rip)
	movq	%rdi, i152_s(%rip)
	movw	%dx, i152_s+16(%rip)
	shrq	$16, %rdx
	movb	%dl, i152_s+18(%rip)
	ret
.Ltmp151:
	.size	i152_ls, .Ltmp151-i152_ls

	.globl	i153_ls
	.align	16, 0x90
	.type	i153_ls,@function
i153_ls:                                # @i153_ls
# BB#0:
	movq	%rsi, i153_s+8(%rip)
	movq	%rdi, i153_s(%rip)
	andl	$33554431, %edx         # imm = 0x1FFFFFF
	movl	%edx, i153_s+16(%rip)
	ret
.Ltmp152:
	.size	i153_ls, .Ltmp152-i153_ls

	.globl	i154_ls
	.align	16, 0x90
	.type	i154_ls,@function
i154_ls:                                # @i154_ls
# BB#0:
	movq	%rsi, i154_s+8(%rip)
	movq	%rdi, i154_s(%rip)
	andl	$67108863, %edx         # imm = 0x3FFFFFF
	movl	%edx, i154_s+16(%rip)
	ret
.Ltmp153:
	.size	i154_ls, .Ltmp153-i154_ls

	.globl	i155_ls
	.align	16, 0x90
	.type	i155_ls,@function
i155_ls:                                # @i155_ls
# BB#0:
	movq	%rsi, i155_s+8(%rip)
	movq	%rdi, i155_s(%rip)
	andl	$134217727, %edx        # imm = 0x7FFFFFF
	movl	%edx, i155_s+16(%rip)
	ret
.Ltmp154:
	.size	i155_ls, .Ltmp154-i155_ls

	.globl	i156_ls
	.align	16, 0x90
	.type	i156_ls,@function
i156_ls:                                # @i156_ls
# BB#0:
	movq	%rsi, i156_s+8(%rip)
	movq	%rdi, i156_s(%rip)
	andl	$268435455, %edx        # imm = 0xFFFFFFF
	movl	%edx, i156_s+16(%rip)
	ret
.Ltmp155:
	.size	i156_ls, .Ltmp155-i156_ls

	.globl	i157_ls
	.align	16, 0x90
	.type	i157_ls,@function
i157_ls:                                # @i157_ls
# BB#0:
	movq	%rsi, i157_s+8(%rip)
	movq	%rdi, i157_s(%rip)
	andl	$536870911, %edx        # imm = 0x1FFFFFFF
	movl	%edx, i157_s+16(%rip)
	ret
.Ltmp156:
	.size	i157_ls, .Ltmp156-i157_ls

	.globl	i158_ls
	.align	16, 0x90
	.type	i158_ls,@function
i158_ls:                                # @i158_ls
# BB#0:
	movq	%rsi, i158_s+8(%rip)
	movq	%rdi, i158_s(%rip)
	andl	$1073741823, %edx       # imm = 0x3FFFFFFF
	movl	%edx, i158_s+16(%rip)
	ret
.Ltmp157:
	.size	i158_ls, .Ltmp157-i158_ls

	.globl	i159_ls
	.align	16, 0x90
	.type	i159_ls,@function
i159_ls:                                # @i159_ls
# BB#0:
	movq	%rsi, i159_s+8(%rip)
	movq	%rdi, i159_s(%rip)
	andl	$2147483647, %edx       # imm = 0x7FFFFFFF
	movl	%edx, i159_s+16(%rip)
	ret
.Ltmp158:
	.size	i159_ls, .Ltmp158-i159_ls

	.globl	i160_ls
	.align	16, 0x90
	.type	i160_ls,@function
i160_ls:                                # @i160_ls
# BB#0:
	movq	%rsi, i160_s+8(%rip)
	movq	%rdi, i160_s(%rip)
	movl	%edx, i160_s+16(%rip)
	ret
.Ltmp159:
	.size	i160_ls, .Ltmp159-i160_ls

	.globl	i161_ls
	.align	16, 0x90
	.type	i161_ls,@function
i161_ls:                                # @i161_ls
# BB#0:
	movq	%rsi, i161_s+8(%rip)
	movq	%rdi, i161_s(%rip)
	movabsq	$8589934591, %rax       # imm = 0x1FFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i161_s+16(%rip)
	shrq	$32, %rax
	movb	%al, i161_s+20(%rip)
	ret
.Ltmp160:
	.size	i161_ls, .Ltmp160-i161_ls

	.globl	i162_ls
	.align	16, 0x90
	.type	i162_ls,@function
i162_ls:                                # @i162_ls
# BB#0:
	movq	%rsi, i162_s+8(%rip)
	movq	%rdi, i162_s(%rip)
	movabsq	$17179869183, %rax      # imm = 0x3FFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i162_s+16(%rip)
	shrq	$32, %rax
	movb	%al, i162_s+20(%rip)
	ret
.Ltmp161:
	.size	i162_ls, .Ltmp161-i162_ls

	.globl	i163_ls
	.align	16, 0x90
	.type	i163_ls,@function
i163_ls:                                # @i163_ls
# BB#0:
	movq	%rsi, i163_s+8(%rip)
	movq	%rdi, i163_s(%rip)
	movabsq	$34359738367, %rax      # imm = 0x7FFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i163_s+16(%rip)
	shrq	$32, %rax
	movb	%al, i163_s+20(%rip)
	ret
.Ltmp162:
	.size	i163_ls, .Ltmp162-i163_ls

	.globl	i164_ls
	.align	16, 0x90
	.type	i164_ls,@function
i164_ls:                                # @i164_ls
# BB#0:
	movq	%rsi, i164_s+8(%rip)
	movq	%rdi, i164_s(%rip)
	movabsq	$68719476735, %rax      # imm = 0xFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i164_s+16(%rip)
	shrq	$32, %rax
	movb	%al, i164_s+20(%rip)
	ret
.Ltmp163:
	.size	i164_ls, .Ltmp163-i164_ls

	.globl	i165_ls
	.align	16, 0x90
	.type	i165_ls,@function
i165_ls:                                # @i165_ls
# BB#0:
	movq	%rsi, i165_s+8(%rip)
	movq	%rdi, i165_s(%rip)
	movabsq	$137438953471, %rax     # imm = 0x1FFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i165_s+16(%rip)
	shrq	$32, %rax
	movb	%al, i165_s+20(%rip)
	ret
.Ltmp164:
	.size	i165_ls, .Ltmp164-i165_ls

	.globl	i166_ls
	.align	16, 0x90
	.type	i166_ls,@function
i166_ls:                                # @i166_ls
# BB#0:
	movq	%rsi, i166_s+8(%rip)
	movq	%rdi, i166_s(%rip)
	movabsq	$274877906943, %rax     # imm = 0x3FFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i166_s+16(%rip)
	shrq	$32, %rax
	movb	%al, i166_s+20(%rip)
	ret
.Ltmp165:
	.size	i166_ls, .Ltmp165-i166_ls

	.globl	i167_ls
	.align	16, 0x90
	.type	i167_ls,@function
i167_ls:                                # @i167_ls
# BB#0:
	movq	%rsi, i167_s+8(%rip)
	movq	%rdi, i167_s(%rip)
	movabsq	$549755813887, %rax     # imm = 0x7FFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i167_s+16(%rip)
	shrq	$32, %rax
	movb	%al, i167_s+20(%rip)
	ret
.Ltmp166:
	.size	i167_ls, .Ltmp166-i167_ls

	.globl	i168_ls
	.align	16, 0x90
	.type	i168_ls,@function
i168_ls:                                # @i168_ls
# BB#0:
	movq	%rsi, i168_s+8(%rip)
	movq	%rdi, i168_s(%rip)
	movl	%edx, i168_s+16(%rip)
	shrq	$32, %rdx
	movb	%dl, i168_s+20(%rip)
	ret
.Ltmp167:
	.size	i168_ls, .Ltmp167-i168_ls

	.globl	i169_ls
	.align	16, 0x90
	.type	i169_ls,@function
i169_ls:                                # @i169_ls
# BB#0:
	movq	%rsi, i169_s+8(%rip)
	movq	%rdi, i169_s(%rip)
	movabsq	$2199023255551, %rax    # imm = 0x1FFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i169_s+16(%rip)
	shrq	$32, %rax
	movw	%ax, i169_s+20(%rip)
	ret
.Ltmp168:
	.size	i169_ls, .Ltmp168-i169_ls

	.globl	i170_ls
	.align	16, 0x90
	.type	i170_ls,@function
i170_ls:                                # @i170_ls
# BB#0:
	movq	%rsi, i170_s+8(%rip)
	movq	%rdi, i170_s(%rip)
	movabsq	$4398046511103, %rax    # imm = 0x3FFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i170_s+16(%rip)
	shrq	$32, %rax
	movw	%ax, i170_s+20(%rip)
	ret
.Ltmp169:
	.size	i170_ls, .Ltmp169-i170_ls

	.globl	i171_ls
	.align	16, 0x90
	.type	i171_ls,@function
i171_ls:                                # @i171_ls
# BB#0:
	movq	%rsi, i171_s+8(%rip)
	movq	%rdi, i171_s(%rip)
	movabsq	$8796093022207, %rax    # imm = 0x7FFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i171_s+16(%rip)
	shrq	$32, %rax
	movw	%ax, i171_s+20(%rip)
	ret
.Ltmp170:
	.size	i171_ls, .Ltmp170-i171_ls

	.globl	i172_ls
	.align	16, 0x90
	.type	i172_ls,@function
i172_ls:                                # @i172_ls
# BB#0:
	movq	%rsi, i172_s+8(%rip)
	movq	%rdi, i172_s(%rip)
	movabsq	$17592186044415, %rax   # imm = 0xFFFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i172_s+16(%rip)
	shrq	$32, %rax
	movw	%ax, i172_s+20(%rip)
	ret
.Ltmp171:
	.size	i172_ls, .Ltmp171-i172_ls

	.globl	i173_ls
	.align	16, 0x90
	.type	i173_ls,@function
i173_ls:                                # @i173_ls
# BB#0:
	movq	%rsi, i173_s+8(%rip)
	movq	%rdi, i173_s(%rip)
	movabsq	$35184372088831, %rax   # imm = 0x1FFFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i173_s+16(%rip)
	shrq	$32, %rax
	movw	%ax, i173_s+20(%rip)
	ret
.Ltmp172:
	.size	i173_ls, .Ltmp172-i173_ls

	.globl	i174_ls
	.align	16, 0x90
	.type	i174_ls,@function
i174_ls:                                # @i174_ls
# BB#0:
	movq	%rsi, i174_s+8(%rip)
	movq	%rdi, i174_s(%rip)
	movabsq	$70368744177663, %rax   # imm = 0x3FFFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i174_s+16(%rip)
	shrq	$32, %rax
	movw	%ax, i174_s+20(%rip)
	ret
.Ltmp173:
	.size	i174_ls, .Ltmp173-i174_ls

	.globl	i175_ls
	.align	16, 0x90
	.type	i175_ls,@function
i175_ls:                                # @i175_ls
# BB#0:
	movq	%rsi, i175_s+8(%rip)
	movq	%rdi, i175_s(%rip)
	movabsq	$140737488355327, %rax  # imm = 0x7FFFFFFFFFFF
	andq	%rdx, %rax
	movl	%eax, i175_s+16(%rip)
	shrq	$32, %rax
	movw	%ax, i175_s+20(%rip)
	ret
.Ltmp174:
	.size	i175_ls, .Ltmp174-i175_ls

	.globl	i176_ls
	.align	16, 0x90
	.type	i176_ls,@function
i176_ls:                                # @i176_ls
# BB#0:
	movq	%rsi, i176_s+8(%rip)
	movq	%rdi, i176_s(%rip)
	movl	%edx, i176_s+16(%rip)
	shrq	$32, %rdx
	movw	%dx, i176_s+20(%rip)
	ret
.Ltmp175:
	.size	i176_ls, .Ltmp175-i176_ls

	.globl	i177_ls
	.align	16, 0x90
	.type	i177_ls,@function
i177_ls:                                # @i177_ls
# BB#0:
	movabsq	$562949953421311, %rax  # imm = 0x1FFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rsi, i177_s+8(%rip)
	movq	%rdi, i177_s(%rip)
	movl	%eax, i177_s+16(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i177_s+22(%rip)
	shrq	$32, %rax
	movw	%ax, i177_s+20(%rip)
	ret
.Ltmp176:
	.size	i177_ls, .Ltmp176-i177_ls

	.globl	i178_ls
	.align	16, 0x90
	.type	i178_ls,@function
i178_ls:                                # @i178_ls
# BB#0:
	movabsq	$1125899906842623, %rax # imm = 0x3FFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rsi, i178_s+8(%rip)
	movq	%rdi, i178_s(%rip)
	movl	%eax, i178_s+16(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i178_s+22(%rip)
	shrq	$32, %rax
	movw	%ax, i178_s+20(%rip)
	ret
.Ltmp177:
	.size	i178_ls, .Ltmp177-i178_ls

	.globl	i179_ls
	.align	16, 0x90
	.type	i179_ls,@function
i179_ls:                                # @i179_ls
# BB#0:
	movabsq	$2251799813685247, %rax # imm = 0x7FFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rsi, i179_s+8(%rip)
	movq	%rdi, i179_s(%rip)
	movl	%eax, i179_s+16(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i179_s+22(%rip)
	shrq	$32, %rax
	movw	%ax, i179_s+20(%rip)
	ret
.Ltmp178:
	.size	i179_ls, .Ltmp178-i179_ls

	.globl	i180_ls
	.align	16, 0x90
	.type	i180_ls,@function
i180_ls:                                # @i180_ls
# BB#0:
	movabsq	$4503599627370495, %rax # imm = 0xFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rsi, i180_s+8(%rip)
	movq	%rdi, i180_s(%rip)
	movl	%eax, i180_s+16(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i180_s+22(%rip)
	shrq	$32, %rax
	movw	%ax, i180_s+20(%rip)
	ret
.Ltmp179:
	.size	i180_ls, .Ltmp179-i180_ls

	.globl	i181_ls
	.align	16, 0x90
	.type	i181_ls,@function
i181_ls:                                # @i181_ls
# BB#0:
	movabsq	$9007199254740991, %rax # imm = 0x1FFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rsi, i181_s+8(%rip)
	movq	%rdi, i181_s(%rip)
	movl	%eax, i181_s+16(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i181_s+22(%rip)
	shrq	$32, %rax
	movw	%ax, i181_s+20(%rip)
	ret
.Ltmp180:
	.size	i181_ls, .Ltmp180-i181_ls

	.globl	i182_ls
	.align	16, 0x90
	.type	i182_ls,@function
i182_ls:                                # @i182_ls
# BB#0:
	movabsq	$18014398509481983, %rax # imm = 0x3FFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rsi, i182_s+8(%rip)
	movq	%rdi, i182_s(%rip)
	movl	%eax, i182_s+16(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i182_s+22(%rip)
	shrq	$32, %rax
	movw	%ax, i182_s+20(%rip)
	ret
.Ltmp181:
	.size	i182_ls, .Ltmp181-i182_ls

	.globl	i183_ls
	.align	16, 0x90
	.type	i183_ls,@function
i183_ls:                                # @i183_ls
# BB#0:
	movabsq	$36028797018963967, %rax # imm = 0x7FFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rsi, i183_s+8(%rip)
	movq	%rdi, i183_s(%rip)
	movl	%eax, i183_s+16(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i183_s+22(%rip)
	shrq	$32, %rax
	movw	%ax, i183_s+20(%rip)
	ret
.Ltmp182:
	.size	i183_ls, .Ltmp182-i183_ls

	.globl	i184_ls
	.align	16, 0x90
	.type	i184_ls,@function
i184_ls:                                # @i184_ls
# BB#0:
	movq	%rsi, i184_s+8(%rip)
	movq	%rdi, i184_s(%rip)
	movl	%edx, i184_s+16(%rip)
	movq	%rdx, %rax
	shrq	$48, %rax
	movb	%al, i184_s+22(%rip)
	shrq	$32, %rdx
	movw	%dx, i184_s+20(%rip)
	ret
.Ltmp183:
	.size	i184_ls, .Ltmp183-i184_ls

	.globl	i185_ls
	.align	16, 0x90
	.type	i185_ls,@function
i185_ls:                                # @i185_ls
# BB#0:
	movq	%rsi, i185_s+8(%rip)
	movq	%rdi, i185_s(%rip)
	movabsq	$144115188075855871, %rax # imm = 0x1FFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rax, i185_s+16(%rip)
	ret
.Ltmp184:
	.size	i185_ls, .Ltmp184-i185_ls

	.globl	i186_ls
	.align	16, 0x90
	.type	i186_ls,@function
i186_ls:                                # @i186_ls
# BB#0:
	movq	%rsi, i186_s+8(%rip)
	movq	%rdi, i186_s(%rip)
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rax, i186_s+16(%rip)
	ret
.Ltmp185:
	.size	i186_ls, .Ltmp185-i186_ls

	.globl	i187_ls
	.align	16, 0x90
	.type	i187_ls,@function
i187_ls:                                # @i187_ls
# BB#0:
	movq	%rsi, i187_s+8(%rip)
	movq	%rdi, i187_s(%rip)
	movabsq	$576460752303423487, %rax # imm = 0x7FFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rax, i187_s+16(%rip)
	ret
.Ltmp186:
	.size	i187_ls, .Ltmp186-i187_ls

	.globl	i188_ls
	.align	16, 0x90
	.type	i188_ls,@function
i188_ls:                                # @i188_ls
# BB#0:
	movq	%rsi, i188_s+8(%rip)
	movq	%rdi, i188_s(%rip)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rax, i188_s+16(%rip)
	ret
.Ltmp187:
	.size	i188_ls, .Ltmp187-i188_ls

	.globl	i189_ls
	.align	16, 0x90
	.type	i189_ls,@function
i189_ls:                                # @i189_ls
# BB#0:
	movq	%rsi, i189_s+8(%rip)
	movq	%rdi, i189_s(%rip)
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rax, i189_s+16(%rip)
	ret
.Ltmp188:
	.size	i189_ls, .Ltmp188-i189_ls

	.globl	i190_ls
	.align	16, 0x90
	.type	i190_ls,@function
i190_ls:                                # @i190_ls
# BB#0:
	movq	%rsi, i190_s+8(%rip)
	movq	%rdi, i190_s(%rip)
	movabsq	$4611686018427387903, %rax # imm = 0x3FFFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rax, i190_s+16(%rip)
	ret
.Ltmp189:
	.size	i190_ls, .Ltmp189-i190_ls

	.globl	i191_ls
	.align	16, 0x90
	.type	i191_ls,@function
i191_ls:                                # @i191_ls
# BB#0:
	movq	%rsi, i191_s+8(%rip)
	movq	%rdi, i191_s(%rip)
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rdx, %rax
	movq	%rax, i191_s+16(%rip)
	ret
.Ltmp190:
	.size	i191_ls, .Ltmp190-i191_ls

	.globl	i192_ls
	.align	16, 0x90
	.type	i192_ls,@function
i192_ls:                                # @i192_ls
# BB#0:
	movq	%rsi, i192_s+8(%rip)
	movq	%rdi, i192_s(%rip)
	movq	%rdx, i192_s+16(%rip)
	ret
.Ltmp191:
	.size	i192_ls, .Ltmp191-i192_ls

	.globl	i193_ls
	.align	16, 0x90
	.type	i193_ls,@function
i193_ls:                                # @i193_ls
# BB#0:
	movq	%rdx, i193_s+16(%rip)
	movq	%rsi, i193_s+8(%rip)
	movq	%rdi, i193_s(%rip)
	andl	$1, %ecx
	movb	%cl, i193_s+24(%rip)
	ret
.Ltmp192:
	.size	i193_ls, .Ltmp192-i193_ls

	.globl	i194_ls
	.align	16, 0x90
	.type	i194_ls,@function
i194_ls:                                # @i194_ls
# BB#0:
	movq	%rdx, i194_s+16(%rip)
	movq	%rsi, i194_s+8(%rip)
	movq	%rdi, i194_s(%rip)
	andl	$3, %ecx
	movb	%cl, i194_s+24(%rip)
	ret
.Ltmp193:
	.size	i194_ls, .Ltmp193-i194_ls

	.globl	i195_ls
	.align	16, 0x90
	.type	i195_ls,@function
i195_ls:                                # @i195_ls
# BB#0:
	movq	%rdx, i195_s+16(%rip)
	movq	%rsi, i195_s+8(%rip)
	movq	%rdi, i195_s(%rip)
	andl	$7, %ecx
	movb	%cl, i195_s+24(%rip)
	ret
.Ltmp194:
	.size	i195_ls, .Ltmp194-i195_ls

	.globl	i196_ls
	.align	16, 0x90
	.type	i196_ls,@function
i196_ls:                                # @i196_ls
# BB#0:
	movq	%rdx, i196_s+16(%rip)
	movq	%rsi, i196_s+8(%rip)
	movq	%rdi, i196_s(%rip)
	andl	$15, %ecx
	movb	%cl, i196_s+24(%rip)
	ret
.Ltmp195:
	.size	i196_ls, .Ltmp195-i196_ls

	.globl	i197_ls
	.align	16, 0x90
	.type	i197_ls,@function
i197_ls:                                # @i197_ls
# BB#0:
	movq	%rdx, i197_s+16(%rip)
	movq	%rsi, i197_s+8(%rip)
	movq	%rdi, i197_s(%rip)
	andl	$31, %ecx
	movb	%cl, i197_s+24(%rip)
	ret
.Ltmp196:
	.size	i197_ls, .Ltmp196-i197_ls

	.globl	i198_ls
	.align	16, 0x90
	.type	i198_ls,@function
i198_ls:                                # @i198_ls
# BB#0:
	movq	%rdx, i198_s+16(%rip)
	movq	%rsi, i198_s+8(%rip)
	movq	%rdi, i198_s(%rip)
	andl	$63, %ecx
	movb	%cl, i198_s+24(%rip)
	ret
.Ltmp197:
	.size	i198_ls, .Ltmp197-i198_ls

	.globl	i199_ls
	.align	16, 0x90
	.type	i199_ls,@function
i199_ls:                                # @i199_ls
# BB#0:
	movq	%rdx, i199_s+16(%rip)
	movq	%rsi, i199_s+8(%rip)
	movq	%rdi, i199_s(%rip)
	andl	$127, %ecx
	movb	%cl, i199_s+24(%rip)
	ret
.Ltmp198:
	.size	i199_ls, .Ltmp198-i199_ls

	.globl	i200_ls
	.align	16, 0x90
	.type	i200_ls,@function
i200_ls:                                # @i200_ls
# BB#0:
	movq	%rdx, i200_s+16(%rip)
	movq	%rsi, i200_s+8(%rip)
	movq	%rdi, i200_s(%rip)
	movb	%cl, i200_s+24(%rip)
	ret
.Ltmp199:
	.size	i200_ls, .Ltmp199-i200_ls

	.globl	i201_ls
	.align	16, 0x90
	.type	i201_ls,@function
i201_ls:                                # @i201_ls
# BB#0:
	movq	%rdx, i201_s+16(%rip)
	movq	%rsi, i201_s+8(%rip)
	movq	%rdi, i201_s(%rip)
	andl	$511, %ecx              # imm = 0x1FF
	movw	%cx, i201_s+24(%rip)
	ret
.Ltmp200:
	.size	i201_ls, .Ltmp200-i201_ls

	.globl	i202_ls
	.align	16, 0x90
	.type	i202_ls,@function
i202_ls:                                # @i202_ls
# BB#0:
	movq	%rdx, i202_s+16(%rip)
	movq	%rsi, i202_s+8(%rip)
	movq	%rdi, i202_s(%rip)
	andl	$1023, %ecx             # imm = 0x3FF
	movw	%cx, i202_s+24(%rip)
	ret
.Ltmp201:
	.size	i202_ls, .Ltmp201-i202_ls

	.globl	i203_ls
	.align	16, 0x90
	.type	i203_ls,@function
i203_ls:                                # @i203_ls
# BB#0:
	movq	%rdx, i203_s+16(%rip)
	movq	%rsi, i203_s+8(%rip)
	movq	%rdi, i203_s(%rip)
	andl	$2047, %ecx             # imm = 0x7FF
	movw	%cx, i203_s+24(%rip)
	ret
.Ltmp202:
	.size	i203_ls, .Ltmp202-i203_ls

	.globl	i204_ls
	.align	16, 0x90
	.type	i204_ls,@function
i204_ls:                                # @i204_ls
# BB#0:
	movq	%rdx, i204_s+16(%rip)
	movq	%rsi, i204_s+8(%rip)
	movq	%rdi, i204_s(%rip)
	andl	$4095, %ecx             # imm = 0xFFF
	movw	%cx, i204_s+24(%rip)
	ret
.Ltmp203:
	.size	i204_ls, .Ltmp203-i204_ls

	.globl	i205_ls
	.align	16, 0x90
	.type	i205_ls,@function
i205_ls:                                # @i205_ls
# BB#0:
	movq	%rdx, i205_s+16(%rip)
	movq	%rsi, i205_s+8(%rip)
	movq	%rdi, i205_s(%rip)
	andl	$8191, %ecx             # imm = 0x1FFF
	movw	%cx, i205_s+24(%rip)
	ret
.Ltmp204:
	.size	i205_ls, .Ltmp204-i205_ls

	.globl	i206_ls
	.align	16, 0x90
	.type	i206_ls,@function
i206_ls:                                # @i206_ls
# BB#0:
	movq	%rdx, i206_s+16(%rip)
	movq	%rsi, i206_s+8(%rip)
	movq	%rdi, i206_s(%rip)
	andl	$16383, %ecx            # imm = 0x3FFF
	movw	%cx, i206_s+24(%rip)
	ret
.Ltmp205:
	.size	i206_ls, .Ltmp205-i206_ls

	.globl	i207_ls
	.align	16, 0x90
	.type	i207_ls,@function
i207_ls:                                # @i207_ls
# BB#0:
	movq	%rdx, i207_s+16(%rip)
	movq	%rsi, i207_s+8(%rip)
	movq	%rdi, i207_s(%rip)
	andl	$32767, %ecx            # imm = 0x7FFF
	movw	%cx, i207_s+24(%rip)
	ret
.Ltmp206:
	.size	i207_ls, .Ltmp206-i207_ls

	.globl	i208_ls
	.align	16, 0x90
	.type	i208_ls,@function
i208_ls:                                # @i208_ls
# BB#0:
	movq	%rdx, i208_s+16(%rip)
	movq	%rsi, i208_s+8(%rip)
	movq	%rdi, i208_s(%rip)
	movw	%cx, i208_s+24(%rip)
	ret
.Ltmp207:
	.size	i208_ls, .Ltmp207-i208_ls

	.globl	i209_ls
	.align	16, 0x90
	.type	i209_ls,@function
i209_ls:                                # @i209_ls
# BB#0:
	movq	%rdx, i209_s+16(%rip)
	movq	%rsi, i209_s+8(%rip)
	movq	%rdi, i209_s(%rip)
	andq	$131071, %rcx           # imm = 0x1FFFF
	movw	%cx, i209_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i209_s+26(%rip)
	ret
.Ltmp208:
	.size	i209_ls, .Ltmp208-i209_ls

	.globl	i210_ls
	.align	16, 0x90
	.type	i210_ls,@function
i210_ls:                                # @i210_ls
# BB#0:
	movq	%rdx, i210_s+16(%rip)
	movq	%rsi, i210_s+8(%rip)
	movq	%rdi, i210_s(%rip)
	andq	$262143, %rcx           # imm = 0x3FFFF
	movw	%cx, i210_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i210_s+26(%rip)
	ret
.Ltmp209:
	.size	i210_ls, .Ltmp209-i210_ls

	.globl	i211_ls
	.align	16, 0x90
	.type	i211_ls,@function
i211_ls:                                # @i211_ls
# BB#0:
	movq	%rdx, i211_s+16(%rip)
	movq	%rsi, i211_s+8(%rip)
	movq	%rdi, i211_s(%rip)
	andq	$524287, %rcx           # imm = 0x7FFFF
	movw	%cx, i211_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i211_s+26(%rip)
	ret
.Ltmp210:
	.size	i211_ls, .Ltmp210-i211_ls

	.globl	i212_ls
	.align	16, 0x90
	.type	i212_ls,@function
i212_ls:                                # @i212_ls
# BB#0:
	movq	%rdx, i212_s+16(%rip)
	movq	%rsi, i212_s+8(%rip)
	movq	%rdi, i212_s(%rip)
	andq	$1048575, %rcx          # imm = 0xFFFFF
	movw	%cx, i212_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i212_s+26(%rip)
	ret
.Ltmp211:
	.size	i212_ls, .Ltmp211-i212_ls

	.globl	i213_ls
	.align	16, 0x90
	.type	i213_ls,@function
i213_ls:                                # @i213_ls
# BB#0:
	movq	%rdx, i213_s+16(%rip)
	movq	%rsi, i213_s+8(%rip)
	movq	%rdi, i213_s(%rip)
	andq	$2097151, %rcx          # imm = 0x1FFFFF
	movw	%cx, i213_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i213_s+26(%rip)
	ret
.Ltmp212:
	.size	i213_ls, .Ltmp212-i213_ls

	.globl	i214_ls
	.align	16, 0x90
	.type	i214_ls,@function
i214_ls:                                # @i214_ls
# BB#0:
	movq	%rdx, i214_s+16(%rip)
	movq	%rsi, i214_s+8(%rip)
	movq	%rdi, i214_s(%rip)
	andq	$4194303, %rcx          # imm = 0x3FFFFF
	movw	%cx, i214_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i214_s+26(%rip)
	ret
.Ltmp213:
	.size	i214_ls, .Ltmp213-i214_ls

	.globl	i215_ls
	.align	16, 0x90
	.type	i215_ls,@function
i215_ls:                                # @i215_ls
# BB#0:
	movq	%rdx, i215_s+16(%rip)
	movq	%rsi, i215_s+8(%rip)
	movq	%rdi, i215_s(%rip)
	andq	$8388607, %rcx          # imm = 0x7FFFFF
	movw	%cx, i215_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i215_s+26(%rip)
	ret
.Ltmp214:
	.size	i215_ls, .Ltmp214-i215_ls

	.globl	i216_ls
	.align	16, 0x90
	.type	i216_ls,@function
i216_ls:                                # @i216_ls
# BB#0:
	movq	%rdx, i216_s+16(%rip)
	movq	%rsi, i216_s+8(%rip)
	movq	%rdi, i216_s(%rip)
	movw	%cx, i216_s+24(%rip)
	shrq	$16, %rcx
	movb	%cl, i216_s+26(%rip)
	ret
.Ltmp215:
	.size	i216_ls, .Ltmp215-i216_ls

	.globl	i217_ls
	.align	16, 0x90
	.type	i217_ls,@function
i217_ls:                                # @i217_ls
# BB#0:
	movq	%rdx, i217_s+16(%rip)
	movq	%rsi, i217_s+8(%rip)
	movq	%rdi, i217_s(%rip)
	andl	$33554431, %ecx         # imm = 0x1FFFFFF
	movl	%ecx, i217_s+24(%rip)
	ret
.Ltmp216:
	.size	i217_ls, .Ltmp216-i217_ls

	.globl	i218_ls
	.align	16, 0x90
	.type	i218_ls,@function
i218_ls:                                # @i218_ls
# BB#0:
	movq	%rdx, i218_s+16(%rip)
	movq	%rsi, i218_s+8(%rip)
	movq	%rdi, i218_s(%rip)
	andl	$67108863, %ecx         # imm = 0x3FFFFFF
	movl	%ecx, i218_s+24(%rip)
	ret
.Ltmp217:
	.size	i218_ls, .Ltmp217-i218_ls

	.globl	i219_ls
	.align	16, 0x90
	.type	i219_ls,@function
i219_ls:                                # @i219_ls
# BB#0:
	movq	%rdx, i219_s+16(%rip)
	movq	%rsi, i219_s+8(%rip)
	movq	%rdi, i219_s(%rip)
	andl	$134217727, %ecx        # imm = 0x7FFFFFF
	movl	%ecx, i219_s+24(%rip)
	ret
.Ltmp218:
	.size	i219_ls, .Ltmp218-i219_ls

	.globl	i220_ls
	.align	16, 0x90
	.type	i220_ls,@function
i220_ls:                                # @i220_ls
# BB#0:
	movq	%rdx, i220_s+16(%rip)
	movq	%rsi, i220_s+8(%rip)
	movq	%rdi, i220_s(%rip)
	andl	$268435455, %ecx        # imm = 0xFFFFFFF
	movl	%ecx, i220_s+24(%rip)
	ret
.Ltmp219:
	.size	i220_ls, .Ltmp219-i220_ls

	.globl	i221_ls
	.align	16, 0x90
	.type	i221_ls,@function
i221_ls:                                # @i221_ls
# BB#0:
	movq	%rdx, i221_s+16(%rip)
	movq	%rsi, i221_s+8(%rip)
	movq	%rdi, i221_s(%rip)
	andl	$536870911, %ecx        # imm = 0x1FFFFFFF
	movl	%ecx, i221_s+24(%rip)
	ret
.Ltmp220:
	.size	i221_ls, .Ltmp220-i221_ls

	.globl	i222_ls
	.align	16, 0x90
	.type	i222_ls,@function
i222_ls:                                # @i222_ls
# BB#0:
	movq	%rdx, i222_s+16(%rip)
	movq	%rsi, i222_s+8(%rip)
	movq	%rdi, i222_s(%rip)
	andl	$1073741823, %ecx       # imm = 0x3FFFFFFF
	movl	%ecx, i222_s+24(%rip)
	ret
.Ltmp221:
	.size	i222_ls, .Ltmp221-i222_ls

	.globl	i223_ls
	.align	16, 0x90
	.type	i223_ls,@function
i223_ls:                                # @i223_ls
# BB#0:
	movq	%rdx, i223_s+16(%rip)
	movq	%rsi, i223_s+8(%rip)
	movq	%rdi, i223_s(%rip)
	andl	$2147483647, %ecx       # imm = 0x7FFFFFFF
	movl	%ecx, i223_s+24(%rip)
	ret
.Ltmp222:
	.size	i223_ls, .Ltmp222-i223_ls

	.globl	i224_ls
	.align	16, 0x90
	.type	i224_ls,@function
i224_ls:                                # @i224_ls
# BB#0:
	movq	%rdx, i224_s+16(%rip)
	movq	%rsi, i224_s+8(%rip)
	movq	%rdi, i224_s(%rip)
	movl	%ecx, i224_s+24(%rip)
	ret
.Ltmp223:
	.size	i224_ls, .Ltmp223-i224_ls

	.globl	i225_ls
	.align	16, 0x90
	.type	i225_ls,@function
i225_ls:                                # @i225_ls
# BB#0:
	movq	%rdx, i225_s+16(%rip)
	movq	%rsi, i225_s+8(%rip)
	movq	%rdi, i225_s(%rip)
	movabsq	$8589934591, %rax       # imm = 0x1FFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i225_s+24(%rip)
	shrq	$32, %rax
	movb	%al, i225_s+28(%rip)
	ret
.Ltmp224:
	.size	i225_ls, .Ltmp224-i225_ls

	.globl	i226_ls
	.align	16, 0x90
	.type	i226_ls,@function
i226_ls:                                # @i226_ls
# BB#0:
	movq	%rdx, i226_s+16(%rip)
	movq	%rsi, i226_s+8(%rip)
	movq	%rdi, i226_s(%rip)
	movabsq	$17179869183, %rax      # imm = 0x3FFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i226_s+24(%rip)
	shrq	$32, %rax
	movb	%al, i226_s+28(%rip)
	ret
.Ltmp225:
	.size	i226_ls, .Ltmp225-i226_ls

	.globl	i227_ls
	.align	16, 0x90
	.type	i227_ls,@function
i227_ls:                                # @i227_ls
# BB#0:
	movq	%rdx, i227_s+16(%rip)
	movq	%rsi, i227_s+8(%rip)
	movq	%rdi, i227_s(%rip)
	movabsq	$34359738367, %rax      # imm = 0x7FFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i227_s+24(%rip)
	shrq	$32, %rax
	movb	%al, i227_s+28(%rip)
	ret
.Ltmp226:
	.size	i227_ls, .Ltmp226-i227_ls

	.globl	i228_ls
	.align	16, 0x90
	.type	i228_ls,@function
i228_ls:                                # @i228_ls
# BB#0:
	movq	%rdx, i228_s+16(%rip)
	movq	%rsi, i228_s+8(%rip)
	movq	%rdi, i228_s(%rip)
	movabsq	$68719476735, %rax      # imm = 0xFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i228_s+24(%rip)
	shrq	$32, %rax
	movb	%al, i228_s+28(%rip)
	ret
.Ltmp227:
	.size	i228_ls, .Ltmp227-i228_ls

	.globl	i229_ls
	.align	16, 0x90
	.type	i229_ls,@function
i229_ls:                                # @i229_ls
# BB#0:
	movq	%rdx, i229_s+16(%rip)
	movq	%rsi, i229_s+8(%rip)
	movq	%rdi, i229_s(%rip)
	movabsq	$137438953471, %rax     # imm = 0x1FFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i229_s+24(%rip)
	shrq	$32, %rax
	movb	%al, i229_s+28(%rip)
	ret
.Ltmp228:
	.size	i229_ls, .Ltmp228-i229_ls

	.globl	i230_ls
	.align	16, 0x90
	.type	i230_ls,@function
i230_ls:                                # @i230_ls
# BB#0:
	movq	%rdx, i230_s+16(%rip)
	movq	%rsi, i230_s+8(%rip)
	movq	%rdi, i230_s(%rip)
	movabsq	$274877906943, %rax     # imm = 0x3FFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i230_s+24(%rip)
	shrq	$32, %rax
	movb	%al, i230_s+28(%rip)
	ret
.Ltmp229:
	.size	i230_ls, .Ltmp229-i230_ls

	.globl	i231_ls
	.align	16, 0x90
	.type	i231_ls,@function
i231_ls:                                # @i231_ls
# BB#0:
	movq	%rdx, i231_s+16(%rip)
	movq	%rsi, i231_s+8(%rip)
	movq	%rdi, i231_s(%rip)
	movabsq	$549755813887, %rax     # imm = 0x7FFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i231_s+24(%rip)
	shrq	$32, %rax
	movb	%al, i231_s+28(%rip)
	ret
.Ltmp230:
	.size	i231_ls, .Ltmp230-i231_ls

	.globl	i232_ls
	.align	16, 0x90
	.type	i232_ls,@function
i232_ls:                                # @i232_ls
# BB#0:
	movq	%rdx, i232_s+16(%rip)
	movq	%rsi, i232_s+8(%rip)
	movq	%rdi, i232_s(%rip)
	movl	%ecx, i232_s+24(%rip)
	shrq	$32, %rcx
	movb	%cl, i232_s+28(%rip)
	ret
.Ltmp231:
	.size	i232_ls, .Ltmp231-i232_ls

	.globl	i233_ls
	.align	16, 0x90
	.type	i233_ls,@function
i233_ls:                                # @i233_ls
# BB#0:
	movq	%rdx, i233_s+16(%rip)
	movq	%rsi, i233_s+8(%rip)
	movq	%rdi, i233_s(%rip)
	movabsq	$2199023255551, %rax    # imm = 0x1FFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i233_s+24(%rip)
	shrq	$32, %rax
	movw	%ax, i233_s+28(%rip)
	ret
.Ltmp232:
	.size	i233_ls, .Ltmp232-i233_ls

	.globl	i234_ls
	.align	16, 0x90
	.type	i234_ls,@function
i234_ls:                                # @i234_ls
# BB#0:
	movq	%rdx, i234_s+16(%rip)
	movq	%rsi, i234_s+8(%rip)
	movq	%rdi, i234_s(%rip)
	movabsq	$4398046511103, %rax    # imm = 0x3FFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i234_s+24(%rip)
	shrq	$32, %rax
	movw	%ax, i234_s+28(%rip)
	ret
.Ltmp233:
	.size	i234_ls, .Ltmp233-i234_ls

	.globl	i235_ls
	.align	16, 0x90
	.type	i235_ls,@function
i235_ls:                                # @i235_ls
# BB#0:
	movq	%rdx, i235_s+16(%rip)
	movq	%rsi, i235_s+8(%rip)
	movq	%rdi, i235_s(%rip)
	movabsq	$8796093022207, %rax    # imm = 0x7FFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i235_s+24(%rip)
	shrq	$32, %rax
	movw	%ax, i235_s+28(%rip)
	ret
.Ltmp234:
	.size	i235_ls, .Ltmp234-i235_ls

	.globl	i236_ls
	.align	16, 0x90
	.type	i236_ls,@function
i236_ls:                                # @i236_ls
# BB#0:
	movq	%rdx, i236_s+16(%rip)
	movq	%rsi, i236_s+8(%rip)
	movq	%rdi, i236_s(%rip)
	movabsq	$17592186044415, %rax   # imm = 0xFFFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i236_s+24(%rip)
	shrq	$32, %rax
	movw	%ax, i236_s+28(%rip)
	ret
.Ltmp235:
	.size	i236_ls, .Ltmp235-i236_ls

	.globl	i237_ls
	.align	16, 0x90
	.type	i237_ls,@function
i237_ls:                                # @i237_ls
# BB#0:
	movq	%rdx, i237_s+16(%rip)
	movq	%rsi, i237_s+8(%rip)
	movq	%rdi, i237_s(%rip)
	movabsq	$35184372088831, %rax   # imm = 0x1FFFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i237_s+24(%rip)
	shrq	$32, %rax
	movw	%ax, i237_s+28(%rip)
	ret
.Ltmp236:
	.size	i237_ls, .Ltmp236-i237_ls

	.globl	i238_ls
	.align	16, 0x90
	.type	i238_ls,@function
i238_ls:                                # @i238_ls
# BB#0:
	movq	%rdx, i238_s+16(%rip)
	movq	%rsi, i238_s+8(%rip)
	movq	%rdi, i238_s(%rip)
	movabsq	$70368744177663, %rax   # imm = 0x3FFFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i238_s+24(%rip)
	shrq	$32, %rax
	movw	%ax, i238_s+28(%rip)
	ret
.Ltmp237:
	.size	i238_ls, .Ltmp237-i238_ls

	.globl	i239_ls
	.align	16, 0x90
	.type	i239_ls,@function
i239_ls:                                # @i239_ls
# BB#0:
	movq	%rdx, i239_s+16(%rip)
	movq	%rsi, i239_s+8(%rip)
	movq	%rdi, i239_s(%rip)
	movabsq	$140737488355327, %rax  # imm = 0x7FFFFFFFFFFF
	andq	%rcx, %rax
	movl	%eax, i239_s+24(%rip)
	shrq	$32, %rax
	movw	%ax, i239_s+28(%rip)
	ret
.Ltmp238:
	.size	i239_ls, .Ltmp238-i239_ls

	.globl	i240_ls
	.align	16, 0x90
	.type	i240_ls,@function
i240_ls:                                # @i240_ls
# BB#0:
	movq	%rdx, i240_s+16(%rip)
	movq	%rsi, i240_s+8(%rip)
	movq	%rdi, i240_s(%rip)
	movl	%ecx, i240_s+24(%rip)
	shrq	$32, %rcx
	movw	%cx, i240_s+28(%rip)
	ret
.Ltmp239:
	.size	i240_ls, .Ltmp239-i240_ls

	.globl	i241_ls
	.align	16, 0x90
	.type	i241_ls,@function
i241_ls:                                # @i241_ls
# BB#0:
	movabsq	$562949953421311, %rax  # imm = 0x1FFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rdx, i241_s+16(%rip)
	movq	%rsi, i241_s+8(%rip)
	movq	%rdi, i241_s(%rip)
	movl	%eax, i241_s+24(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i241_s+30(%rip)
	shrq	$32, %rax
	movw	%ax, i241_s+28(%rip)
	ret
.Ltmp240:
	.size	i241_ls, .Ltmp240-i241_ls

	.globl	i242_ls
	.align	16, 0x90
	.type	i242_ls,@function
i242_ls:                                # @i242_ls
# BB#0:
	movabsq	$1125899906842623, %rax # imm = 0x3FFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rdx, i242_s+16(%rip)
	movq	%rsi, i242_s+8(%rip)
	movq	%rdi, i242_s(%rip)
	movl	%eax, i242_s+24(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i242_s+30(%rip)
	shrq	$32, %rax
	movw	%ax, i242_s+28(%rip)
	ret
.Ltmp241:
	.size	i242_ls, .Ltmp241-i242_ls

	.globl	i243_ls
	.align	16, 0x90
	.type	i243_ls,@function
i243_ls:                                # @i243_ls
# BB#0:
	movabsq	$2251799813685247, %rax # imm = 0x7FFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rdx, i243_s+16(%rip)
	movq	%rsi, i243_s+8(%rip)
	movq	%rdi, i243_s(%rip)
	movl	%eax, i243_s+24(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i243_s+30(%rip)
	shrq	$32, %rax
	movw	%ax, i243_s+28(%rip)
	ret
.Ltmp242:
	.size	i243_ls, .Ltmp242-i243_ls

	.globl	i244_ls
	.align	16, 0x90
	.type	i244_ls,@function
i244_ls:                                # @i244_ls
# BB#0:
	movabsq	$4503599627370495, %rax # imm = 0xFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rdx, i244_s+16(%rip)
	movq	%rsi, i244_s+8(%rip)
	movq	%rdi, i244_s(%rip)
	movl	%eax, i244_s+24(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i244_s+30(%rip)
	shrq	$32, %rax
	movw	%ax, i244_s+28(%rip)
	ret
.Ltmp243:
	.size	i244_ls, .Ltmp243-i244_ls

	.globl	i245_ls
	.align	16, 0x90
	.type	i245_ls,@function
i245_ls:                                # @i245_ls
# BB#0:
	movabsq	$9007199254740991, %rax # imm = 0x1FFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rdx, i245_s+16(%rip)
	movq	%rsi, i245_s+8(%rip)
	movq	%rdi, i245_s(%rip)
	movl	%eax, i245_s+24(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i245_s+30(%rip)
	shrq	$32, %rax
	movw	%ax, i245_s+28(%rip)
	ret
.Ltmp244:
	.size	i245_ls, .Ltmp244-i245_ls

	.globl	i246_ls
	.align	16, 0x90
	.type	i246_ls,@function
i246_ls:                                # @i246_ls
# BB#0:
	movabsq	$18014398509481983, %rax # imm = 0x3FFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rdx, i246_s+16(%rip)
	movq	%rsi, i246_s+8(%rip)
	movq	%rdi, i246_s(%rip)
	movl	%eax, i246_s+24(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i246_s+30(%rip)
	shrq	$32, %rax
	movw	%ax, i246_s+28(%rip)
	ret
.Ltmp245:
	.size	i246_ls, .Ltmp245-i246_ls

	.globl	i247_ls
	.align	16, 0x90
	.type	i247_ls,@function
i247_ls:                                # @i247_ls
# BB#0:
	movabsq	$36028797018963967, %rax # imm = 0x7FFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rdx, i247_s+16(%rip)
	movq	%rsi, i247_s+8(%rip)
	movq	%rdi, i247_s(%rip)
	movl	%eax, i247_s+24(%rip)
	movq	%rax, %rcx
	shrq	$48, %rcx
	movb	%cl, i247_s+30(%rip)
	shrq	$32, %rax
	movw	%ax, i247_s+28(%rip)
	ret
.Ltmp246:
	.size	i247_ls, .Ltmp246-i247_ls

	.globl	i248_ls
	.align	16, 0x90
	.type	i248_ls,@function
i248_ls:                                # @i248_ls
# BB#0:
	movq	%rdx, i248_s+16(%rip)
	movq	%rsi, i248_s+8(%rip)
	movq	%rdi, i248_s(%rip)
	movl	%ecx, i248_s+24(%rip)
	movq	%rcx, %rax
	shrq	$48, %rax
	movb	%al, i248_s+30(%rip)
	shrq	$32, %rcx
	movw	%cx, i248_s+28(%rip)
	ret
.Ltmp247:
	.size	i248_ls, .Ltmp247-i248_ls

	.globl	i249_ls
	.align	16, 0x90
	.type	i249_ls,@function
i249_ls:                                # @i249_ls
# BB#0:
	movq	%rdx, i249_s+16(%rip)
	movq	%rsi, i249_s+8(%rip)
	movq	%rdi, i249_s(%rip)
	movabsq	$144115188075855871, %rax # imm = 0x1FFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rax, i249_s+24(%rip)
	ret
.Ltmp248:
	.size	i249_ls, .Ltmp248-i249_ls

	.globl	i250_ls
	.align	16, 0x90
	.type	i250_ls,@function
i250_ls:                                # @i250_ls
# BB#0:
	movq	%rdx, i250_s+16(%rip)
	movq	%rsi, i250_s+8(%rip)
	movq	%rdi, i250_s(%rip)
	movabsq	$288230376151711743, %rax # imm = 0x3FFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rax, i250_s+24(%rip)
	ret
.Ltmp249:
	.size	i250_ls, .Ltmp249-i250_ls

	.globl	i251_ls
	.align	16, 0x90
	.type	i251_ls,@function
i251_ls:                                # @i251_ls
# BB#0:
	movq	%rdx, i251_s+16(%rip)
	movq	%rsi, i251_s+8(%rip)
	movq	%rdi, i251_s(%rip)
	movabsq	$576460752303423487, %rax # imm = 0x7FFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rax, i251_s+24(%rip)
	ret
.Ltmp250:
	.size	i251_ls, .Ltmp250-i251_ls

	.globl	i252_ls
	.align	16, 0x90
	.type	i252_ls,@function
i252_ls:                                # @i252_ls
# BB#0:
	movq	%rdx, i252_s+16(%rip)
	movq	%rsi, i252_s+8(%rip)
	movq	%rdi, i252_s(%rip)
	movabsq	$1152921504606846975, %rax # imm = 0xFFFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rax, i252_s+24(%rip)
	ret
.Ltmp251:
	.size	i252_ls, .Ltmp251-i252_ls

	.globl	i253_ls
	.align	16, 0x90
	.type	i253_ls,@function
i253_ls:                                # @i253_ls
# BB#0:
	movq	%rdx, i253_s+16(%rip)
	movq	%rsi, i253_s+8(%rip)
	movq	%rdi, i253_s(%rip)
	movabsq	$2305843009213693951, %rax # imm = 0x1FFFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rax, i253_s+24(%rip)
	ret
.Ltmp252:
	.size	i253_ls, .Ltmp252-i253_ls

	.globl	i254_ls
	.align	16, 0x90
	.type	i254_ls,@function
i254_ls:                                # @i254_ls
# BB#0:
	movq	%rdx, i254_s+16(%rip)
	movq	%rsi, i254_s+8(%rip)
	movq	%rdi, i254_s(%rip)
	movabsq	$4611686018427387903, %rax # imm = 0x3FFFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rax, i254_s+24(%rip)
	ret
.Ltmp253:
	.size	i254_ls, .Ltmp253-i254_ls

	.globl	i255_ls
	.align	16, 0x90
	.type	i255_ls,@function
i255_ls:                                # @i255_ls
# BB#0:
	movq	%rdx, i255_s+16(%rip)
	movq	%rsi, i255_s+8(%rip)
	movq	%rdi, i255_s(%rip)
	movabsq	$9223372036854775807, %rax # imm = 0x7FFFFFFFFFFFFFFF
	andq	%rcx, %rax
	movq	%rax, i255_s+24(%rip)
	ret
.Ltmp254:
	.size	i255_ls, .Ltmp254-i255_ls

	.globl	i256_ls
	.align	16, 0x90
	.type	i256_ls,@function
i256_ls:                                # @i256_ls
# BB#0:
	movq	%rcx, i256_s+24(%rip)
	movq	%rdx, i256_s+16(%rip)
	movq	%rsi, i256_s+8(%rip)
	movq	%rdi, i256_s(%rip)
	ret
.Ltmp255:
	.size	i256_ls, .Ltmp255-i256_ls


	.section	".note.GNU-stack","",@progbits
