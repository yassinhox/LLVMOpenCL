; ModuleID = '<stdin>'

%0 = type { i32, i32 }

@a = weak constant i32 undef
@b = weak constant i32 5
@c = weak constant %0 { i32 7, i32 9 }

define i32 @la() nounwind readnone {
  %v = load i32* @a
  ret i32 %v
}

define i32 @lb() nounwind readnone {
  %v = load i32* @b
  ret i32 %v
}

define i32 @lc() nounwind readnone {
  %u = load i32* getelementptr inbounds (%0* @c, i32 0, i32 0)
  %v = load i32* getelementptr inbounds (%0* @c, i32 0, i32 1)
  %r = add i32 %v, %u
  ret i32 %r
}

define i32 @f() nounwind readnone {
  %v.i = load i32* @a
  %v.i2 = load i32* @b
  %u.i = load i32* getelementptr inbounds (%0* @c, i32 0, i32 0)
  %v.i1 = load i32* getelementptr inbounds (%0* @c, i32 0, i32 1)
  %r.i = add i32 %v.i2, %v.i
  %r = add i32 %r.i, %u.i
  %s = add i32 %r, %v.i1
  ret i32 %s
}
